\o Program:		@(#)$CDS: icfb.exe version 5.1.0 06/08/2010 11:08 (cicln04) $
\o Hierarchy:		/CMC/EDA/tools/cadence/IC5141USR6_2010/tools.lnx86/dfII/
\o Sub version:		sub-version 5.10.41.500.6.143 (32-bit addresses)
\o Host name (type):	5013-w28 (x86_64)
\o Operating system:	Linux 2.6.32-573.3.1.el6.x86_64 #1 SMP Thu Aug 13 12:55:33 CDT 2015
\o X display name:	:0.0
\o X server:		Scientific Linux
\o Depth of Visual (Root):	24 (24)
\o Number of Planes Used:	24
\o X version:		11.0 (vendor release 11500000)
\o Window Manager:	other
\o User Name:		akolkar
\o Working Directory:	5013-w28:/afs/ualberta.ca/home/a/k/akolkar/ece403-lab3/Cadence
\o Process Id:		7337
\o 
\o COPYRIGHT © 1992-2009  CADENCE DESIGN SYSTEMS INC.  ALL RIGHTS RESERVED.
\o           © 1992-2009  UNIX SYSTEMS Laboratories INC.,
\o                          Reproduced with permission.
\o 
\o This Cadence Design Systems program and online documentation are
\o proprietary/confidential information and may be disclosed/used only
\o as authorized in a license agreement controlling such use and disclosure.
\o 
\o           RESTRICTED RIGHTS NOTICE (SHORT FORM)
\o Use/reproduction/disclosure is subject to restriction
\o set forth at FAR 1252.227-19 or its equivalent.
\p > 
\o 8-bit PseudoColor Visual is not available (default Visual option).
\o Using 24-bit TrueColor Visual.
\o The program xdpyinfo can be used to verify the Visuals available
\o for your display.
\o Loading PRshare.cxt 
\o Loading LVS.cxt 
\o Loading layerProc.cxt 
\o Loading ams.cxt 
\o Loading acv.cxt 
\o Loading auCore.cxt 
\o Loading schView.cxt 
\o Loading selectSv.cxt 
\o Loading seismic.cxt 
\p > 
\a deOpen()
\o *************************************************************
\o *             Generic Standard Cell Library                 *
\o *                                                           *
\o * This library is provided as an education medium. It is    *
\o * based upon the generic process available thru Cadence PDK *
\o * factory in the GPDK Process Delivery Kit.                 *
\o * Cadence shall in no case be liable for the contents of    *
\o * this library.                                             *
\o *                                                           *
\o * GSCLib, v0.91, Oct 2002, Copyright Cadence Design Systems  *
\o * This library can be freely distributed.                   *
\o *                                                           *
\o *************************************************************
\o  
\o Loading custom Skill for GSCLib....
\p > 
\a hiiSetCurrentForm('deOpenForm)
\r t
\a deOpenForm->deLibName->value = "gpdkAssembly"
\r "gpdkAssembly"
\a deOpenForm->deLibName->value = "lab3"
\r "lab3"
\a deOpenForm->deCellChoice->value = '("sorter" )
\r ("sorter")
\a deOpenForm->deCellChoice->value = '("sorter_top" )
\r ("sorter_top")
\a _deCellChoiceCB()
\r "symbol"
\a hiFormDone(deOpenForm)
\r t
\o Initializing diode.cbe from libInit.il for library gpdk...
\o Initializing cap.cbe from libInit.il for library gpdk...
\o Initializing ind.cbe from libInit.il for library gpdk...
\o Initializing moscap.cbe from libInit.il for library gpdk...
\o Initializing bjt.cbe from libInit.il for library gpdk...
\o Initializing mos.cbe from libInit.il for library gpdk...
\o Initializing vpnp.cbe from libInit.il for library gpdk...
\o Initializing res.cbe from libInit.il for library gpdk...
\o Initializing inhTerm.ile from libInit.il for library gpdk...
\o Initializing utility.ile from libInit.il for library gpdk...
\o Initializing mos.ile from libInit.il for library gpdk...
\o Initializing addWire.ile from libInit.il for library gpdk...
\o Initializing moscap.ile from libInit.il for library gpdk...
\o Initializing subtie.ile from libInit.il for library gpdk...
\o Initializing res.ile from libInit.il for library gpdk...
\o Initializing ind.ile from libInit.il for library gpdk...
\o Loading awv.cxt 
\o Loading oasis.cxt 
\o Loading analog.cxt 
\o Loading asimenv.cxt 
\o Loading spectrei.cxt 
\o Loading schematic.cxt 
\o Loading lo.cxt 
\r window:2
\a hiCloseWindow(window(2))
\r t
\a deOpen()
\p > 
\a deOpenForm->deCellChoice->value = '("sim_sorter" )
\r ("sim_sorter")
\a _deCellChoiceCB()
\r "schematic"
\a hiFormDone(deOpenForm)
\r t
\r window:3
\a hiResizeWindow(window(3) list(-4:27 1916:1025))
\r t
\a schZoomFit(1.0 0.9)
\r t
\o Loading alvs.cxt 
\a deInstallApp(getCurrentWindow() "analogArtist-Schematic")
\o Loading simui.cxt 
\o Selecting corner "session-default" so that the model path matches the session default.
\o Loading corners.cxt 
\r t
\a hiResizeWindow(window(4) list(3:361 581:733))
\r t
\a hiResizeWindow(window(4) list(3:363 581:735))
\r t
\a hiResizeWindow(window(4) list(11:362 589:734))
\r t
\a hiResizeWindow(window(4) list(38:351 616:723))
\r t
\a hiResizeWindow(window(4) list(112:339 690:711))
\r t
\a hiResizeWindow(window(4) list(129:337 707:709))
\r t
\a hiResizeWindow(window(4) list(129:337 707:709))
\r t
\a hiResizeWindow(window(4) list(140:334 718:706))
\r t
\a hiResizeWindow(window(4) list(169:331 747:703))
\r t
\a hiResizeWindow(window(4) list(192:324 770:696))
\r t
\a hiResizeWindow(window(4) list(205:324 783:696))
\r t
\a hiResizeWindow(window(4) list(228:315 806:687))
\r t
\a hiResizeWindow(window(4) list(245:315 823:687))
\r t
\a hiResizeWindow(window(4) list(264:322 842:694))
\r t
\a hiResizeWindow(window(4) list(279:322 857:694))
\r t
\a hiResizeWindow(window(4) list(292:317 870:689))
\r t
\a hiResizeWindow(window(4) list(292:318 870:690))
\r t
\a hiResizeWindow(window(4) list(310:317 888:689))
\r t
\a hiResizeWindow(window(4) list(329:317 907:689))
\r t
\a hiResizeWindow(window(4) list(344:317 922:689))
\r t
\a hiResizeWindow(window(4) list(361:315 939:687))
\r t
\a hiResizeWindow(window(4) list(378:312 956:684))
\r t
\a hiResizeWindow(window(4) list(395:310 973:682))
\r t
\a hiResizeWindow(window(4) list(412:310 990:682))
\r t
\a hiResizeWindow(window(4) list(429:313 1007:685))
\r t
\a hiResizeWindow(window(4) list(446:313 1024:685))
\r t
\a hiResizeWindow(window(4) list(459:311 1037:683))
\r t
\a hiResizeWindow(window(4) list(472:311 1050:683))
\r t
\a hiResizeWindow(window(4) list(481:308 1059:680))
\r t
\a hiResizeWindow(window(4) list(482:308 1060:680))
\r t
\a hiResizeWindow(window(4) list(486:306 1064:678))
\r t
\a hiResizeWindow(window(4) list(490:306 1068:678))
\r t
\a hiResizeWindow(window(4) list(496:306 1074:678))
\r t
\a hiResizeWindow(window(4) list(504:304 1082:676))
\r t
\a hiResizeWindow(window(4) list(512:304 1090:676))
\r t
\a hiResizeWindow(window(4) list(523:300 1101:672))
\r t
\a hiResizeWindow(window(4) list(534:298 1112:670))
\r t
\a hiResizeWindow(window(4) list(546:292 1124:664))
\r t
\a hiResizeWindow(window(4) list(565:285 1143:657))
\r t
\a hiResizeWindow(window(4) list(584:278 1162:650))
\r t
\a hiResizeWindow(window(4) list(597:271 1175:643))
\r t
\a hiResizeWindow(window(4) list(645:257 1223:629))
\r t
\a hiResizeWindow(window(4) list(645:257 1223:629))
\r t
\a hiResizeWindow(window(4) list(654:252 1232:624))
\r t
\a hiResizeWindow(window(4) list(696:247 1274:619))
\r t
\a hiResizeWindow(window(4) list(696:247 1274:619))
\r t
\a hiResizeWindow(window(4) list(744:238 1322:610))
\r t
\a hiResizeWindow(window(4) list(744:238 1322:610))
\r t
\a hiResizeWindow(window(4) list(757:238 1335:610))
\r t
\a hiResizeWindow(window(4) list(770:238 1348:610))
\r t
\a hiResizeWindow(window(4) list(783:238 1361:610))
\r t
\a hiResizeWindow(window(4) list(792:238 1370:610))
\r t
\a hiResizeWindow(window(4) list(803:238 1381:610))
\r t
\a hiResizeWindow(window(4) list(814:240 1392:612))
\r t
\a hiResizeWindow(window(4) list(821:240 1399:612))
\r t
\a hiResizeWindow(window(4) list(821:238 1399:610))
\r t
\a hiResizeWindow(window(4) list(820:237 1398:609))
\r t
\a hiResizeWindow(window(4) list(818:237 1396:609))
\r t
\a hiResizeWindow(window(4) list(811:239 1389:611))
\r t
\a hiResizeWindow(window(4) list(805:240 1383:612))
\r t
\a hiResizeWindow(window(4) list(794:237 1372:609))
\r t
\a hiResizeWindow(window(4) list(774:240 1352:612))
\r t
\a hiResizeWindow(window(4) list(763:240 1341:612))
\r t
\a hiResizeWindow(window(4) list(736:243 1314:615))
\r t
\a hiResizeWindow(window(4) list(713:246 1291:618))
\r t
\a hiResizeWindow(window(4) list(690:251 1268:623))
\r t
\a hiResizeWindow(window(4) list(659:253 1237:625))
\r t
\a hiResizeWindow(window(4) list(634:255 1212:627))
\r t
\a hiResizeWindow(window(4) list(621:264 1199:636))
\r t
\a hiResizeWindow(window(4) list(610:266 1188:638))
\r t
\a hiResizeWindow(window(4) list(597:269 1175:641))
\r t
\a hiResizeWindow(window(4) list(578:272 1156:644))
\r t
\a hiResizeWindow(window(4) list(569:274 1147:646))
\r t
\a hiResizeWindow(window(4) list(558:279 1136:651))
\r t
\a hiResizeWindow(window(4) list(533:284 1111:656))
\r t
\a hiResizeWindow(window(4) list(508:284 1086:656))
\r t
\a hiResizeWindow(window(4) list(487:289 1065:661))
\r t
\a hiResizeWindow(window(4) list(464:296 1042:668))
\r t
\a hiResizeWindow(window(4) list(439:303 1017:675))
\r t
\a hiResizeWindow(window(4) list(418:310 996:682))
\r t
\a hiResizeWindow(window(4) list(407:312 985:684))
\r t
\a hiResizeWindow(window(4) list(384:314 962:686))
\r t
\a hiResizeWindow(window(4) list(363:314 941:686))
\r t
\a hiResizeWindow(window(4) list(346:317 924:689))
\r t
\a hiResizeWindow(window(4) list(337:319 915:691))
\r t
\a hiResizeWindow(window(4) list(337:321 915:693))
\r t
\a hiResizeWindow(window(4) list(333:322 911:694))
\r t
\a hiResizeWindow(window(4) list(330:322 908:694))
\r t
\a hiResizeWindow(window(4) list(329:322 907:694))
\r t
\a hiResizeWindow(window(4) list(326:323 904:695))
\r t
\a hiResizeWindow(window(4) list(324:324 902:696))
\r t
\a hiResizeWindow(window(4) list(323:324 901:696))
\r t
\a hiResizeWindow(window(4) list(318:324 896:696))
\r t
\a hiResizeWindow(window(4) list(317:324 895:696))
\r t
\a hiResizeWindow(window(4) list(315:324 893:696))
\r t
\a hiResizeWindow(window(4) list(313:324 891:696))
\r t
\a hiResizeWindow(window(4) list(312:324 890:696))
\r t
\a hiResizeWindow(window(4) list(307:324 885:696))
\r t
\a hiResizeWindow(window(4) list(299:323 877:695))
\r t
\a hiResizeWindow(window(4) list(286:323 864:695))
\r t
\a hiResizeWindow(window(4) list(261:321 839:693))
\r t
\a hiResizeWindow(window(4) list(250:316 828:688))
\r t
\a hiResizeWindow(window(4) list(229:314 807:686))
\r t
\a hiResizeWindow(window(4) list(218:311 796:683))
\r t
\a hiResizeWindow(window(4) list(210:313 788:685))
\r t
\a hiResizeWindow(window(4) list(210:317 788:689))
\r t
\a hiResizeWindow(window(4) list(208:318 786:690))
\r t
\a hiResizeWindow(window(4) list(209:318 787:690))
\r t
\a hiResizeWindow(window(4) list(209:319 787:691))
\r t
\a hiResizeWindow(window(4) list(209:320 787:692))
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a schZoomFit(1.0 0.9)
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevEditSelectedOuts('sevSession1)
\p > 
\a hiiSetCurrentForm('sevOutputsForm1)
\r t
\a hiFormCancel(sevOutputsForm1)
\r t
\r nil
\a sevEditSelectedAnas('sevSession1)
\p > 
\a _asii_spectre0_analysis_form->tran_stop->value = "100n"
\r "100n"
\a _asii_spectre0_analysis_form->tran_enable->boolean->value =  t
\r t
\a hiFormCancel(_asii_spectre0_analysis_form)
\r t
\r nil
\a sevChooseSimulator('sevSession1)
\p > 
\a hiiSetCurrentForm('sevSimulatorForm1)
\r t
\a sevSimulatorForm1->simulator->value = "UltraSim"
\r "UltraSim"
\a hiFormDone(sevSimulatorForm1)
\o Loading cdf.cxt 
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\o Loading hspiceD.cxt 
\o Loading spectreinl.cxt 
\o Loading UltraSim.cxt 
\o Selecting corner "session-default" so that the model path matches the session default.
\r t
\r t
\a hiResizeWindow(window(4) list(218:315 796:687))
\r t
\a hiResizeWindow(window(4) list(225:310 803:682))
\r t
\a hiResizeWindow(window(4) list(230:308 808:680))
\r t
\a hiResizeWindow(window(4) list(240:307 818:679))
\r t
\a hiResizeWindow(window(4) list(255:304 833:676))
\r t
\a hiResizeWindow(window(4) list(272:302 850:674))
\r t
\a hiResizeWindow(window(4) list(289:300 867:672))
\r t
\a hiResizeWindow(window(4) list(314:298 892:670))
\r t
\a hiResizeWindow(window(4) list(337:293 915:665))
\r t
\a hiResizeWindow(window(4) list(358:293 936:665))
\r t
\a hiResizeWindow(window(4) list(379:293 957:665))
\r t
\a hiResizeWindow(window(4) list(386:293 964:665))
\r t
\a hiResizeWindow(window(4) list(387:293 965:665))
\r t
\a hiResizeWindow(window(4) list(405:291 983:663))
\r t
\a hiResizeWindow(window(4) list(426:291 1004:663))
\r t
\a hiResizeWindow(window(4) list(439:291 1017:663))
\r t
\a hiResizeWindow(window(4) list(452:291 1030:663))
\r t
\a hiResizeWindow(window(4) list(463:291 1041:663))
\r t
\a hiResizeWindow(window(4) list(468:291 1046:663))
\r t
\a hiResizeWindow(window(4) list(481:294 1059:666))
\r t
\a hiResizeWindow(window(4) list(496:294 1074:666))
\r t
\a hiResizeWindow(window(4) list(511:292 1089:664))
\r t
\a hiResizeWindow(window(4) list(528:289 1106:661))
\r t
\a hiResizeWindow(window(4) list(547:294 1125:666))
\r t
\a hiResizeWindow(window(4) list(586:294 1164:666))
\r t
\a hiResizeWindow(window(4) list(615:292 1193:664))
\r t
\a hiResizeWindow(window(4) list(622:292 1200:664))
\r t
\a hiResizeWindow(window(4) list(637:295 1215:667))
\r t
\a hiResizeWindow(window(4) list(656:295 1234:667))
\r t
\a hiResizeWindow(window(4) list(677:298 1255:670))
\r t
\a hiResizeWindow(window(4) list(696:301 1274:673))
\r t
\a hiResizeWindow(window(4) list(698:301 1276:673))
\r t
\a hiResizeWindow(window(4) list(713:303 1291:675))
\r t
\a hiResizeWindow(window(4) list(734:305 1312:677))
\r t
\a hiResizeWindow(window(4) list(753:314 1331:686))
\r t
\a hiResizeWindow(window(4) list(786:316 1364:688))
\r t
\a hiResizeWindow(window(4) list(793:316 1371:688))
\r t
\a hiResizeWindow(window(4) list(818:321 1396:693))
\r t
\a hiResizeWindow(window(4) list(845:323 1423:695))
\r t
\a hiResizeWindow(window(4) list(872:325 1450:697))
\r t
\a hiResizeWindow(window(4) list(897:325 1475:697))
\r t
\a hiResizeWindow(window(4) list(906:332 1484:704))
\r t
\a hiResizeWindow(window(4) list(927:339 1505:711))
\r t
\a hiResizeWindow(window(4) list(940:337 1518:709))
\r t
\a hiResizeWindow(window(4) list(953:337 1531:709))
\r t
\a hiResizeWindow(window(4) list(955:337 1533:709))
\r t
\a hiResizeWindow(window(4) list(956:338 1534:710))
\r t
\a hiResizeWindow(window(4) list(960:339 1538:711))
\r t
\a hiResizeWindow(window(4) list(970:345 1548:717))
\r t
\a hiResizeWindow(window(4) list(979:347 1557:719))
\r t
\a hiResizeWindow(window(4) list(987:348 1565:720))
\r t
\a hiResizeWindow(window(4) list(994:348 1572:720))
\r t
\a hiResizeWindow(window(4) list(1001:344 1579:716))
\r t
\a hiResizeWindow(window(4) list(1009:348 1587:720))
\r t
\a hiResizeWindow(window(4) list(1016:352 1594:724))
\r t
\a hiResizeWindow(window(4) list(1024:352 1602:724))
\r t
\a hiResizeWindow(window(4) list(1025:352 1603:724))
\r t
\a hiResizeWindow(window(4) list(1031:352 1609:724))
\r t
\a hiResizeWindow(window(4) list(1032:352 1610:724))
\r t
\a hiResizeWindow(window(4) list(1036:352 1614:724))
\r t
\a hiResizeWindow(window(4) list(1038:352 1616:724))
\r t
\a hiResizeWindow(window(4) list(1045:352 1623:724))
\r t
\a hiResizeWindow(window(4) list(1050:352 1628:724))
\r t
\a hiResizeWindow(window(4) list(1053:352 1631:724))
\r t
\a hiResizeWindow(window(4) list(1055:352 1633:724))
\r t
\a hiResizeWindow(window(4) list(1062:354 1640:726))
\r t
\a hiResizeWindow(window(4) list(1069:356 1647:728))
\r t
\a hiResizeWindow(window(4) list(1076:357 1654:729))
\r t
\a hiResizeWindow(window(4) list(1083:357 1661:729))
\r t
\a hiResizeWindow(window(4) list(1090:359 1668:731))
\r t
\a hiResizeWindow(window(4) list(1100:361 1678:733))
\r t
\a hiResizeWindow(window(4) list(1112:362 1690:734))
\r t
\a hiResizeWindow(window(4) list(1123:362 1701:734))
\r t
\a hiResizeWindow(window(4) list(1137:367 1715:739))
\r t
\a hiResizeWindow(window(4) list(1152:365 1730:737))
\r t
\a hiResizeWindow(window(4) list(1166:368 1744:740))
\r t
\a hiResizeWindow(window(4) list(1178:370 1756:742))
\r t
\a hiResizeWindow(window(4) list(1189:365 1767:737))
\r t
\a hiResizeWindow(window(4) list(1206:367 1784:739))
\r t
\a hiResizeWindow(window(4) list(1217:369 1795:741))
\r t
\a hiResizeWindow(window(4) list(1228:371 1806:743))
\r t
\a hiResizeWindow(window(4) list(1236:371 1814:743))
\r t
\a hiResizeWindow(window(4) list(1245:374 1823:746))
\r t
\a hiResizeWindow(window(4) list(1250:376 1828:748))
\r t
\a hiResizeWindow(window(4) list(1257:378 1835:750))
\r t
\a hiResizeWindow(window(4) list(1258:378 1836:750))
\r t
\a hiResizeWindow(window(4) list(1261:378 1839:750))
\r t
\a hiResizeWindow(window(4) list(1262:379 1840:751))
\r t
\a hiResizeWindow(window(4) list(1266:382 1844:754))
\r t
\a hiResizeWindow(window(4) list(1267:382 1845:754))
\r t
\a hiResizeWindow(window(4) list(1268:382 1846:754))
\r t
\a hiResizeWindow(window(4) list(1269:383 1847:755))
\r t
\a hiResizeWindow(window(4) list(1270:384 1848:756))
\r t
\a hiResizeWindow(window(4) list(1273:384 1851:756))
\r t
\a hiResizeWindow(window(4) list(1276:386 1854:758))
\r t
\a hiResizeWindow(window(4) list(1277:387 1855:759))
\r t
\a hiResizeWindow(window(4) list(1280:389 1858:761))
\r t
\a hiResizeWindow(window(4) list(1285:392 1863:764))
\r t
\a hiResizeWindow(window(4) list(1292:396 1870:768))
\r t
\a hiResizeWindow(window(4) list(1300:396 1878:768))
\r t
\a hiResizeWindow(window(4) list(1309:400 1887:772))
\r t
\a hiResizeWindow(window(4) list(1317:402 1895:774))
\r t
\a hiResizeWindow(window(4) list(1318:402 1896:774))
\r t
\a hiResizeWindow(window(4) list(1320:402 1898:774))
\r t
\a hiResizeWindow(window(4) list(1321:402 1899:774))
\r t
\a hiResizeWindow(window(4) list(1323:405 1901:777))
\r t
\a hiResizeWindow(window(4) list(1319:415 1897:787))
\r t
\a hiResizeWindow(window(4) list(1314:424 1892:796))
\r t
\a hiResizeWindow(window(4) list(1309:431 1887:803))
\r t
\a hiResizeWindow(window(4) list(1305:439 1883:811))
\r t
\a hiResizeWindow(window(4) list(1300:447 1878:819))
\r t
\a hiResizeWindow(window(4) list(1293:456 1871:828))
\r t
\a hiResizeWindow(window(4) list(1287:463 1865:835))
\r t
\a hiResizeWindow(window(4) list(1282:469 1860:841))
\r t
\a hiResizeWindow(window(4) list(1277:471 1855:843))
\r t
\a hiResizeWindow(window(4) list(1276:476 1854:848))
\r t
\a hiResizeWindow(window(4) list(1276:477 1854:849))
\r t
\a hiResizeWindow(window(4) list(1275:478 1853:850))
\r t
\a hiResizeWindow(window(4) list(1274:478 1852:850))
\r t
\a hiResizeWindow(window(4) list(1273:479 1851:851))
\r t
\a hiResizeWindow(window(4) list(1273:478 1851:850))
\r t
\a hiResizeWindow(window(4) list(1273:476 1851:848))
\r t
\a hiResizeWindow(window(4) list(1272:474 1850:846))
\r t
\a hiResizeWindow(window(4) list(1271:473 1849:845))
\r t
\a hiResizeWindow(window(4) list(1269:472 1847:844))
\r t
\a hiResizeWindow(window(4) list(1267:470 1845:842))
\r t
\a sevEditModels('sevSession1)
\r t
\a hiiSetCurrentForm('editModelsForm)
\r t
\a editModelsForm->modelLibLibrariesFileStringField->value="/EDA/kits/gpdk18/models/gpdk.scs"
\r "/EDA/kits/gpdk18/models/gpdk.scs"
\a editModelsForm->modelLibLibrariesSectionStringField->value = "NN"
\r "NN"
\a _asiModelLibraryCBRoutine('modelLib_AddButton)
\r t
\a hiFormDone(editModelsForm)
\r t
\a sevChooseEnvironmentOptions('sevSession1)
\p > 
\a hiiSetCurrentForm('_asii_UltraSim1_envOpts_form)
\r t
\a _asii_UltraSim1_envOpts_form->switchViewList->value = "extractedC spectre cmos_sch cmos.sch schematic veriloga"
\r "extractedC spectre cmos_sch cmos.sch schematic veriloga"
\a hiFormDone(_asii_UltraSim1_envOpts_form)
\r t
\r t
\a deOpen()
\p > 
\a hiiSetCurrentForm('deOpenForm)
\r t
\a deOpenForm->deCellChoice->value = '("sorter_top" )
\r ("sorter_top")
\a _deCellChoiceCB()
\r "schematic"
\a hiFormDone(deOpenForm)
\r t
\r window:5
\a hiResizeWindow(window(5) list(-4:27 1916:1025))
\r t
\a schZoomFit(1.0 0.9)
\r t
\a hiCloseWindow(window(5))
\r t
\a deOpen()
\p > 
\a deOpenForm->deLibName->value = "lab3"
\r "lab3"
\a deOpenForm->deViewName->value = "layout"
\r "layout"
\a hiFormDone(deOpenForm)
\r t
\o Loading le.cxt 
\o Loading subx.cxt 
\o Loading layers.cxt 
\o =======Start Virtuoso Preview environment=======
\o Loading lefdef.cxt 
\o Loading asgUtil.cxt 
\o Loading ADPshare.cxt 
\o Loading FLutil.cxt 
\o Loading techComp.cxt 
\r window:6
\a hiResizeWindow(window(6) list(120:185 1020:875))
\r t
\a hiResizeWindow(window(6) list(120:185 1020:875))
\r t
\a hiResizeWindow(window(6) list(-4:27 1916:1025))
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a deInstallApp(getCurrentWindow() "Layout")
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a hiGetCurrentWindow()->stopLevel = dbGetMaxHierDepth()
\r 32
\a ivHiExtract()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a ivDRCExtSetSwitches('Extract)
\o Parsing drcExtractRules of "/CMC/EDA/kits/gpdk_MIET_2.0/gpdk/divaEXT.rul"...
\o 
\o  DIVA GPDK Extract Rules
\o *****
\o ***** DO NOT SELECT BOTH PARASITIC_C AND PARASITIC_RC
\o  *****
\o 
\o  DIVA GPDK Extract Rules
\o *****
\o ***** DO NOT SELECT BOTH PARASITIC_C AND PARASITIC_RC
\o  *****
\o Optimizing rules...
\p > 
\a ivDRCExtSwitchesListBox->value = '( "PARASITIC_C" )
\r ("PARASITIC_C")
\a hiListBoxDone(ivDRCExtSwitchesListBox)
\r t
\r nil
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Mon Apr  3 19:49:10 2017
\o 
\o Validating hierarchy instantiation for:
\o library: lab3
\o cell:    sorter_top
\o view:    layout
\o Rules come from library gpdk.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Switches used: PARASITIC_C.
\o Parsing drcExtractRules of "/CMC/EDA/kits/gpdk_MIET_2.0/gpdk/divaEXT.rul"...
\o 
\o  DIVA GPDK Extract Rules
\o info: If short location check is desired later on, check the saveInterconnect
\o  statement for correctness:
\o  Interconnect layer ndiff, pdiff, ntie, ptie, nbtie, pdiodePlus, ndiodeMinus, nmoscapm1, vpnpEmit, vpnpBase, vpnpColl, npnEmit, npnBase, npnColl, pnpEmit, pnpBase, pnpColl, nmoscapm2, Via3, Metal4, Via4, Metal5, Via5, Metal6, gateCont, polyIntConnector, polyIntCont, m1MoscapCont, m1MoscapConnector, Moscapm1Cont, m2MoscapCont, m2MoscapConnector, Moscapm2Cont, m1vpnpCont, m1vpnpConnector, vpnpm1Cont, m2vpnpCont, m2vpnpConnector, vpnpm2Cont, m3vpnpCont, m3vpnpConnector, vpnpm3Cont, m1npnCont, m1npnConnector, npnm1Cont, m2npnCont, m2npnConnector, npnm2Cont, m3npnCont, m3npnConnector, npnm3Cont, m1pnpCont, m1pnpConnector, pnpm1Cont, m2pnpCont, m2pnpConnector, pnpm2Cont, m3pnpCont, m3pnpConnector, pnpm3Cont, m2IntIndPlusCont, m2IntIndPlusConnector, m2IndInt, m2PlusCont, m2IntIndMinusCont, m2IntIndMinusConnector, m2MinusCont, m2IntInddmyCont, m2IntInddmyConnector, Inddmym2Cont, m3IntInddmyCont, m3IntInddmyConnector, Inddmym3Cont, inddmym3, v2Ind, m2Ind, m3Ind, m2IntCapCont, m2IntCapConnector, capm2Cont, m3IntCapCont, m3IntCapConnector, capm3Cont, capv23, CapMetal, scaVia, scaCont, scaPort, scaNwell, scaNburied not saved.
\o  Interconnect layers merged on save: m2IndMinus, m2IndPlus, capm2, pnpm2, npnm2, vpnpm2, Metal2.
\o  Interconnect layers merged on save: capm3, pnpm3, npnm3, vpnpm3, Metal3.
\o  Interconnect layers merged on save: pnpm1, npnm1, vpnpm1, Metal1.
\o  Interconnect layers merged on save: bjtCont, Cont.
\o  Interconnect layers merged on save: gate, polyInt.
\o  
\o Optimizing rules...
\o removing unused task: scaSelect = geomOr("scaSelect")
\o removing unused task: text = geomOr("text")
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: geomErase("marker" "error")
\o executing: geomErase("marker" "warning")
\o executing: geomErase("changedLayer" "tool0")
\o executing: Nwell = geomOr("Nwell")
\o executing: Nburied = geomOr("Nburied")
\o executing: Pwell = geomOr("Pwell")
\o executing: Oxide = geomOr("Oxide")
\o executing: Poly = geomOr("Poly")
\o executing: Pimp = geomOr("Pimp")
\o executing: Nimp = geomOr("Nimp")
\o executing: Cont = geomOr("Cont")
\o executing: Metal1 = geomOr("Metal1")
\o executing: Via1 = geomOr("Via1")
\o executing: Metal2 = geomOr("Metal2")
\o executing: Via2 = geomOr("Via2")
\o executing: Metal3 = geomOr("Metal3")
\o executing: Via3 = geomOr("Via3")
\o executing: Metal4 = geomOr("Metal4")
\o executing: Via4 = geomOr("Via4")
\o executing: Metal5 = geomOr("Metal5")
\o executing: Via5 = geomOr("Via5")
\o executing: Metal6 = geomOr("Metal6")
\o executing: CapMetal = geomOr("CapMetal")
\o executing: Capdum = geomOr("Capdum")
\o executing: Resdum = geomOr("Resdum")
\o executing: BJTdum = geomOr("BJTdum")
\o executing: NPNdummy = geomOr("NPNdummy")
\o executing: PNPdummy = geomOr("PNPdummy")
\o executing: IND2dummy = geomOr("IND2dummy")
\o executing: INDdummy = geomOr("INDdummy")
\o executing: DIOdummy = geomOr("DIOdummy")
\o executing: bulk = geomBkgnd()
\o executing: Psub = geomAndNot(bulk geomOr(Nwell Nburied))
\o executing: isoPsub = geomAnd(geomAndNot(bulk Nwell) Nburied)
\o executing: allPsub = geomOr(Psub isoPsub)
\o executing: NPOD = geomAnd(Nimp Oxide)
\o executing: ntox = geomAnd(NPOD allPsub)
\o executing: ngate = geomAndNot(geomAnd(ntox Poly) Capdum)
\o executing: ndiff = geomAndNot(ntox ngate)
\o executing: ntie = geomAnd(NPOD Nwell)
\o executing: nmosdev = geomOr(ngate)
\o executing: nmos = geomAnd(nmosdev Psub)
\o executing: isonmos = geomAnd(nmosdev isoPsub)
\o executing: PPOD = geomAnd(Pimp Oxide)
\o executing: ptox = geomAnd(PPOD Nwell)
\o executing: pgate = geomAndNot(geomAnd(ptox Poly) Capdum)
\o executing: pdiff = geomAndNot(ptox pgate)
\o executing: ptie = geomAnd(PPOD Psub)
\o executing: nbtie = geomAnd(PPOD isoPsub)
\o executing: pmos = geomOr(pgate)
\o executing: polyres = geomAnd(Poly Resdum)
\o executing: Poly = geomAndNot(Poly polyres)
\o executing: nplusresdev = geomAnd(ntox Resdum)
\o executing: nplusres = geomAnd(nplusresdev Psub)
\o executing: isonplusres = geomAnd(nplusresdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff nplusresdev)
\o executing: nmoscapdev = geomAnd(geomAnd(ntox Capdum) Poly)
\o executing: nmoscap = geomAnd(nmoscapdev Psub)
\o executing: isonmoscap = geomAnd(nmoscapdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff geomOr(nmoscap isonmoscap))
\o executing: nmoscapm1 = geomAnd(Metal1 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal1 = geomAndNot(Metal1 nmoscapm1)
\o executing: nmoscapm2 = geomAnd(Metal2 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal2 = geomAndNot(Metal2 nmoscapm2)
\o executing: m1MoscapConnector = geomAnd(geomSize(Metal1 0.01) geomSize(nmoscapm1 0.01))
\o executing: m1MoscapCont = geomAnd(Metal1 m1MoscapConnector)
\o executing: Moscapm1Cont = geomAnd(nmoscapm1 m1MoscapConnector)
\o executing: m2MoscapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(nmoscapm2 0.01))
\o executing: m2MoscapCont = geomAnd(Metal2 m2MoscapConnector)
\o executing: Moscapm2Cont = geomAnd(nmoscapm2 m2MoscapConnector)
\o executing: mimcap = geomAnd(Capdum CapMetal)
\o executing: capm2 = geomAnd(Metal2 Capdum)
\o executing: capm3 = geomAnd(Metal3 Capdum)
\o executing: capv23 = geomAnd(Via2 CapMetal)
\o executing: Via2 = geomAndNot(Via2 capv23)
\o executing: Metal2 = geomAndNot(Metal2 capm2)
\o executing: m2IntCapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(capm2 0.01))
\o executing: m2IntCapCont = geomAnd(Metal2 m2IntCapConnector)
\o executing: capm2Cont = geomAnd(capm2 m2IntCapConnector)
\o executing: Metal3 = geomAndNot(Metal3 capm3)
\o executing: m3IntCapConnector = geomAnd(geomSize(Metal3 0.01) geomSize(capm3 0.01))
\o executing: m3IntCapCont = geomAnd(Metal3 m3IntCapConnector)
\o executing: capm3Cont = geomAnd(capm3 m3IntCapConnector)
\o executing: pdiodePlus = geomAnd(DIOdummy ptox)
\o executing: pdiode = geomEnclose(DIOdummy pdiodePlus)
\o executing: ndiodeMinus = geomAnd(DIOdummy ntox)
\o executing: ndiode = geomEnclose(DIOdummy ndiodeMinus)
\o executing: vpnpBase = geomAnd(BJTdum ntie)
\o executing: vpnpColl = geomAnd(BJTdum ptie)
\o executing: vpnpEmit = geomAnd(BJTdum ptox)
\o executing: vpnp = geomEnclose(BJTdum vpnpEmit)
\o executing: vpnpm1 = geomAnd(BJTdum Metal1)
\o executing: vpnpm2 = geomAnd(BJTdum Metal2)
\o executing: vpnpm3 = geomAnd(BJTdum Metal3)
\o executing: bjtCont = geomAnd(Cont geomOr(BJTdum NPNdummy PNPdummy))
\o executing: Cont = geomAndNot(Cont bjtCont)
\o executing: Metal1 = geomAndNot(Metal1 vpnpm1)
\o executing: m1vpnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(vpnpm1 0.01))
\o executing: m1vpnpCont = geomAnd(Metal1 m1vpnpConnector)
\o executing: vpnpm1Cont = geomAnd(vpnpm1 m1vpnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 vpnpm2)
\o executing: m2vpnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(vpnpm2 0.01))
\o executing: m2vpnpCont = geomAnd(Metal2 m2vpnpConnector)
\o executing: vpnpm2Cont = geomAnd(vpnpm2 m2vpnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 vpnpm3)
\o executing: m3vpnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(vpnpm3 0.01))
\o executing: m3vpnpCont = geomAnd(Metal3 m3vpnpConnector)
\o executing: vpnpm3Cont = geomAnd(vpnpm3 m3vpnpConnector)
\o executing: npnBase = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) PPOD)
\o executing: npnColl = geomAnd(geomAndNot(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npnEmit = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npn = geomEnclose(NPNdummy npnEmit)
\o executing: npnm1 = geomAnd(NPNdummy Metal1)
\o executing: npnm2 = geomAnd(NPNdummy Metal2)
\o executing: npnm3 = geomAnd(NPNdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 npnm1)
\o executing: m1npnConnector = geomAnd(geomSize(Metal1 0.01) geomSize(npnm1 0.01))
\o executing: m1npnCont = geomAnd(Metal1 m1npnConnector)
\o executing: npnm1Cont = geomAnd(npnm1 m1npnConnector)
\o executing: Metal2 = geomAndNot(Metal2 npnm2)
\o executing: m2npnConnector = geomAnd(geomSize(Metal2 0.01) geomSize(npnm2 0.01))
\o executing: m2npnCont = geomAnd(Metal2 m2npnConnector)
\o executing: npnm2Cont = geomAnd(npnm2 m2npnConnector)
\o executing: Metal3 = geomAndNot(Metal3 npnm3)
\o executing: m3npnConnector = geomAnd(geomSize(Metal3 0.01) geomSize(npnm3 0.01))
\o executing: m3npnCont = geomAnd(Metal3 m3npnConnector)
\o executing: npnm3Cont = geomAnd(npnm3 m3npnConnector)
\o executing: pnpBase = geomAnd(geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) ntie)
\o executing: pnpColl = geomAnd(geomAndNot(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) PPOD)
\o executing: pnpEmit = geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) ptox)
\o executing: pnp = geomEnclose(PNPdummy pnpEmit)
\o executing: pnpm1 = geomAnd(PNPdummy Metal1)
\o executing: pnpm2 = geomAnd(PNPdummy Metal2)
\o executing: pnpm3 = geomAnd(PNPdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 pnpm1)
\o executing: m1pnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(pnpm1 0.01))
\o executing: m1pnpCont = geomAnd(Metal1 m1pnpConnector)
\o executing: pnpm1Cont = geomAnd(pnpm1 m1pnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 pnpm2)
\o executing: m2pnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(pnpm2 0.01))
\o executing: m2pnpCont = geomAnd(Metal2 m2pnpConnector)
\o executing: pnpm2Cont = geomAnd(pnpm2 m2pnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 pnpm3)
\o executing: m3pnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(pnpm3 0.01))
\o executing: m3pnpCont = geomAnd(Metal3 m3pnpConnector)
\o executing: pnpm3Cont = geomAnd(pnpm3 m3pnpConnector)
\o executing: m3Ind = geomAnd(geomAnd(Metal3 IND2dummy) INDdummy)
\o executing: v2Ind = geomAnd(Via2 m3Ind)
\o executing: Via2 = geomAndNot(Via2 v2Ind)
\o executing: m2Ind = geomAnd(geomAnd(Metal2 IND2dummy) INDdummy)
\o executing: inductor = geomAnd(INDdummy m3Ind)
\o executing: m2Pieces = geomAndNot(m2Ind m3Ind)
\o executing: m2IndPlus = geomStraddle(m2Ind m2Pieces)
\o executing: m2IndMinus = geomAndNot(m2Ind m2IndPlus)
\o executing: inddmym2 = geomAnd(Metal2 INDdummy)
\o executing: m2IndInt = geomAndNot(inddmym2 geomOr(m2IndPlus m2IndMinus))
\o executing: m2IntIndPlusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndPlus 0.01))
\o executing: m2IntIndPlusCont = geomAnd(m2IndInt m2IntIndPlusConnector)
\o executing: m2PlusCont = geomAnd(m2IndPlus m2IntIndPlusConnector)
\o executing: m2IntIndMinusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndMinus 0.01))
\o executing: m2IntIndMinusCont = geomAnd(m2IndInt m2IntIndMinusConnector)
\o executing: m2MinusCont = geomAnd(m2IndMinus m2IntIndMinusConnector)
\o executing: Metal2 = geomAndNot(Metal2 inddmym2)
\o executing: m2IntInddmyConnector = geomAnd(geomSize(Metal2 0.01) geomSize(m2IndInt 0.01))
\o executing: m2IntInddmyCont = geomAnd(Metal2 m2IntInddmyConnector)
\o executing: Inddmym2Cont = geomAnd(m2IndInt m2IntInddmyConnector)
\o executing: inddmym3 = geomAnd(Metal3 INDdummy)
\o executing: Metal3 = geomAndNot(Metal3 inddmym3)
\o executing: m3IntInddmyConnector = geomAnd(geomSize(Metal3 0.01) geomSize(inddmym3 0.01))
\o executing: m3IntInddmyCont = geomAnd(Metal3 m3IntInddmyConnector)
\o executing: Inddmym3Cont = geomAnd(inddmym3 m3IntInddmyConnector)
\o executing: m2outsideInd = geomAndNot(inddmym2 IND2dummy)
\o executing: sized_m3Ind = geomSize(geomSize(m3Ind 9) -9)
\o executing: m3Ind_hole = geomHoles(sized_m3Ind)
\o executing: dummy_area = geomAndNot(IND2dummy geomOr(sized_m3Ind m3Ind_hole))
\o executing: m3Ind_separation_blocks = drc(m3Ind (notch < 20) opposite shielded)
\o executing: m3Ind_separation_area = geomAndNot(drc(m3Ind (notch < 20) shielded) geomOr(m3Ind_hol...
\o executing: gate = geomOr(nmos isonmos pmos nmoscap isonmoscap)
\o executing: polyInt = geomAndNot(Poly gate)
\o executing: polyIntConnector = geomAnd(geomSize(polyInt 0.01) geomSize(gate 0.01))
\o executing: polyIntCont = geomAnd(polyInt polyIntConnector)
\o executing: gateCont = geomAnd(gate polyIntConnector)
\o executing: scaVia = geomEmpty()
\o executing: scaCont = geomEmpty()
\o executing: scaPort = geomEmpty()
\o executing: scaNwell = geomEmpty()
\o executing: scaNburied = geomEmpty()
\o executing: nonResConts = geomAndNot(Cont geomButting(Cont Resdum))
\o executing: overUnderCont = geomSize(geomSize(nonResConts 0.125) -0.125)
\o executing: OverUnderVia1 = geomSize(geomSize(Via1 0.175) -0.175)
\o executing: OverUnderVia2 = geomSize(geomSize(Via2 0.175) -0.175)
\o executing: OverUnderVia3 = geomSize(geomSize(Via3 0.175) -0.175)
\o executing: OverUnderVia4 = geomSize(geomSize(Via4 0.175) -0.175)
\o executing: OverUnderVia5 = geomSize(geomSize(Via5 0.175) -0.175)
\o executing: Cont = geomOr(overUnderCont Cont)
\o executing: Via1 = geomOr(OverUnderVia1 Via1)
\o executing: Via2 = geomOr(OverUnderVia2 Via2)
\o executing: Via3 = geomOr(OverUnderVia3 Via3)
\o executing: Via4 = geomOr(OverUnderVia4 Via4)
\o executing: Via5 = geomOr(OverUnderVia5 Via5)
\o executing: geomConnect((via Cont polyInt ndiff pdiff ntie ptie nbtie pdiodePlus ndiodeMinus nmo...
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\o executing: Psub = geomStamp(Psub ptie error)
\o executing: isoPsub = geomStamp(isoPsub nbtie error)
\o executing: Nwell = geomStamp(Nwell ntie error)
\o executing: plateCap = multiLevelParasitic((layers Psub isoPsub Nwell polyInt ndiff pdiff Metal1...
\o executing: pliFringe = measureFringe(polyInt (calculate ((l * plIntFringe) / s)) ((0.01 < sep) ...
\o executing: plgFringe = measureFringe(polyInt gate (calculate ((l * plIntFringe) / s)) ((0.01 < ...
\o executing: m1Fringe = measureFringe(Metal1 (calculate ((l * m1FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m1plFringe = measureFringe(Metal1 polyInt (calculate ((l * m1PlFringe) / s)) ((0.01 ...
\o executing: m2Fringe = measureFringe(Metal2 (calculate ((l * m2FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m2m1Fringe = measureFringe(Metal2 Metal1 (calculate ((l * m2M1Fringe) / s)) ((0.01 <...
\o executing: m3Fringe = measureFringe(Metal3 (calculate ((l * m3FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m3m2Fringe = measureFringe(Metal3 Metal2 (calculate ((l * m3M2Fringe) / s)) ((0.01 <...
\o executing: m4Fringe = measureFringe(Metal4 (calculate ((l * m4FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m4m3Fringe = measureFringe(Metal4 Metal3 (calculate ((l * m4M3Fringe) / s)) ((0.01 <...
\o executing: m5Fringe = measureFringe(Metal5 (calculate ((l * m5FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m5m4Fringe = measureFringe(Metal5 Metal4 (calculate ((l * m5M4Fringe) / s)) ((0.01 <...
\o executing: m6Fringe = measureFringe(Metal6 (calculate ((l * m6FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m6m5Fringe = measureFringe(Metal6 Metal5 (calculate ((l * m6M5Fringe) / s)) ((0.01 <...
\o executing: fringeCap = calculateParasitic((pliFringe + plgFringe + m1Fringe + m1plFringe + m2Fr...
\o executing: totalCap = calculateParasitic(((plateCap + fringeCap) * fF) (ignore < ignoreThreshold))
\o executing: saveParasitic(totalCap "PLUS" "MINUS" "c" "pcapacitor ivpcell gpdk")
\o 13272 pcapacitor ivpcell gpdk parasitics created.
\o executing: extractDevice(nmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" phys...
\o            extractDevice(nmos (gate "G") (ndiff "S" "D") (Psub "B") "nmos ivpcell gpdk" physical)
\o For layer nmos :
\o     3462  shapes encountered.
\o     3462  nmos ivpcell gpdk devices well formed.
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") nmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside nmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") nmos shared)
\o executing: l_NMOS = measureParameter(length (nmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (nmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(isonmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" p...
\o            extractDevice(isonmos (gate "G") (ndiff "S" "D") (isoPsub "B") "nmos ivpcell gpdk" p...
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") isonmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside isonmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") isonmos shared)
\o executing: l_NMOS = measureParameter(length (isonmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (isonmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(pmos (gate "G") (pdiff "S" "D") (scaPort "B") "pmos ivpcell gpdk" phys...
\o            extractDevice(pmos (gate "G") (pdiff "S" "D") (Nwell "B") "pmos ivpcell gpdk" physical)
\o For layer pmos :
\o     3464  shapes encountered.
\o     3464  pmos ivpcell gpdk devices well formed.
\o executing: areaSDp = measureParasitic(area (pdiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp ("as" "S") ("ad" "D") pmos shared)
\o executing: perimSDp = measureParasitic(length (pdiff outside pmos) 1e-06 figure)
\o executing: attachParasitic(perimSDp ("ps" "S") ("pd" "D") pmos shared)
\o executing: l_PMOS = measureParameter(length (pmos inside Poly) 0.5)
\o            w_PMOS = measureParameter(length (pmos coincident Poly) 0.5)
\o executing: normalizedl_PMOS = calculateParameter((l_PMOS * 1e-06))
\o executing: normalizedw_PMOS = calculateParameter((w_PMOS * 1e-06))
\o executing: saveParameter(normalizedl_PMOS "l")
\o executing: saveParameter(normalizedw_PMOS "w")
\o executing: saveParameter(normalizedw_PMOS "effW")
\o executing: extractDevice(polyres (polyInt "PLUS" "MINUS") "polyres  ivpcell gpdk")
\o For layer polyres :
\o     51  shapes encountered.
\o     51  polyres  ivpcell gpdk devices well formed.
\o executing: width = measureParameter(length (polyres butting Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (polyres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 7.5) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(nplusres (ndiff "PLUS" "MINUS") (Psub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (nplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (nplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(isonplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(isonplusres (ndiff "PLUS" "MINUS") (isoPsub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (isonplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (isonplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell gpdk")
\o            extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (Psub "B") "nmoscap ivpcell gpdk")
\o executing: w = measureParameter(length (nmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (nmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (nmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" nmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside nmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" nmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell g...
\o            extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (isoPsub "B") "nmoscap ivpcell g...
\o executing: w = measureParameter(length (isonmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (isonmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (isonmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" isonmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside isonmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" isonmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(mimcap (CapMetal "PLUS") (capm2 "MINUS") "mimcap ivpcell gpdk")
\o executing: capArea = measureParameter(area (mimcap))
\o            capPerim = measureParameter(perimeter (mimcap))
\o executing: capL = calculateParameter(sqrt(capArea))
\o executing: normalizedL = calculateParameter((capL * 1e-06))
\o executing: cap = calculateParameter(((capArea * 1e-15) + (capPerim * 1e-16)))
\o executing: saveParameter(cap "c")
\o executing: saveParameter(normalizedL "l")
\o executing: saveParameter(normalizedL "w")
\o executing: extractDevice(vpnp (vpnpEmit "E") (vpnpBase "B") (vpnpColl "C") "vpnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (vpnp over vpnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(npn (npnEmit "E") (npnBase "B") (npnColl "C") "npn ivpcell gpdk")
\o executing: emitArea = measureParameter(area (npn over npnEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(pnp (pnpEmit "E") (pnpBase "B") (pnpColl "C") "pnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (pnp over pnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(inductor (m2IndMinus "MINUS") (m2IndPlus "PLUS") "inductor ivpcell gpd...
\o executing: width = measureParameter(length (inductor butting m2outsideInd) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: total_turns = measureParameter(bends_all (inductor))
\o executing: turns = calculateParameter((total_turns / 4))
\o executing: separation_block_perim = measureParameterlength((inductor butting m3Ind_separation_b...
\o executing: tot_separation_perim = measureParameterlength((inductor butting m3Ind_separation_area))
\o executing: sep = calculateParameter(((tot_separation_perim - separation_block_perim) / ((total_...
\o executing: normalizedSep = calculateParameter((sep * 1e-06))
\o executing: total_perim = measureParameterlength((inductor butting m3Ind_hole))
\o executing: radius = calculateParameter(((total_perim - ((2 * width) + sep)) / 8))
\o executing: normalizedRad = calculateParameter((radius * 1e-06))
\o executing: inductance = calculateParameter(((k1 * u0 * turns * turns * (0.5 * ((2 * normalizedR...
\o executing: saveParameter(turns "nr")
\o executing: saveParameter(normalizedWidth "width")
\o executing: saveParameter(normalizedSep "space")
\o executing: saveParameter(normalizedRad "rad")
\o executing: saveParameter(inductance "ind")
\o executing: extractDevice(pdiode (pdiodePlus "PLUS") (ntie "MINUS") "pdio ivpcell gpdk")
\o executing: area = measureParameter(area (pdiode over pdiodePlus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (pdiode over pdiodePlus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: extractDevice(ndiode (ptie "PLUS") (ndiodeMinus "MINUS") "ndio ivpcell gpdk")
\o executing: area = measureParameter(area (ndiode over ndiodeMinus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (ndiode over ndiodeMinus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: saveInterconnect((polyInt "Poly") (gate "Poly"))
\o executing: saveInterconnect((Cont "Cont") (bjtCont "Cont") (Via1 "Via1") (Via2 "Via2"))
\o executing: saveInterconnect((Metal1 "Metal1") (Metal2 "Metal2") (Metal3 "Metal3"))
\o executing: saveInterconnect((vpnpm1 "Metal1") (vpnpm2 "Metal2") (vpnpm3 "Metal3"))
\o executing: saveInterconnect((npnm1 "Metal1") (npnm2 "Metal2") (npnm3 "Metal3"))
\o executing: saveInterconnect((pnpm1 "Metal1") (pnpm2 "Metal2") (pnpm3 "Metal3"))
\o executing: saveInterconnect((capm2 "Metal2") (capm3 "Metal3"))
\o executing: saveInterconnect((m2IndPlus "Metal2") (m2IndMinus "Metal2"))
\o executing: saveRecognition(nmos "Poly")
\o executing: saveRecognition(isonmos "Poly")
\o executing: saveRecognition(pmos "Poly")
\o executing: saveRecognition(nmoscap "Poly")
\o executing: saveRecognition(isonmoscap "Poly")
\o executing: saveRecognition(polyres "Poly")
\o executing: saveRecognition(nplusres "Nimp")
\o executing: saveRecognition(isonplusres "Nimp")
\o executing: saveRecognition(mimcap "Metal3")
\o executing: saveRecognition(vpnp "Pimp")
\o executing: saveRecognition(npn "Nimp")
\o executing: saveRecognition(pnp "Pimp")
\o executing: saveRecognition(inductor "Metal3")
\o executing: saveRecognition(ndiode "Nimp")
\o executing: saveRecognition(pdiode "Pimp")
\o executing: copyGraphics(("Resdum" "drawing") all)
\o executing: copyGraphics(("Capdum" "drawing") all)
\o executing: copyGraphics(("BJTdum" "drawing") all)
\o executing: copyGraphics(("NPNdummy" "drawing") all)
\o executing: copyGraphics(("PNPdummy" "drawing") all)
\o executing: copyGraphics(("INDdummy" "drawing") all)
\o executing: copyGraphics(("IND2dummy" "drawing") all)
\o executing: copyGraphics(("DIOdummy" "drawing") all)
\o executing: copyGraphics(("text" "drawing") all)
\o Extraction started.......Mon Apr  3 19:49:10 2017
\o            completed ....Mon Apr  3 19:50:41 2017
\o     CPU TIME = 00:00:48  TOTAL TIME = 00:01:31
\o *********   Summary of rule violations for cell "sorter_top layout"   *********
\o    Total errors found: 0
\o 
\o saving rep lab3/sorter_top/extracted
\r t
\a ivHiLVS()
\p > 
\a hiiSetCurrentForm('ivLVSContentsDifferForm)
\r t
\a ivLVSContentsDifferForm->use->value = "Form Contents"
\r "Form Contents"
\a hiFormDone(ivLVSContentsDifferForm)
\r t
\r nil
\a hiResizeWindow(window(7) list(30:31 475:501))
\r t
\a hiResizeWindow(window(7) list(57:31 502:501))
\r t
\a hiResizeWindow(window(7) list(86:50 531:520))
\r t
\a hiResizeWindow(window(7) list(115:57 560:527))
\r t
\a hiResizeWindow(window(7) list(146:64 591:534))
\r t
\a hiResizeWindow(window(7) list(179:71 624:541))
\r t
\a hiResizeWindow(window(7) list(214:80 659:550))
\r t
\a hiResizeWindow(window(7) list(251:89 696:559))
\r t
\a hiResizeWindow(window(7) list(292:98 737:568))
\r t
\a hiResizeWindow(window(7) list(294:98 739:568))
\r t
\a hiResizeWindow(window(7) list(302:100 747:570))
\r t
\a hiResizeWindow(window(7) list(325:108 770:578))
\r t
\a hiResizeWindow(window(7) list(348:117 793:587))
\r t
\a hiResizeWindow(window(7) list(361:119 806:589))
\r t
\a hiResizeWindow(window(7) list(378:122 823:592))
\r t
\a hiResizeWindow(window(7) list(393:129 838:599))
\r t
\a hiResizeWindow(window(7) list(398:129 843:599))
\r t
\a hiResizeWindow(window(7) list(402:133 847:603))
\r t
\a hiResizeWindow(window(7) list(409:139 854:609))
\r t
\a hiResizeWindow(window(7) list(418:146 863:616))
\r t
\a hiResizeWindow(window(7) list(433:153 878:623))
\r t
\a hiResizeWindow(window(7) list(446:160 891:630))
\r t
\a hiResizeWindow(window(7) list(463:169 908:639))
\r t
\a hiResizeWindow(window(7) list(482:178 927:648))
\r t
\a hiResizeWindow(window(7) list(495:185 940:655))
\r t
\a hiResizeWindow(window(7) list(508:196 953:666))
\r t
\a hiResizeWindow(window(7) list(521:207 966:677))
\r t
\a hiResizeWindow(window(7) list(534:209 979:679))
\r t
\a hiResizeWindow(window(7) list(549:216 994:686))
\r t
\a hiResizeWindow(window(7) list(564:221 1009:691))
\r t
\a hiResizeWindow(window(7) list(575:226 1020:696))
\r t
\a hiResizeWindow(window(7) list(586:231 1031:701))
\r t
\a hiResizeWindow(window(7) list(597:236 1042:706))
\r t
\a hiResizeWindow(window(7) list(602:238 1047:708))
\r t
\a hiResizeWindow(window(7) list(608:241 1053:711))
\r t
\a hiResizeWindow(window(7) list(615:241 1060:711))
\r t
\a hiResizeWindow(window(7) list(621:245 1066:715))
\r t
\a hiResizeWindow(window(7) list(625:245 1070:715))
\r t
\a hiResizeWindow(window(7) list(627:245 1072:715))
\r t
\a hiResizeWindow(window(7) list(628:246 1073:716))
\r t
\a hiResizeWindow(window(7) list(629:247 1074:717))
\r t
\a ivLVSEnvForm->doNetlist->extracted->value = t 		ddsSyncWithForm( ivLVSEnvForm 'extBrowse 'extLibName 'extCellName 'extViewName nil)
\r t
\i ddsServSelect("lab3" "sorter" "")
\i ddsServSelect("lab3" "sorter_top" "")
\i ddsServSelect("lab3" "sorter_top" "extracted")
\a hiCloseWindow(window(7))
\r t
\a ivHiExtract()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a ivExtOptionsForm->extractedName->value = "extractedC"
\r "extractedC"
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Mon Apr  3 19:52:12 2017
\o 
\o Validating hierarchy instantiation for:
\o library: lab3
\o cell:    sorter_top
\o view:    layout
\o Rules come from library gpdk.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Switches used: PARASITIC_C.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: geomErase("marker" "error")
\o executing: geomErase("marker" "warning")
\o executing: geomErase("changedLayer" "tool0")
\o executing: Nwell = geomOr("Nwell")
\o executing: Nburied = geomOr("Nburied")
\o executing: Pwell = geomOr("Pwell")
\o executing: Oxide = geomOr("Oxide")
\o executing: Poly = geomOr("Poly")
\o executing: Pimp = geomOr("Pimp")
\o executing: Nimp = geomOr("Nimp")
\o executing: Cont = geomOr("Cont")
\o executing: Metal1 = geomOr("Metal1")
\o executing: Via1 = geomOr("Via1")
\o executing: Metal2 = geomOr("Metal2")
\o executing: Via2 = geomOr("Via2")
\o executing: Metal3 = geomOr("Metal3")
\o executing: Via3 = geomOr("Via3")
\o executing: Metal4 = geomOr("Metal4")
\o executing: Via4 = geomOr("Via4")
\o executing: Metal5 = geomOr("Metal5")
\o executing: Via5 = geomOr("Via5")
\o executing: Metal6 = geomOr("Metal6")
\o executing: CapMetal = geomOr("CapMetal")
\o executing: Capdum = geomOr("Capdum")
\o executing: Resdum = geomOr("Resdum")
\o executing: BJTdum = geomOr("BJTdum")
\o executing: NPNdummy = geomOr("NPNdummy")
\o executing: PNPdummy = geomOr("PNPdummy")
\o executing: IND2dummy = geomOr("IND2dummy")
\o executing: INDdummy = geomOr("INDdummy")
\o executing: DIOdummy = geomOr("DIOdummy")
\o executing: bulk = geomBkgnd()
\o executing: Psub = geomAndNot(bulk geomOr(Nwell Nburied))
\o executing: isoPsub = geomAnd(geomAndNot(bulk Nwell) Nburied)
\o executing: allPsub = geomOr(Psub isoPsub)
\o executing: NPOD = geomAnd(Nimp Oxide)
\o executing: ntox = geomAnd(NPOD allPsub)
\o executing: ngate = geomAndNot(geomAnd(ntox Poly) Capdum)
\o executing: ndiff = geomAndNot(ntox ngate)
\o executing: ntie = geomAnd(NPOD Nwell)
\o executing: nmosdev = geomOr(ngate)
\o executing: nmos = geomAnd(nmosdev Psub)
\o executing: isonmos = geomAnd(nmosdev isoPsub)
\o executing: PPOD = geomAnd(Pimp Oxide)
\o executing: ptox = geomAnd(PPOD Nwell)
\o executing: pgate = geomAndNot(geomAnd(ptox Poly) Capdum)
\o executing: pdiff = geomAndNot(ptox pgate)
\o executing: ptie = geomAnd(PPOD Psub)
\o executing: nbtie = geomAnd(PPOD isoPsub)
\o executing: pmos = geomOr(pgate)
\o executing: polyres = geomAnd(Poly Resdum)
\o executing: Poly = geomAndNot(Poly polyres)
\o executing: nplusresdev = geomAnd(ntox Resdum)
\o executing: nplusres = geomAnd(nplusresdev Psub)
\o executing: isonplusres = geomAnd(nplusresdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff nplusresdev)
\o executing: nmoscapdev = geomAnd(geomAnd(ntox Capdum) Poly)
\o executing: nmoscap = geomAnd(nmoscapdev Psub)
\o executing: isonmoscap = geomAnd(nmoscapdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff geomOr(nmoscap isonmoscap))
\o executing: nmoscapm1 = geomAnd(Metal1 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal1 = geomAndNot(Metal1 nmoscapm1)
\o executing: nmoscapm2 = geomAnd(Metal2 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal2 = geomAndNot(Metal2 nmoscapm2)
\o executing: m1MoscapConnector = geomAnd(geomSize(Metal1 0.01) geomSize(nmoscapm1 0.01))
\o executing: m1MoscapCont = geomAnd(Metal1 m1MoscapConnector)
\o executing: Moscapm1Cont = geomAnd(nmoscapm1 m1MoscapConnector)
\o executing: m2MoscapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(nmoscapm2 0.01))
\o executing: m2MoscapCont = geomAnd(Metal2 m2MoscapConnector)
\o executing: Moscapm2Cont = geomAnd(nmoscapm2 m2MoscapConnector)
\o executing: mimcap = geomAnd(Capdum CapMetal)
\o executing: capm2 = geomAnd(Metal2 Capdum)
\o executing: capm3 = geomAnd(Metal3 Capdum)
\o executing: capv23 = geomAnd(Via2 CapMetal)
\o executing: Via2 = geomAndNot(Via2 capv23)
\o executing: Metal2 = geomAndNot(Metal2 capm2)
\o executing: m2IntCapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(capm2 0.01))
\o executing: m2IntCapCont = geomAnd(Metal2 m2IntCapConnector)
\o executing: capm2Cont = geomAnd(capm2 m2IntCapConnector)
\o executing: Metal3 = geomAndNot(Metal3 capm3)
\o executing: m3IntCapConnector = geomAnd(geomSize(Metal3 0.01) geomSize(capm3 0.01))
\o executing: m3IntCapCont = geomAnd(Metal3 m3IntCapConnector)
\o executing: capm3Cont = geomAnd(capm3 m3IntCapConnector)
\o executing: pdiodePlus = geomAnd(DIOdummy ptox)
\o executing: pdiode = geomEnclose(DIOdummy pdiodePlus)
\o executing: ndiodeMinus = geomAnd(DIOdummy ntox)
\o executing: ndiode = geomEnclose(DIOdummy ndiodeMinus)
\o executing: vpnpBase = geomAnd(BJTdum ntie)
\o executing: vpnpColl = geomAnd(BJTdum ptie)
\o executing: vpnpEmit = geomAnd(BJTdum ptox)
\o executing: vpnp = geomEnclose(BJTdum vpnpEmit)
\o executing: vpnpm1 = geomAnd(BJTdum Metal1)
\o executing: vpnpm2 = geomAnd(BJTdum Metal2)
\o executing: vpnpm3 = geomAnd(BJTdum Metal3)
\o executing: bjtCont = geomAnd(Cont geomOr(BJTdum NPNdummy PNPdummy))
\o executing: Cont = geomAndNot(Cont bjtCont)
\o executing: Metal1 = geomAndNot(Metal1 vpnpm1)
\o executing: m1vpnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(vpnpm1 0.01))
\o executing: m1vpnpCont = geomAnd(Metal1 m1vpnpConnector)
\o executing: vpnpm1Cont = geomAnd(vpnpm1 m1vpnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 vpnpm2)
\o executing: m2vpnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(vpnpm2 0.01))
\o executing: m2vpnpCont = geomAnd(Metal2 m2vpnpConnector)
\o executing: vpnpm2Cont = geomAnd(vpnpm2 m2vpnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 vpnpm3)
\o executing: m3vpnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(vpnpm3 0.01))
\o executing: m3vpnpCont = geomAnd(Metal3 m3vpnpConnector)
\o executing: vpnpm3Cont = geomAnd(vpnpm3 m3vpnpConnector)
\o executing: npnBase = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) PPOD)
\o executing: npnColl = geomAnd(geomAndNot(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npnEmit = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npn = geomEnclose(NPNdummy npnEmit)
\o executing: npnm1 = geomAnd(NPNdummy Metal1)
\o executing: npnm2 = geomAnd(NPNdummy Metal2)
\o executing: npnm3 = geomAnd(NPNdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 npnm1)
\o executing: m1npnConnector = geomAnd(geomSize(Metal1 0.01) geomSize(npnm1 0.01))
\o executing: m1npnCont = geomAnd(Metal1 m1npnConnector)
\o executing: npnm1Cont = geomAnd(npnm1 m1npnConnector)
\o executing: Metal2 = geomAndNot(Metal2 npnm2)
\o executing: m2npnConnector = geomAnd(geomSize(Metal2 0.01) geomSize(npnm2 0.01))
\o executing: m2npnCont = geomAnd(Metal2 m2npnConnector)
\o executing: npnm2Cont = geomAnd(npnm2 m2npnConnector)
\o executing: Metal3 = geomAndNot(Metal3 npnm3)
\o executing: m3npnConnector = geomAnd(geomSize(Metal3 0.01) geomSize(npnm3 0.01))
\o executing: m3npnCont = geomAnd(Metal3 m3npnConnector)
\o executing: npnm3Cont = geomAnd(npnm3 m3npnConnector)
\o executing: pnpBase = geomAnd(geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) ntie)
\o executing: pnpColl = geomAnd(geomAndNot(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) PPOD)
\o executing: pnpEmit = geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) ptox)
\o executing: pnp = geomEnclose(PNPdummy pnpEmit)
\o executing: pnpm1 = geomAnd(PNPdummy Metal1)
\o executing: pnpm2 = geomAnd(PNPdummy Metal2)
\o executing: pnpm3 = geomAnd(PNPdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 pnpm1)
\o executing: m1pnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(pnpm1 0.01))
\o executing: m1pnpCont = geomAnd(Metal1 m1pnpConnector)
\o executing: pnpm1Cont = geomAnd(pnpm1 m1pnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 pnpm2)
\o executing: m2pnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(pnpm2 0.01))
\o executing: m2pnpCont = geomAnd(Metal2 m2pnpConnector)
\o executing: pnpm2Cont = geomAnd(pnpm2 m2pnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 pnpm3)
\o executing: m3pnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(pnpm3 0.01))
\o executing: m3pnpCont = geomAnd(Metal3 m3pnpConnector)
\o executing: pnpm3Cont = geomAnd(pnpm3 m3pnpConnector)
\o executing: m3Ind = geomAnd(geomAnd(Metal3 IND2dummy) INDdummy)
\o executing: v2Ind = geomAnd(Via2 m3Ind)
\o executing: Via2 = geomAndNot(Via2 v2Ind)
\o executing: m2Ind = geomAnd(geomAnd(Metal2 IND2dummy) INDdummy)
\o executing: inductor = geomAnd(INDdummy m3Ind)
\o executing: m2Pieces = geomAndNot(m2Ind m3Ind)
\o executing: m2IndPlus = geomStraddle(m2Ind m2Pieces)
\o executing: m2IndMinus = geomAndNot(m2Ind m2IndPlus)
\o executing: inddmym2 = geomAnd(Metal2 INDdummy)
\o executing: m2IndInt = geomAndNot(inddmym2 geomOr(m2IndPlus m2IndMinus))
\o executing: m2IntIndPlusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndPlus 0.01))
\o executing: m2IntIndPlusCont = geomAnd(m2IndInt m2IntIndPlusConnector)
\o executing: m2PlusCont = geomAnd(m2IndPlus m2IntIndPlusConnector)
\o executing: m2IntIndMinusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndMinus 0.01))
\o executing: m2IntIndMinusCont = geomAnd(m2IndInt m2IntIndMinusConnector)
\o executing: m2MinusCont = geomAnd(m2IndMinus m2IntIndMinusConnector)
\o executing: Metal2 = geomAndNot(Metal2 inddmym2)
\o executing: m2IntInddmyConnector = geomAnd(geomSize(Metal2 0.01) geomSize(m2IndInt 0.01))
\o executing: m2IntInddmyCont = geomAnd(Metal2 m2IntInddmyConnector)
\o executing: Inddmym2Cont = geomAnd(m2IndInt m2IntInddmyConnector)
\o executing: inddmym3 = geomAnd(Metal3 INDdummy)
\o executing: Metal3 = geomAndNot(Metal3 inddmym3)
\o executing: m3IntInddmyConnector = geomAnd(geomSize(Metal3 0.01) geomSize(inddmym3 0.01))
\o executing: m3IntInddmyCont = geomAnd(Metal3 m3IntInddmyConnector)
\o executing: Inddmym3Cont = geomAnd(inddmym3 m3IntInddmyConnector)
\o executing: m2outsideInd = geomAndNot(inddmym2 IND2dummy)
\o executing: sized_m3Ind = geomSize(geomSize(m3Ind 9) -9)
\o executing: m3Ind_hole = geomHoles(sized_m3Ind)
\o executing: dummy_area = geomAndNot(IND2dummy geomOr(sized_m3Ind m3Ind_hole))
\o executing: m3Ind_separation_blocks = drc(m3Ind (notch < 20) opposite shielded)
\o executing: m3Ind_separation_area = geomAndNot(drc(m3Ind (notch < 20) shielded) geomOr(m3Ind_hol...
\o executing: gate = geomOr(nmos isonmos pmos nmoscap isonmoscap)
\o executing: polyInt = geomAndNot(Poly gate)
\o executing: polyIntConnector = geomAnd(geomSize(polyInt 0.01) geomSize(gate 0.01))
\o executing: polyIntCont = geomAnd(polyInt polyIntConnector)
\o executing: gateCont = geomAnd(gate polyIntConnector)
\o executing: scaVia = geomEmpty()
\o executing: scaCont = geomEmpty()
\o executing: scaPort = geomEmpty()
\o executing: scaNwell = geomEmpty()
\o executing: scaNburied = geomEmpty()
\o executing: nonResConts = geomAndNot(Cont geomButting(Cont Resdum))
\o executing: overUnderCont = geomSize(geomSize(nonResConts 0.125) -0.125)
\o executing: OverUnderVia1 = geomSize(geomSize(Via1 0.175) -0.175)
\o executing: OverUnderVia2 = geomSize(geomSize(Via2 0.175) -0.175)
\o executing: OverUnderVia3 = geomSize(geomSize(Via3 0.175) -0.175)
\o executing: OverUnderVia4 = geomSize(geomSize(Via4 0.175) -0.175)
\o executing: OverUnderVia5 = geomSize(geomSize(Via5 0.175) -0.175)
\o executing: Cont = geomOr(overUnderCont Cont)
\o executing: Via1 = geomOr(OverUnderVia1 Via1)
\o executing: Via2 = geomOr(OverUnderVia2 Via2)
\o executing: Via3 = geomOr(OverUnderVia3 Via3)
\o executing: Via4 = geomOr(OverUnderVia4 Via4)
\o executing: Via5 = geomOr(OverUnderVia5 Via5)
\o executing: geomConnect((via Cont polyInt ndiff pdiff ntie ptie nbtie pdiodePlus ndiodeMinus nmo...
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\o executing: Psub = geomStamp(Psub ptie error)
\o executing: isoPsub = geomStamp(isoPsub nbtie error)
\o executing: Nwell = geomStamp(Nwell ntie error)
\o executing: plateCap = multiLevelParasitic((layers Psub isoPsub Nwell polyInt ndiff pdiff Metal1...
\o executing: pliFringe = measureFringe(polyInt (calculate ((l * plIntFringe) / s)) ((0.01 < sep) ...
\o executing: plgFringe = measureFringe(polyInt gate (calculate ((l * plIntFringe) / s)) ((0.01 < ...
\o executing: m1Fringe = measureFringe(Metal1 (calculate ((l * m1FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m1plFringe = measureFringe(Metal1 polyInt (calculate ((l * m1PlFringe) / s)) ((0.01 ...
\o executing: m2Fringe = measureFringe(Metal2 (calculate ((l * m2FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m2m1Fringe = measureFringe(Metal2 Metal1 (calculate ((l * m2M1Fringe) / s)) ((0.01 <...
\o executing: m3Fringe = measureFringe(Metal3 (calculate ((l * m3FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m3m2Fringe = measureFringe(Metal3 Metal2 (calculate ((l * m3M2Fringe) / s)) ((0.01 <...
\o executing: m4Fringe = measureFringe(Metal4 (calculate ((l * m4FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m4m3Fringe = measureFringe(Metal4 Metal3 (calculate ((l * m4M3Fringe) / s)) ((0.01 <...
\o executing: m5Fringe = measureFringe(Metal5 (calculate ((l * m5FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m5m4Fringe = measureFringe(Metal5 Metal4 (calculate ((l * m5M4Fringe) / s)) ((0.01 <...
\o executing: m6Fringe = measureFringe(Metal6 (calculate ((l * m6FreeFringe) / s)) ((0.01 < sep) <...
\o executing: m6m5Fringe = measureFringe(Metal6 Metal5 (calculate ((l * m6M5Fringe) / s)) ((0.01 <...
\o executing: fringeCap = calculateParasitic((pliFringe + plgFringe + m1Fringe + m1plFringe + m2Fr...
\o executing: totalCap = calculateParasitic(((plateCap + fringeCap) * fF) (ignore < ignoreThreshold))
\o executing: saveParasitic(totalCap "PLUS" "MINUS" "c" "pcapacitor ivpcell gpdk")
\o 13272 pcapacitor ivpcell gpdk parasitics created.
\o executing: extractDevice(nmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" phys...
\o            extractDevice(nmos (gate "G") (ndiff "S" "D") (Psub "B") "nmos ivpcell gpdk" physical)
\o For layer nmos :
\o     3462  shapes encountered.
\o     3462  nmos ivpcell gpdk devices well formed.
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") nmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside nmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") nmos shared)
\o executing: l_NMOS = measureParameter(length (nmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (nmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(isonmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" p...
\o            extractDevice(isonmos (gate "G") (ndiff "S" "D") (isoPsub "B") "nmos ivpcell gpdk" p...
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") isonmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside isonmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") isonmos shared)
\o executing: l_NMOS = measureParameter(length (isonmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (isonmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(pmos (gate "G") (pdiff "S" "D") (scaPort "B") "pmos ivpcell gpdk" phys...
\o            extractDevice(pmos (gate "G") (pdiff "S" "D") (Nwell "B") "pmos ivpcell gpdk" physical)
\o For layer pmos :
\o     3464  shapes encountered.
\o     3464  pmos ivpcell gpdk devices well formed.
\o executing: areaSDp = measureParasitic(area (pdiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp ("as" "S") ("ad" "D") pmos shared)
\o executing: perimSDp = measureParasitic(length (pdiff outside pmos) 1e-06 figure)
\o executing: attachParasitic(perimSDp ("ps" "S") ("pd" "D") pmos shared)
\o executing: l_PMOS = measureParameter(length (pmos inside Poly) 0.5)
\o            w_PMOS = measureParameter(length (pmos coincident Poly) 0.5)
\o executing: normalizedl_PMOS = calculateParameter((l_PMOS * 1e-06))
\o executing: normalizedw_PMOS = calculateParameter((w_PMOS * 1e-06))
\o executing: saveParameter(normalizedl_PMOS "l")
\o executing: saveParameter(normalizedw_PMOS "w")
\o executing: saveParameter(normalizedw_PMOS "effW")
\o executing: extractDevice(polyres (polyInt "PLUS" "MINUS") "polyres  ivpcell gpdk")
\o For layer polyres :
\o     51  shapes encountered.
\o     51  polyres  ivpcell gpdk devices well formed.
\o executing: width = measureParameter(length (polyres butting Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (polyres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 7.5) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(nplusres (ndiff "PLUS" "MINUS") (Psub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (nplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (nplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(isonplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(isonplusres (ndiff "PLUS" "MINUS") (isoPsub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (isonplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (isonplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell gpdk")
\o            extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (Psub "B") "nmoscap ivpcell gpdk")
\o executing: w = measureParameter(length (nmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (nmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (nmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" nmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside nmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" nmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell g...
\o            extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (isoPsub "B") "nmoscap ivpcell g...
\o executing: w = measureParameter(length (isonmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (isonmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (isonmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" isonmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside isonmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" isonmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(mimcap (CapMetal "PLUS") (capm2 "MINUS") "mimcap ivpcell gpdk")
\o executing: capArea = measureParameter(area (mimcap))
\o            capPerim = measureParameter(perimeter (mimcap))
\o executing: capL = calculateParameter(sqrt(capArea))
\o executing: normalizedL = calculateParameter((capL * 1e-06))
\o executing: cap = calculateParameter(((capArea * 1e-15) + (capPerim * 1e-16)))
\o executing: saveParameter(cap "c")
\o executing: saveParameter(normalizedL "l")
\o executing: saveParameter(normalizedL "w")
\o executing: extractDevice(vpnp (vpnpEmit "E") (vpnpBase "B") (vpnpColl "C") "vpnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (vpnp over vpnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(npn (npnEmit "E") (npnBase "B") (npnColl "C") "npn ivpcell gpdk")
\o executing: emitArea = measureParameter(area (npn over npnEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(pnp (pnpEmit "E") (pnpBase "B") (pnpColl "C") "pnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (pnp over pnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(inductor (m2IndMinus "MINUS") (m2IndPlus "PLUS") "inductor ivpcell gpd...
\o executing: width = measureParameter(length (inductor butting m2outsideInd) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: total_turns = measureParameter(bends_all (inductor))
\o executing: turns = calculateParameter((total_turns / 4))
\o executing: separation_block_perim = measureParameterlength((inductor butting m3Ind_separation_b...
\o executing: tot_separation_perim = measureParameterlength((inductor butting m3Ind_separation_area))
\o executing: sep = calculateParameter(((tot_separation_perim - separation_block_perim) / ((total_...
\o executing: normalizedSep = calculateParameter((sep * 1e-06))
\o executing: total_perim = measureParameterlength((inductor butting m3Ind_hole))
\o executing: radius = calculateParameter(((total_perim - ((2 * width) + sep)) / 8))
\o executing: normalizedRad = calculateParameter((radius * 1e-06))
\o executing: inductance = calculateParameter(((k1 * u0 * turns * turns * (0.5 * ((2 * normalizedR...
\o executing: saveParameter(turns "nr")
\o executing: saveParameter(normalizedWidth "width")
\o executing: saveParameter(normalizedSep "space")
\o executing: saveParameter(normalizedRad "rad")
\o executing: saveParameter(inductance "ind")
\o executing: extractDevice(pdiode (pdiodePlus "PLUS") (ntie "MINUS") "pdio ivpcell gpdk")
\o executing: area = measureParameter(area (pdiode over pdiodePlus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (pdiode over pdiodePlus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: extractDevice(ndiode (ptie "PLUS") (ndiodeMinus "MINUS") "ndio ivpcell gpdk")
\o executing: area = measureParameter(area (ndiode over ndiodeMinus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (ndiode over ndiodeMinus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: saveInterconnect((polyInt "Poly") (gate "Poly"))
\o executing: saveInterconnect((Cont "Cont") (bjtCont "Cont") (Via1 "Via1") (Via2 "Via2"))
\o executing: saveInterconnect((Metal1 "Metal1") (Metal2 "Metal2") (Metal3 "Metal3"))
\o executing: saveInterconnect((vpnpm1 "Metal1") (vpnpm2 "Metal2") (vpnpm3 "Metal3"))
\o executing: saveInterconnect((npnm1 "Metal1") (npnm2 "Metal2") (npnm3 "Metal3"))
\o executing: saveInterconnect((pnpm1 "Metal1") (pnpm2 "Metal2") (pnpm3 "Metal3"))
\o executing: saveInterconnect((capm2 "Metal2") (capm3 "Metal3"))
\o executing: saveInterconnect((m2IndPlus "Metal2") (m2IndMinus "Metal2"))
\o executing: saveRecognition(nmos "Poly")
\o executing: saveRecognition(isonmos "Poly")
\o executing: saveRecognition(pmos "Poly")
\o executing: saveRecognition(nmoscap "Poly")
\o executing: saveRecognition(isonmoscap "Poly")
\o executing: saveRecognition(polyres "Poly")
\o executing: saveRecognition(nplusres "Nimp")
\o executing: saveRecognition(isonplusres "Nimp")
\o executing: saveRecognition(mimcap "Metal3")
\o executing: saveRecognition(vpnp "Pimp")
\o executing: saveRecognition(npn "Nimp")
\o executing: saveRecognition(pnp "Pimp")
\o executing: saveRecognition(inductor "Metal3")
\o executing: saveRecognition(ndiode "Nimp")
\o executing: saveRecognition(pdiode "Pimp")
\o executing: copyGraphics(("Resdum" "drawing") all)
\o executing: copyGraphics(("Capdum" "drawing") all)
\o executing: copyGraphics(("BJTdum" "drawing") all)
\o executing: copyGraphics(("NPNdummy" "drawing") all)
\o executing: copyGraphics(("PNPdummy" "drawing") all)
\o executing: copyGraphics(("INDdummy" "drawing") all)
\o executing: copyGraphics(("IND2dummy" "drawing") all)
\o executing: copyGraphics(("DIOdummy" "drawing") all)
\o executing: copyGraphics(("text" "drawing") all)
\o Extraction started.......Mon Apr  3 19:52:12 2017
\o            completed ....Mon Apr  3 19:53:45 2017
\o     CPU TIME = 00:00:48  TOTAL TIME = 00:01:33
\o *********   Summary of rule violations for cell "sorter_top layout"   *********
\o    Total errors found: 0
\o 
\o saving rep lab3/sorter_top/extractedC
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a ivHiLVS()
\p > 
\a hiiSetCurrentForm('ivLVSContentsDifferForm)
\r t
\a hiFormDone(ivLVSContentsDifferForm)
\r t
\r nil
\a hiResizeWindow(window(8) list(24:31 469:501))
\r t
\a hiResizeWindow(window(8) list(49:51 494:521))
\r t
\a hiResizeWindow(window(8) list(74:56 519:526))
\r t
\a hiResizeWindow(window(8) list(113:61 558:531))
\r t
\a hiResizeWindow(window(8) list(136:66 581:536))
\r t
\a hiResizeWindow(window(8) list(145:71 590:541))
\r t
\a hiResizeWindow(window(8) list(178:76 623:546))
\r t
\a hiResizeWindow(window(8) list(199:78 644:548))
\r t
\a hiResizeWindow(window(8) list(238:87 683:557))
\r t
\a hiResizeWindow(window(8) list(269:92 714:562))
\r t
\a hiResizeWindow(window(8) list(276:92 721:562))
\r t
\a hiResizeWindow(window(8) list(299:105 744:575))
\r t
\a hiResizeWindow(window(8) list(326:112 771:582))
\r t
\a hiResizeWindow(window(8) list(353:117 798:587))
\r t
\a hiResizeWindow(window(8) list(380:122 825:592))
\r t
\a hiResizeWindow(window(8) list(399:131 844:601))
\r t
\a hiResizeWindow(window(8) list(422:138 867:608))
\r t
\a hiResizeWindow(window(8) list(445:143 890:613))
\r t
\a hiResizeWindow(window(8) list(452:148 897:618))
\r t
\a hiResizeWindow(window(8) list(460:152 905:622))
\r t
\a hiResizeWindow(window(8) list(465:153 910:623))
\r t
\a hiResizeWindow(window(8) list(471:153 916:623))
\r t
\a hiResizeWindow(window(8) list(477:158 922:628))
\r t
\a hiResizeWindow(window(8) list(484:163 929:633))
\r t
\a hiResizeWindow(window(8) list(493:168 938:638))
\r t
\a hiResizeWindow(window(8) list(500:173 945:643))
\r t
\a hiResizeWindow(window(8) list(511:175 956:645))
\r t
\a hiResizeWindow(window(8) list(518:177 963:647))
\r t
\a hiResizeWindow(window(8) list(527:177 972:647))
\r t
\a hiResizeWindow(window(8) list(538:177 983:647))
\r t
\a hiResizeWindow(window(8) list(548:177 993:647))
\r t
\a hiResizeWindow(window(8) list(558:177 1003:647))
\r t
\a ivLVSEnvForm->doNetlist->extracted->value = t 		ddsSyncWithForm( ivLVSEnvForm 'extBrowse 'extLibName 'extCellName 'extViewName nil)
\r t
\i ddsServSelect("lab3" "sorter_top" "extractedC")
\a ivLVSEnvForm->options->rewire->value =  nil
\r nil
\a ivLVSRun()
\o Loading seCore.cxt 
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists failed to match.
\o 
\o Run Directory: /afs/ualberta.ca/home/a/k/akolkar/ece403-lab3/Cadence/LVS
\p > 
\a hiDBoxOK(ivDBox) 
\r t
\a ivLVSShowOutput( "si.out" )
\r t
\a hiResizeWindow(window(9) list(121:180 1021:880))
\r t
\a hiResizeWindow(window(9) list(123:180 1023:880))
\r t
\a hiResizeWindow(window(9) list(127:181 1027:881))
\r t
\a hiResizeWindow(window(9) list(128:181 1028:881))
\r t
\a hiResizeWindow(window(9) list(130:181 1030:881))
\r t
\a hiResizeWindow(window(9) list(131:182 1031:882))
\r t
\a hiResizeWindow(window(9) list(132:183 1032:883))
\r t
\a hiResizeWindow(window(9) list(133:183 1033:883))
\r t
\a hiResizeWindow(window(9) list(137:184 1037:884))
\r t
\a hiResizeWindow(window(9) list(142:184 1042:884))
\r t
\a hiResizeWindow(window(9) list(150:184 1050:884))
\r t
\a hiResizeWindow(window(9) list(159:184 1059:884))
\r t
\a hiResizeWindow(window(9) list(175:184 1075:884))
\r t
\a hiResizeWindow(window(9) list(196:187 1096:887))
\r t
\a hiResizeWindow(window(9) list(217:187 1117:887))
\r t
\a hiResizeWindow(window(9) list(240:187 1140:887))
\r t
\a hiResizeWindow(window(9) list(263:187 1163:887))
\r t
\a hiResizeWindow(window(9) list(286:187 1186:887))
\r t
\a hiResizeWindow(window(9) list(309:185 1209:885))
\r t
\a hiResizeWindow(window(9) list(336:185 1236:885))
\r t
\a hiResizeWindow(window(9) list(363:185 1263:885))
\r t
\a hiResizeWindow(window(9) list(374:185 1274:885))
\r t
\a hiResizeWindow(window(9) list(385:185 1285:885))
\r t
\a hiResizeWindow(window(9) list(396:182 1296:882))
\r t
\a hiResizeWindow(window(9) list(415:189 1315:889))
\r t
\a hiResizeWindow(window(9) list(434:186 1334:886))
\r t
\a hiResizeWindow(window(9) list(453:186 1353:886))
\r t
\a hiResizeWindow(window(9) list(480:186 1380:886))
\r t
\a hiResizeWindow(window(9) list(505:186 1405:886))
\r t
\a hiResizeWindow(window(9) list(532:186 1432:886))
\r t
\a hiResizeWindow(window(9) list(558:186 1458:886))
\r t
\a hiResizeWindow(window(9) list(643:180 1543:880))
\r t
\a hiResizeWindow(window(9) list(643:180 1543:880))
\r t
\a hiResizeWindow(window(9) list(684:182 1584:882))
\r t
\a hiResizeWindow(window(9) list(725:179 1625:879))
\r t
\a hiResizeWindow(window(9) list(766:179 1666:879))
\r t
\a hiResizeWindow(window(9) list(797:179 1697:879))
\r t
\a hiResizeWindow(window(9) list(814:184 1714:884))
\r t
\a hiResizeWindow(window(9) list(856:184 1756:884))
\r t
\a hiResizeWindow(window(9) list(856:184 1756:884))
\r t
\a hiResizeWindow(window(9) list(875:181 1775:881))
\r t
\a hiResizeWindow(window(9) list(888:184 1788:884))
\r t
\a hiResizeWindow(window(9) list(895:181 1795:881))
\r t
\a hiResizeWindow(window(9) list(904:181 1804:881))
\r t
\a hiResizeWindow(window(9) list(908:181 1808:881))
\r t
\a hiResizeWindow(window(9) list(912:181 1812:881))
\r t
\a hiResizeWindow(window(9) list(913:181 1813:881))
\r t
\a hiResizeWindow(window(9) list(911:178 1811:878))
\r t
\a hiResizeWindow(window(9) list(910:174 1810:874))
\r t
\a hiResizeWindow(window(9) list(904:168 1804:868))
\r t
\a hiResizeWindow(window(9) list(900:162 1800:862))
\r t
\a hiResizeWindow(window(9) list(895:155 1795:855))
\r t
\a hiResizeWindow(window(9) list(894:151 1794:851))
\r t
\a hiResizeWindow(window(9) list(889:144 1789:844))
\r t
\a hiResizeWindow(window(9) list(888:142 1788:842))
\r t
\a hiResizeWindow(window(9) list(886:136 1786:836))
\r t
\a hiResizeWindow(window(9) list(884:132 1784:832))
\r t
\a hiResizeWindow(window(9) list(884:131 1784:831))
\r t
\a hiResizeWindow(window(9) list(884:129 1784:829))
\r t
\a hiResizeWindow(window(9) list(884:127 1784:827))
\r t
\a hiResizeWindow(window(9) list(882:124 1782:824))
\r t
\a hiResizeWindow(window(9) list(882:123 1782:823))
\r t
\a hiResizeWindow(window(9) list(881:122 1781:822))
\r t
\a hiResizeWindow(window(9) list(881:121 1781:821))
\r t
\a hiResizeWindow(window(9) list(881:120 1781:820))
\r t
\a hiCloseWindow(window(9))
\r t
\a ivLVSEnvForm->doNetlist->extracted->value = t 		ddsSyncWithForm( ivLVSEnvForm 'extBrowse 'extLibName 'extCellName 'extViewName nil)
\r t
\a hiCloseWindow(window(8))
\r t
\a ivHiExtract()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a ivDRCExtSetSwitches('Extract)
\o Parsing drcExtractRules of "/CMC/EDA/kits/gpdk_MIET_2.0/gpdk/divaEXT.rul"...
\o 
\o  DIVA GPDK Extract Rules
\o *****
\o ***** DO NOT SELECT BOTH PARASITIC_C AND PARASITIC_RC
\o  *****
\o 
\o  DIVA GPDK Extract Rules
\o *****
\o ***** DO NOT SELECT BOTH PARASITIC_C AND PARASITIC_RC
\o  *****
\o Optimizing rules...
\p > 
\a hiListBoxCancel(ivDRCExtSwitchesListBox)
\r t
\r nil
\a ivExtOptionsForm->switches->value = ""
\r ""
\a ivExtOptionsForm->extractedName->value = "extracted"
\r "extracted"
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Mon Apr  3 19:56:10 2017
\o 
\o Validating hierarchy instantiation for:
\o library: lab3
\o cell:    sorter_top
\o view:    layout
\o Rules come from library gpdk.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Parsing drcExtractRules of "/CMC/EDA/kits/gpdk_MIET_2.0/gpdk/divaEXT.rul"...
\o 
\o  DIVA GPDK Extract Rules
\o info: If short location check is desired later on, check the saveInterconnect
\o  statement for correctness:
\o  Interconnect layer ndiff, pdiff, ntie, ptie, nbtie, pdiodePlus, ndiodeMinus, nmoscapm1, vpnpEmit, vpnpBase, vpnpColl, npnEmit, npnBase, npnColl, pnpEmit, pnpBase, pnpColl, nmoscapm2, Via3, Metal4, Via4, Metal5, Via5, Metal6, gateCont, polyIntConnector, polyIntCont, m1MoscapCont, m1MoscapConnector, Moscapm1Cont, m2MoscapCont, m2MoscapConnector, Moscapm2Cont, m1vpnpCont, m1vpnpConnector, vpnpm1Cont, m2vpnpCont, m2vpnpConnector, vpnpm2Cont, m3vpnpCont, m3vpnpConnector, vpnpm3Cont, m1npnCont, m1npnConnector, npnm1Cont, m2npnCont, m2npnConnector, npnm2Cont, m3npnCont, m3npnConnector, npnm3Cont, m1pnpCont, m1pnpConnector, pnpm1Cont, m2pnpCont, m2pnpConnector, pnpm2Cont, m3pnpCont, m3pnpConnector, pnpm3Cont, m2IntIndPlusCont, m2IntIndPlusConnector, m2IndInt, m2PlusCont, m2IntIndMinusCont, m2IntIndMinusConnector, m2MinusCont, m2IntInddmyCont, m2IntInddmyConnector, Inddmym2Cont, m3IntInddmyCont, m3IntInddmyConnector, Inddmym3Cont, inddmym3, v2Ind, m2Ind, m3Ind, m2IntCapCont, m2IntCapConnector, capm2Cont, m3IntCapCont, m3IntCapConnector, capm3Cont, capv23, CapMetal, scaVia, scaCont, scaPort, scaNwell, scaNburied not saved.
\o  Interconnect layers merged on save: m2IndMinus, m2IndPlus, capm2, pnpm2, npnm2, vpnpm2, Metal2.
\o  Interconnect layers merged on save: capm3, pnpm3, npnm3, vpnpm3, Metal3.
\o  Interconnect layers merged on save: pnpm1, npnm1, vpnpm1, Metal1.
\o  Interconnect layers merged on save: bjtCont, Cont.
\o  Interconnect layers merged on save: gate, polyInt.
\o  
\o Optimizing rules...
\o removing unused task: scaSelect = geomOr("scaSelect")
\o removing unused task: text = geomOr("text")
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: geomErase("marker" "error")
\o executing: geomErase("marker" "warning")
\o executing: geomErase("changedLayer" "tool0")
\o executing: Nwell = geomOr("Nwell")
\o executing: Nburied = geomOr("Nburied")
\o executing: Pwell = geomOr("Pwell")
\o executing: Oxide = geomOr("Oxide")
\o executing: Poly = geomOr("Poly")
\o executing: Pimp = geomOr("Pimp")
\o executing: Nimp = geomOr("Nimp")
\o executing: Cont = geomOr("Cont")
\o executing: Metal1 = geomOr("Metal1")
\o executing: Via1 = geomOr("Via1")
\o executing: Metal2 = geomOr("Metal2")
\o executing: Via2 = geomOr("Via2")
\o executing: Metal3 = geomOr("Metal3")
\o executing: Via3 = geomOr("Via3")
\o executing: Metal4 = geomOr("Metal4")
\o executing: Via4 = geomOr("Via4")
\o executing: Metal5 = geomOr("Metal5")
\o executing: Via5 = geomOr("Via5")
\o executing: Metal6 = geomOr("Metal6")
\o executing: CapMetal = geomOr("CapMetal")
\o executing: Capdum = geomOr("Capdum")
\o executing: Resdum = geomOr("Resdum")
\o executing: BJTdum = geomOr("BJTdum")
\o executing: NPNdummy = geomOr("NPNdummy")
\o executing: PNPdummy = geomOr("PNPdummy")
\o executing: IND2dummy = geomOr("IND2dummy")
\o executing: INDdummy = geomOr("INDdummy")
\o executing: DIOdummy = geomOr("DIOdummy")
\o executing: bulk = geomBkgnd()
\o executing: Psub = geomAndNot(bulk geomOr(Nwell Nburied))
\o executing: isoPsub = geomAnd(geomAndNot(bulk Nwell) Nburied)
\o executing: allPsub = geomOr(Psub isoPsub)
\o executing: NPOD = geomAnd(Nimp Oxide)
\o executing: ntox = geomAnd(NPOD allPsub)
\o executing: ngate = geomAndNot(geomAnd(ntox Poly) Capdum)
\o executing: ndiff = geomAndNot(ntox ngate)
\o executing: ntie = geomAnd(NPOD Nwell)
\o executing: nmosdev = geomOr(ngate)
\o executing: nmos = geomAnd(nmosdev Psub)
\o executing: isonmos = geomAnd(nmosdev isoPsub)
\o executing: PPOD = geomAnd(Pimp Oxide)
\o executing: ptox = geomAnd(PPOD Nwell)
\o executing: pgate = geomAndNot(geomAnd(ptox Poly) Capdum)
\o executing: pdiff = geomAndNot(ptox pgate)
\o executing: ptie = geomAnd(PPOD Psub)
\o executing: nbtie = geomAnd(PPOD isoPsub)
\o executing: pmos = geomOr(pgate)
\o executing: polyres = geomAnd(Poly Resdum)
\o executing: Poly = geomAndNot(Poly polyres)
\o executing: nplusresdev = geomAnd(ntox Resdum)
\o executing: nplusres = geomAnd(nplusresdev Psub)
\o executing: isonplusres = geomAnd(nplusresdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff nplusresdev)
\o executing: nmoscapdev = geomAnd(geomAnd(ntox Capdum) Poly)
\o executing: nmoscap = geomAnd(nmoscapdev Psub)
\o executing: isonmoscap = geomAnd(nmoscapdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff geomOr(nmoscap isonmoscap))
\o executing: nmoscapm1 = geomAnd(Metal1 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal1 = geomAndNot(Metal1 nmoscapm1)
\o executing: nmoscapm2 = geomAnd(Metal2 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal2 = geomAndNot(Metal2 nmoscapm2)
\o executing: m1MoscapConnector = geomAnd(geomSize(Metal1 0.01) geomSize(nmoscapm1 0.01))
\o executing: m1MoscapCont = geomAnd(Metal1 m1MoscapConnector)
\o executing: Moscapm1Cont = geomAnd(nmoscapm1 m1MoscapConnector)
\o executing: m2MoscapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(nmoscapm2 0.01))
\o executing: m2MoscapCont = geomAnd(Metal2 m2MoscapConnector)
\o executing: Moscapm2Cont = geomAnd(nmoscapm2 m2MoscapConnector)
\o executing: mimcap = geomAnd(Capdum CapMetal)
\o executing: capm2 = geomAnd(Metal2 Capdum)
\o executing: capm3 = geomAnd(Metal3 Capdum)
\o executing: capv23 = geomAnd(Via2 CapMetal)
\o executing: Via2 = geomAndNot(Via2 capv23)
\o executing: Metal2 = geomAndNot(Metal2 capm2)
\o executing: m2IntCapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(capm2 0.01))
\o executing: m2IntCapCont = geomAnd(Metal2 m2IntCapConnector)
\o executing: capm2Cont = geomAnd(capm2 m2IntCapConnector)
\o executing: Metal3 = geomAndNot(Metal3 capm3)
\o executing: m3IntCapConnector = geomAnd(geomSize(Metal3 0.01) geomSize(capm3 0.01))
\o executing: m3IntCapCont = geomAnd(Metal3 m3IntCapConnector)
\o executing: capm3Cont = geomAnd(capm3 m3IntCapConnector)
\o executing: pdiodePlus = geomAnd(DIOdummy ptox)
\o executing: pdiode = geomEnclose(DIOdummy pdiodePlus)
\o executing: ndiodeMinus = geomAnd(DIOdummy ntox)
\o executing: ndiode = geomEnclose(DIOdummy ndiodeMinus)
\o executing: vpnpBase = geomAnd(BJTdum ntie)
\o executing: vpnpColl = geomAnd(BJTdum ptie)
\o executing: vpnpEmit = geomAnd(BJTdum ptox)
\o executing: vpnp = geomEnclose(BJTdum vpnpEmit)
\o executing: vpnpm1 = geomAnd(BJTdum Metal1)
\o executing: vpnpm2 = geomAnd(BJTdum Metal2)
\o executing: vpnpm3 = geomAnd(BJTdum Metal3)
\o executing: bjtCont = geomAnd(Cont geomOr(BJTdum NPNdummy PNPdummy))
\o executing: Cont = geomAndNot(Cont bjtCont)
\o executing: Metal1 = geomAndNot(Metal1 vpnpm1)
\o executing: m1vpnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(vpnpm1 0.01))
\o executing: m1vpnpCont = geomAnd(Metal1 m1vpnpConnector)
\o executing: vpnpm1Cont = geomAnd(vpnpm1 m1vpnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 vpnpm2)
\o executing: m2vpnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(vpnpm2 0.01))
\o executing: m2vpnpCont = geomAnd(Metal2 m2vpnpConnector)
\o executing: vpnpm2Cont = geomAnd(vpnpm2 m2vpnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 vpnpm3)
\o executing: m3vpnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(vpnpm3 0.01))
\o executing: m3vpnpCont = geomAnd(Metal3 m3vpnpConnector)
\o executing: vpnpm3Cont = geomAnd(vpnpm3 m3vpnpConnector)
\o executing: npnBase = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) PPOD)
\o executing: npnColl = geomAnd(geomAndNot(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npnEmit = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npn = geomEnclose(NPNdummy npnEmit)
\o executing: npnm1 = geomAnd(NPNdummy Metal1)
\o executing: npnm2 = geomAnd(NPNdummy Metal2)
\o executing: npnm3 = geomAnd(NPNdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 npnm1)
\o executing: m1npnConnector = geomAnd(geomSize(Metal1 0.01) geomSize(npnm1 0.01))
\o executing: m1npnCont = geomAnd(Metal1 m1npnConnector)
\o executing: npnm1Cont = geomAnd(npnm1 m1npnConnector)
\o executing: Metal2 = geomAndNot(Metal2 npnm2)
\o executing: m2npnConnector = geomAnd(geomSize(Metal2 0.01) geomSize(npnm2 0.01))
\o executing: m2npnCont = geomAnd(Metal2 m2npnConnector)
\o executing: npnm2Cont = geomAnd(npnm2 m2npnConnector)
\o executing: Metal3 = geomAndNot(Metal3 npnm3)
\o executing: m3npnConnector = geomAnd(geomSize(Metal3 0.01) geomSize(npnm3 0.01))
\o executing: m3npnCont = geomAnd(Metal3 m3npnConnector)
\o executing: npnm3Cont = geomAnd(npnm3 m3npnConnector)
\o executing: pnpBase = geomAnd(geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) ntie)
\o executing: pnpColl = geomAnd(geomAndNot(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) PPOD)
\o executing: pnpEmit = geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) ptox)
\o executing: pnp = geomEnclose(PNPdummy pnpEmit)
\o executing: pnpm1 = geomAnd(PNPdummy Metal1)
\o executing: pnpm2 = geomAnd(PNPdummy Metal2)
\o executing: pnpm3 = geomAnd(PNPdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 pnpm1)
\o executing: m1pnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(pnpm1 0.01))
\o executing: m1pnpCont = geomAnd(Metal1 m1pnpConnector)
\o executing: pnpm1Cont = geomAnd(pnpm1 m1pnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 pnpm2)
\o executing: m2pnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(pnpm2 0.01))
\o executing: m2pnpCont = geomAnd(Metal2 m2pnpConnector)
\o executing: pnpm2Cont = geomAnd(pnpm2 m2pnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 pnpm3)
\o executing: m3pnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(pnpm3 0.01))
\o executing: m3pnpCont = geomAnd(Metal3 m3pnpConnector)
\o executing: pnpm3Cont = geomAnd(pnpm3 m3pnpConnector)
\o executing: m3Ind = geomAnd(geomAnd(Metal3 IND2dummy) INDdummy)
\o executing: v2Ind = geomAnd(Via2 m3Ind)
\o executing: Via2 = geomAndNot(Via2 v2Ind)
\o executing: m2Ind = geomAnd(geomAnd(Metal2 IND2dummy) INDdummy)
\o executing: inductor = geomAnd(INDdummy m3Ind)
\o executing: m2Pieces = geomAndNot(m2Ind m3Ind)
\o executing: m2IndPlus = geomStraddle(m2Ind m2Pieces)
\o executing: m2IndMinus = geomAndNot(m2Ind m2IndPlus)
\o executing: inddmym2 = geomAnd(Metal2 INDdummy)
\o executing: m2IndInt = geomAndNot(inddmym2 geomOr(m2IndPlus m2IndMinus))
\o executing: m2IntIndPlusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndPlus 0.01))
\o executing: m2IntIndPlusCont = geomAnd(m2IndInt m2IntIndPlusConnector)
\o executing: m2PlusCont = geomAnd(m2IndPlus m2IntIndPlusConnector)
\o executing: m2IntIndMinusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndMinus 0.01))
\o executing: m2IntIndMinusCont = geomAnd(m2IndInt m2IntIndMinusConnector)
\o executing: m2MinusCont = geomAnd(m2IndMinus m2IntIndMinusConnector)
\o executing: Metal2 = geomAndNot(Metal2 inddmym2)
\o executing: m2IntInddmyConnector = geomAnd(geomSize(Metal2 0.01) geomSize(m2IndInt 0.01))
\o executing: m2IntInddmyCont = geomAnd(Metal2 m2IntInddmyConnector)
\o executing: Inddmym2Cont = geomAnd(m2IndInt m2IntInddmyConnector)
\o executing: inddmym3 = geomAnd(Metal3 INDdummy)
\o executing: Metal3 = geomAndNot(Metal3 inddmym3)
\o executing: m3IntInddmyConnector = geomAnd(geomSize(Metal3 0.01) geomSize(inddmym3 0.01))
\o executing: m3IntInddmyCont = geomAnd(Metal3 m3IntInddmyConnector)
\o executing: Inddmym3Cont = geomAnd(inddmym3 m3IntInddmyConnector)
\o executing: m2outsideInd = geomAndNot(inddmym2 IND2dummy)
\o executing: sized_m3Ind = geomSize(geomSize(m3Ind 9) -9)
\o executing: m3Ind_hole = geomHoles(sized_m3Ind)
\o executing: dummy_area = geomAndNot(IND2dummy geomOr(sized_m3Ind m3Ind_hole))
\o executing: m3Ind_separation_blocks = drc(m3Ind (notch < 20) opposite shielded)
\o executing: m3Ind_separation_area = geomAndNot(drc(m3Ind (notch < 20) shielded) geomOr(m3Ind_hol...
\o executing: gate = geomOr(nmos isonmos pmos nmoscap isonmoscap)
\o executing: polyInt = geomAndNot(Poly gate)
\o executing: polyIntConnector = geomAnd(geomSize(polyInt 0.01) geomSize(gate 0.01))
\o executing: polyIntCont = geomAnd(polyInt polyIntConnector)
\o executing: gateCont = geomAnd(gate polyIntConnector)
\o executing: scaVia = geomEmpty()
\o executing: scaCont = geomEmpty()
\o executing: scaPort = geomEmpty()
\o executing: scaNwell = geomEmpty()
\o executing: scaNburied = geomEmpty()
\o executing: nonResConts = geomAndNot(Cont geomButting(Cont Resdum))
\o executing: overUnderCont = geomSize(geomSize(nonResConts 0.125) -0.125)
\o executing: OverUnderVia1 = geomSize(geomSize(Via1 0.175) -0.175)
\o executing: OverUnderVia2 = geomSize(geomSize(Via2 0.175) -0.175)
\o executing: OverUnderVia3 = geomSize(geomSize(Via3 0.175) -0.175)
\o executing: OverUnderVia4 = geomSize(geomSize(Via4 0.175) -0.175)
\o executing: OverUnderVia5 = geomSize(geomSize(Via5 0.175) -0.175)
\o executing: Cont = geomOr(overUnderCont Cont)
\o executing: Via1 = geomOr(OverUnderVia1 Via1)
\o executing: Via2 = geomOr(OverUnderVia2 Via2)
\o executing: Via3 = geomOr(OverUnderVia3 Via3)
\o executing: Via4 = geomOr(OverUnderVia4 Via4)
\o executing: Via5 = geomOr(OverUnderVia5 Via5)
\o executing: geomConnect((via Cont polyInt ndiff pdiff ntie ptie nbtie pdiodePlus ndiodeMinus nmo...
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\o executing: Psub = geomStamp(Psub ptie error)
\o executing: isoPsub = geomStamp(isoPsub nbtie error)
\o executing: Nwell = geomStamp(Nwell ntie error)
\o executing: extractDevice(nmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" phys...
\o            extractDevice(nmos (gate "G") (ndiff "S" "D") (Psub "B") "nmos ivpcell gpdk" physical)
\o For layer nmos :
\o     3462  shapes encountered.
\o     3462  nmos ivpcell gpdk devices well formed.
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") nmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside nmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") nmos shared)
\o executing: l_NMOS = measureParameter(length (nmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (nmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(isonmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" p...
\o            extractDevice(isonmos (gate "G") (ndiff "S" "D") (isoPsub "B") "nmos ivpcell gpdk" p...
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") isonmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside isonmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") isonmos shared)
\o executing: l_NMOS = measureParameter(length (isonmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (isonmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(pmos (gate "G") (pdiff "S" "D") (scaPort "B") "pmos ivpcell gpdk" phys...
\o            extractDevice(pmos (gate "G") (pdiff "S" "D") (Nwell "B") "pmos ivpcell gpdk" physical)
\o For layer pmos :
\o     3464  shapes encountered.
\o     3464  pmos ivpcell gpdk devices well formed.
\o executing: areaSDp = measureParasitic(area (pdiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp ("as" "S") ("ad" "D") pmos shared)
\o executing: perimSDp = measureParasitic(length (pdiff outside pmos) 1e-06 figure)
\o executing: attachParasitic(perimSDp ("ps" "S") ("pd" "D") pmos shared)
\o executing: l_PMOS = measureParameter(length (pmos inside Poly) 0.5)
\o            w_PMOS = measureParameter(length (pmos coincident Poly) 0.5)
\o executing: normalizedl_PMOS = calculateParameter((l_PMOS * 1e-06))
\o executing: normalizedw_PMOS = calculateParameter((w_PMOS * 1e-06))
\o executing: saveParameter(normalizedl_PMOS "l")
\o executing: saveParameter(normalizedw_PMOS "w")
\o executing: saveParameter(normalizedw_PMOS "effW")
\o executing: extractDevice(polyres (polyInt "PLUS" "MINUS") "polyres  ivpcell gpdk")
\o For layer polyres :
\o     51  shapes encountered.
\o     51  polyres  ivpcell gpdk devices well formed.
\o executing: width = measureParameter(length (polyres butting Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (polyres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 7.5) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(nplusres (ndiff "PLUS" "MINUS") (Psub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (nplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (nplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(isonplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(isonplusres (ndiff "PLUS" "MINUS") (isoPsub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (isonplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (isonplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell gpdk")
\o            extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (Psub "B") "nmoscap ivpcell gpdk")
\o executing: w = measureParameter(length (nmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (nmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (nmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" nmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside nmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" nmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell g...
\o            extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (isoPsub "B") "nmoscap ivpcell g...
\o executing: w = measureParameter(length (isonmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (isonmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (isonmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" isonmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside isonmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" isonmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(mimcap (CapMetal "PLUS") (capm2 "MINUS") "mimcap ivpcell gpdk")
\o executing: capArea = measureParameter(area (mimcap))
\o            capPerim = measureParameter(perimeter (mimcap))
\o executing: capL = calculateParameter(sqrt(capArea))
\o executing: normalizedL = calculateParameter((capL * 1e-06))
\o executing: cap = calculateParameter(((capArea * 1e-15) + (capPerim * 1e-16)))
\o executing: saveParameter(cap "c")
\o executing: saveParameter(normalizedL "l")
\o executing: saveParameter(normalizedL "w")
\o executing: extractDevice(vpnp (vpnpEmit "E") (vpnpBase "B") (vpnpColl "C") "vpnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (vpnp over vpnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(npn (npnEmit "E") (npnBase "B") (npnColl "C") "npn ivpcell gpdk")
\o executing: emitArea = measureParameter(area (npn over npnEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(pnp (pnpEmit "E") (pnpBase "B") (pnpColl "C") "pnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (pnp over pnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(inductor (m2IndMinus "MINUS") (m2IndPlus "PLUS") "inductor ivpcell gpd...
\o executing: width = measureParameter(length (inductor butting m2outsideInd) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: total_turns = measureParameter(bends_all (inductor))
\o executing: turns = calculateParameter((total_turns / 4))
\o executing: separation_block_perim = measureParameterlength((inductor butting m3Ind_separation_b...
\o executing: tot_separation_perim = measureParameterlength((inductor butting m3Ind_separation_area))
\o executing: sep = calculateParameter(((tot_separation_perim - separation_block_perim) / ((total_...
\o executing: normalizedSep = calculateParameter((sep * 1e-06))
\o executing: total_perim = measureParameterlength((inductor butting m3Ind_hole))
\o executing: radius = calculateParameter(((total_perim - ((2 * width) + sep)) / 8))
\o executing: normalizedRad = calculateParameter((radius * 1e-06))
\o executing: inductance = calculateParameter(((k1 * u0 * turns * turns * (0.5 * ((2 * normalizedR...
\o executing: saveParameter(turns "nr")
\o executing: saveParameter(normalizedWidth "width")
\o executing: saveParameter(normalizedSep "space")
\o executing: saveParameter(normalizedRad "rad")
\o executing: saveParameter(inductance "ind")
\o executing: extractDevice(pdiode (pdiodePlus "PLUS") (ntie "MINUS") "pdio ivpcell gpdk")
\o executing: area = measureParameter(area (pdiode over pdiodePlus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (pdiode over pdiodePlus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: extractDevice(ndiode (ptie "PLUS") (ndiodeMinus "MINUS") "ndio ivpcell gpdk")
\o executing: area = measureParameter(area (ndiode over ndiodeMinus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (ndiode over ndiodeMinus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: saveInterconnect((polyInt "Poly") (gate "Poly"))
\o executing: saveInterconnect((Cont "Cont") (bjtCont "Cont") (Via1 "Via1") (Via2 "Via2"))
\o executing: saveInterconnect((Metal1 "Metal1") (Metal2 "Metal2") (Metal3 "Metal3"))
\o executing: saveInterconnect((vpnpm1 "Metal1") (vpnpm2 "Metal2") (vpnpm3 "Metal3"))
\o executing: saveInterconnect((npnm1 "Metal1") (npnm2 "Metal2") (npnm3 "Metal3"))
\o executing: saveInterconnect((pnpm1 "Metal1") (pnpm2 "Metal2") (pnpm3 "Metal3"))
\o executing: saveInterconnect((capm2 "Metal2") (capm3 "Metal3"))
\o executing: saveInterconnect((m2IndPlus "Metal2") (m2IndMinus "Metal2"))
\o executing: saveRecognition(nmos "Poly")
\o executing: saveRecognition(isonmos "Poly")
\o executing: saveRecognition(pmos "Poly")
\o executing: saveRecognition(nmoscap "Poly")
\o executing: saveRecognition(isonmoscap "Poly")
\o executing: saveRecognition(polyres "Poly")
\o executing: saveRecognition(nplusres "Nimp")
\o executing: saveRecognition(isonplusres "Nimp")
\o executing: saveRecognition(mimcap "Metal3")
\o executing: saveRecognition(vpnp "Pimp")
\o executing: saveRecognition(npn "Nimp")
\o executing: saveRecognition(pnp "Pimp")
\o executing: saveRecognition(inductor "Metal3")
\o executing: saveRecognition(ndiode "Nimp")
\o executing: saveRecognition(pdiode "Pimp")
\o executing: copyGraphics(("Resdum" "drawing") all)
\o executing: copyGraphics(("Capdum" "drawing") all)
\o executing: copyGraphics(("BJTdum" "drawing") all)
\o executing: copyGraphics(("NPNdummy" "drawing") all)
\o executing: copyGraphics(("PNPdummy" "drawing") all)
\o executing: copyGraphics(("INDdummy" "drawing") all)
\o executing: copyGraphics(("IND2dummy" "drawing") all)
\o executing: copyGraphics(("DIOdummy" "drawing") all)
\o executing: copyGraphics(("text" "drawing") all)
\o Extraction started.......Mon Apr  3 19:56:10 2017
\o            completed ....Mon Apr  3 19:57:17 2017
\o     CPU TIME = 00:00:34  TOTAL TIME = 00:01:07
\o *********   Summary of rule violations for cell "sorter_top layout"   *********
\o    Total errors found: 0
\o 
\o saving rep lab3/sorter_top/extracted
\r t
\a ivHiLVS()
\p > 
\a hiiSetCurrentForm('ivLVSContentsDifferForm)
\r t
\a hiFormDone(ivLVSContentsDifferForm)
\r t
\r nil
\a ivLVSEnvForm->extViewName->value = "extracted"
\r "extracted"
\a hiResizeWindow(window(10) list(24:31 469:501))
\r t
\a hiResizeWindow(window(10) list(38:31 483:501))
\r t
\a hiResizeWindow(window(10) list(53:31 498:501))
\r t
\a hiResizeWindow(window(10) list(68:31 513:501))
\r t
\a hiResizeWindow(window(10) list(89:51 534:521))
\r t
\a hiResizeWindow(window(10) list(110:53 555:523))
\r t
\a hiResizeWindow(window(10) list(125:58 570:528))
\r t
\a hiResizeWindow(window(10) list(144:65 589:535))
\r t
\a hiResizeWindow(window(10) list(153:70 598:540))
\r t
\a hiResizeWindow(window(10) list(166:79 611:549))
\r t
\a hiResizeWindow(window(10) list(181:86 626:556))
\r t
\a hiResizeWindow(window(10) list(198:93 643:563))
\r t
\a hiResizeWindow(window(10) list(205:98 650:568))
\r t
\a hiResizeWindow(window(10) list(222:100 667:570))
\r t
\a hiResizeWindow(window(10) list(249:109 694:579))
\r t
\a hiResizeWindow(window(10) list(270:114 715:584))
\r t
\a hiResizeWindow(window(10) list(277:114 722:584))
\r t
\a hiResizeWindow(window(10) list(300:119 745:589))
\r t
\a hiResizeWindow(window(10) list(323:117 768:587))
\r t
\a hiResizeWindow(window(10) list(348:119 793:589))
\r t
\a hiResizeWindow(window(10) list(363:126 808:596))
\r t
\a hiResizeWindow(window(10) list(378:131 823:601))
\r t
\a hiResizeWindow(window(10) list(397:140 842:610))
\r t
\a hiResizeWindow(window(10) list(402:147 847:617))
\r t
\a hiResizeWindow(window(10) list(410:149 855:619))
\r t
\a hiResizeWindow(window(10) list(417:151 862:621))
\r t
\a hiResizeWindow(window(10) list(417:154 862:624))
\r t
\a hiResizeWindow(window(10) list(421:156 866:626))
\r t
\a hiResizeWindow(window(10) list(424:156 869:626))
\r t
\a ivLVSRun()
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists failed to match.
\o 
\o Run Directory: /afs/ualberta.ca/home/a/k/akolkar/ece403-lab3/Cadence/LVS
\p > 
\a hiDBoxOK(ivDBox) 
\r t
\a ivLVSShowOutput( "si.out" )
\r t
\a hiCloseWindow(window(11))
\r t
\a leHiEditProp()
\r t
\a mouseSingleSelectPt
\i 332:765.4
\r t
\a mouseSingleSelectPt
\i 339.3:756.9
\r t
\a hiZoomIn()
\i 295.8:837.8
\p > 
\a addPoint(hiGetCommandPoint())
\i 487.7:668.8
\r t
\r t
\a mouseSingleSelectPt
\i 352.2:748.7
\r t
\a mouseSingleSelectPt
\i 349.4:764.6
\r t
\a mouseSingleSelectPt
\i 313.2:793
\r nil
\a leSelBoxOrStretch()
\i 313.2:793
\i 313.2:793
\p > 
\a addPoint(hiGetCommandPoint())
\i 369.3:725.1
\r t
\r t
\a mouseSingleSelectPt
\i 328.1:790.1
\r nil
\a leSelBoxOrStretch()
\i 302.2:796.2
\i 302.2:796.2
\p > 
\a addPoint(hiGetCommandPoint())
\i 388.6:720.8
\r t
\r t
\a mouseSingleSelectPt
\i 371:807.3
\r nil
\a leiMouseSetEntryLayer(0)
\r t
\a leSetAllLayerSelectable(nil)
\r t
\a leiMouseToggleLayerSelectable(0)
\r t
\a leSelBoxOrStretch()
\i 307.6:794.9
\i 307.6:794.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 372.4:726.9
\r t
\r t
\a mouseSingleSelectPt
\i 367.8:733.6
\r nil
\a mouseSingleSelectPt
\i 367.1:733.8
\r nil
\a mouseSingleSelectPt
\i 365.6:733.1
\r nil
\a hiZoomIn()
\i 300:797.1
\p > 
\a addPoint(hiGetCommandPoint())
\i 382.8:720.6
\r t
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a hiZoomIn()
\i 268.1:849.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 468.4:629
\r t
\r t
\a mouseSingleSelectPt
\i 332.1:764.7
\r nil
\a mouseSingleSelectPt
\i 345.4:748.4
\r nil
\a leSetAllLayerVisible(t)
\r t
\a leSetAllLayerSelectable(t)
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a hiZoomIn()
\i 207.7:853.5
\p > 
\a addPoint(hiGetCommandPoint())
\i 458.8:644.7
\r t
\r t
\a leSelBoxOrStretch()
\i 315.6:781.9
\i 315.6:781.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 372.9:713.8
\r t
\r t
\a leHiEditProp()
\r t
\a geiPlChangePlistCategory("editorNum0" "connectivity")
\r t
\a geiPlInvokePlistAction("editorNum0" "cancel")
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a hiZoomIn()
\i 1780.4:-72.3
\p > 
\a addPoint(hiGetCommandPoint())
\i 1553.5:152.2
\r t
\r t
\a leSelBoxOrStretch()
\i 1733.8:-16.1
\i 1733.8:-16.1
\p > 
\a addPoint(hiGetCommandPoint())
\i 1655.6:72.8
\r t
\r t
\a leHiEditProp()
\r t
\a leSelBoxOrStretch()
\i 1642.8:-22.2
\i 1642.8:-22.2
\p > 
\a addPoint(hiGetCommandPoint())
\i 1565.3:63.4
\r t
\r t
\a geiPlInvokePlistAction("editorNum0" "cancel")
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a ivHiDRC()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Mon Apr  3 19:59:33 2017
\o 
\o Validating hierarchy instantiation for:
\o library: lab3
\o cell:    sorter_top
\o view:    layout
\o Rules come from library gpdk.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Parsing drcExtractRules of "/CMC/EDA/kits/gpdk_MIET_2.0/gpdk/divaDRC.rul"...
\o Optimizing rules...
\o removing unused task: ngate = geomAndNot(geomAnd(ntox Poly) Capdum)
\o removing unused task: pgate = geomAndNot(geomAnd(ptox Poly) Capdum)
\o removing unused task: ptox = geomAnd(PPOD Nwell)
\o removing unused task: ntox = geomAnd(NPOD allPsub)
\o removing unused task: allPsub = geomOr(Psub isoPsub)
\o removing unused task: isoPsub = geomAnd(geomAndNot(bulk Nwell) Nburied)
\o removing unused task: Psub = geomAndNot(bulk geomOr(Nwell Nburied))
\o removing unused task: Capdum = geomOr("Capdum")
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: geomErase("marker" "warning")
\o executing: geomErase("marker" "error")
\o executing: geomErase("changedLayer" "tool0")
\o executing: Nburied = geomOr("Nburied")
\o executing: Nwell = geomOr("Nwell")
\o executing: Pwell = geomOr("Pwell")
\o executing: Oxide = geomOr("Oxide")
\o executing: Poly = geomOr("Poly")
\o executing: Pimp = geomOr("Pimp")
\o executing: Nimp = geomOr("Nimp")
\o executing: Cont = geomOr("Cont")
\o executing: Metal1 = geomOr("Metal1")
\o executing: Via1 = geomOr("Via1")
\o executing: Metal2 = geomOr("Metal2")
\o executing: Via2 = geomOr("Via2")
\o executing: Metal3 = geomOr("Metal3")
\o executing: Via3 = geomOr("Via3")
\o executing: Metal4 = geomOr("Metal4")
\o executing: Via4 = geomOr("Via4")
\o executing: Metal5 = geomOr("Metal5")
\o executing: Via5 = geomOr("Via5")
\o executing: Metal6 = geomOr("Metal6")
\o executing: CapMetal = geomOr("CapMetal")
\o executing: Resdum = geomOr("Resdum")
\o executing: DIOdummy = geomOr("DIOdummy")
\o executing: BJTdum = geomOr("BJTdum")
\o executing: PNPdummy = geomOr("PNPdummy")
\o executing: offGrid("Nburied" 0.005 1 "Nburied offgrid")
\o executing: offGrid("Nwell" 0.005 1 "Nwell offGrid")
\o executing: offGrid("Pwell" 0.005 1 "Pwell offGrid")
\o executing: offGrid("Oxide" 0.005 1 "Oxide offGrid")
\o executing: offGrid("Poly" 0.005 1 "Poly offGrid")
\o executing: offGrid("Pimp" 0.005 1 "PP offGrid")
\o executing: offGrid("Nimp" 0.005 1 "NP offGrid")
\o executing: offGrid("Cont" 0.005 1 "Cont offGrid")
\o executing: offGrid("Metal1" 0.005 1 "Metal1 offGrid")
\o executing: offGrid("Via1" 0.005 1 "Via1 offGrid")
\o executing: offGrid("Metal2" 0.005 1 "Metal2 offGrid")
\o executing: offGrid("Via2" 0.005 1 "Via2 offGrid")
\o executing: offGrid("Metal3" 0.005 1 "Metal3 offGrid")
\o executing: offGrid("Via3" 0.005 1 "Via3 offGrid")
\o executing: offGrid("Metal4" 0.005 1 "Metal4 offGrid")
\o executing: offGrid("Via4" 0.005 1 "Via4 offGrid")
\o executing: offGrid("Metal5" 0.005 1 "Metal5 offGrid")
\o executing: offGrid("Via5" 0.005 1 "Via5 offGrid")
\o executing: offGrid("Metal6" 0.005 1 "Metal6 offGrid")
\o executing: bulk = geomBkgnd(0)
\o executing: NPOD = geomAnd(Nimp Oxide)
\o executing: PPOD = geomAnd(Pimp Oxide)
\o executing: gate = geomAnd(Poly Oxide)
\o executing: psd = geomAndNot(PPOD gate)
\o executing: nsd = geomAndNot(NPOD gate)
\o executing: ntap = geomAnd(NPOD Nwell)
\o executing: ptap = geomAndNot(PPOD Nwell)
\o executing: drc(Nburied (width < 1.0) "0A Minimum NBuried width 1.0u")
\o            drc(Nburied ((0 < sep) < 1) "0B Minimum NBuried space 1.0u")
\o            drc(Nburied (notch < 1) "0B Minimum NBuried space 1.0u")
\o executing: drc(Nwell (width < 1.0) "1A Minimum Nwell width 1.0u")
\o            drc(Nwell ((0 < sep) < 1) "1B Minimum Nwell space 1.0u")
\o            drc(Nwell (notch < 1) "1B Minimum Nwell space 1.0u")
\o executing: isoNwell = geomAnd(Nwell Nburied)
\o executing: isoNwell = geomEnclose(Nwell isoNwell)
\o executing: saveDerived(geomAndNot(isoNwell Nburied) "1C minimum Nburied enclosre of Nwell 0.3u")
\o executing: drc(Nburied isoNwell ((0 < enc) < 0.3) "1C Minimum NBuried enclosure of Nwell 0.3u")
\o executing: drc(Pwell (width < 1.0) "1D Minimum Pwell width 1.0u")
\o            drc(Pwell ((0 < sep) < 1) "1E Minimum Pwell space 1.0u")
\o            drc(Pwell (notch < 1) "1E Minimum Pwell space 1.0u")
\o executing: drc(Nburied Pwell (enc < 0.3) "1F Minimum NBuried enclosure of Pwell 0.3u")
\o executing: drc(Oxide (width < 0.4) "2A Minimum Oxide width 0.4u")
\o            drc(Oxide ((0 < sep) < 0.3) "2B Minimum Oxide space 0.3u")
\o            drc(Oxide (notch < 0.3) "2B Minimum Oxide space 0.3u")
\o executing: drc(Nwell Oxide (enc < 0.5) "2C Minimum Nwell enclosure of Oxide 0.5u")
\o            drc(Nwell Oxide (sep < 0.5) "2D Minimum Nwell to Oxide space 0.5u")
\o executing: drc(Nimp (width < 0.4) "3A Minimum Nimp width 0.4u")
\o            drc(Nimp ((0 < sep) < 0.4) "3B Minimum Nimp space 0.4u")
\o            drc(Nimp (notch < 0.4) "3B Minimum Nimp space 0.4u")
\o executing: drc(Nimp Oxide (enc < 0.2) "3C Minimum Nimp enclosure of Oxide 0.2u")
\o executing: drc(Nburied Nimp (enc < 0.6) "3D Minimum Nburied enclosure of Nimp 0.6u")
\o executing: drc(Pimp (width < 0.4) "4A Minimum Pimp width 0.4u")
\o            drc(Pimp ((0 < sep) < 0.4) "4B Minimum Pimp space 0.4u")
\o            drc(Pimp (notch < 0.4) "4B Minimum Pimp space 0.4u")
\o executing: drc(Pimp Oxide (enc < 0.2) "4C Minimum Pimp enclosure of Oxide 0.2u")
\o executing: drc(Nburied Pimp (enc < 0.6) "4D Minimum Nburied enclosure of Pimp 0.6u")
\o executing: badImp = geomAnd(Pimp Nimp)
\o executing: saveDerived(badImp "4E Pimp and Nimp should not overlap")
\o executing: drc(Poly (width < 0.18) "5A Minimum Poly width 0.18")
\o            drc(Poly ((0 < sep) < 0.3) "5B Minimum Poly space 0.3u")
\o            drc(Poly (notch < 0.3) "5B Minimum Poly space 0.3u")
\o executing: drc(Poly Oxide (enc < 0.2) "5C Minimum Poly extension beyond Oxide (poly endcap) 0.2u")
\o            drc(Oxide Poly (enc < 0.4) "5D Minimum Oxide extension beyond gate Poly 0.4u")
\o            drc(Poly Oxide (sep < 0.2) "5E Minimum Poly to Oxide space 0.2u")
\o executing: metal1Cont = geomAnd(Metal1 Cont)
\o executing: polyInt = geomAndNot(Poly gate)
\o executing: badPolyInt = geomButting(polyInt gate (keep > 1))
\o executing: good = geomEnclose(badPolyInt metal1Cont)
\o executing: badPolyInt = geomAndNot(badPolyInt good)
\o executing: badGate = geomButting(gate badPolyInt)
\o            badGate2 = geomButting(gate badPolyInt (keep == 2))
\o executing: badGate = geomButting(badGate geomEnclose(polyInt metal1Cont))
\o executing: saveDerived(badGate "WARNING: Gate used as conductor...")
\o executing: saveDerived(badGate2 "WARNING: Gate used as conductor...")
\o executing: drc(Cont (width < 0.2) "6A Minimum and maximum width of Cont 0.2u")
\o            drc(Cont (sep < 0.2) "6B Minimum Cont space 0.2u")
\o executing: okCont = drc(Cont ((0.0399 < area) < 0.0401))
\o executing: saveDerived(geomAndNot(Cont okCont) "6A Minimum and maximum width of Cont 0.2u")
\o executing: saveDerived(geomGetNon90(Cont) "Implied Rule that contacts cannot be rotated")
\o executing: saveDerived(geomGetPolygon(Cont) "Implied Rule that contacts must be rectangles")
\o executing: drc(Oxide Cont (enc < 0.2) "6C Minimum Oxide enclosure of Cont 0.2u")
\o executing: drc(Poly Cont (enc < 0.2) "6D Minimum Poly enclsoure of Cont 0.2u")
\o            drc(Poly Cont (sep < 0.2) "6E Minimum Poly to Cont space 0.2u")
\o executing: NimpCont = geomAnd(Cont Nimp)
\o executing: drc(Nimp NimpCont (enc < 0.2) figb "6F Minimum Nimp enclosure of Cont 0.2u")
\o executing: PimpCont = geomAnd(Cont Pimp)
\o executing: drc(Pimp PimpCont (enc < 0.2) figb "6G Minimum Pimp enclosure of Cont 0.2u")
\o executing: drc(Metal1 (width < 0.3) "7A Minimum Metal1 width 0.3u")
\o            drc(Metal1 (sep < 0.3) "7B Minimum Metal1 space 0.3u")
\o            drc(Metal1 (notch < 0.3) "7B Minimum Metal1 space 0.3u")
\o executing: drc(Metal1 Cont (enc < 0.1) "7C Minimum Metal1 enclosure of Cont 0.1u")
\o executing: drc(Via1 (width < 0.2) "8A Minimum and maximum width of Via1 0.2u")
\o            drc(Via1 (sep < 0.3) "8B Minimum Via1 space 0.3u")
\o executing: okCont = drc(Via1 ((0.0399 < area) < 0.0401))
\o executing: saveDerived(geomAndNot(Via1 okCont) "8A Minimum and maximum width of Via1 0.2u")
\o executing: saveDerived(geomGetNon90(Via1) "Implied Rule that contacts cannot be rotated")
\o executing: saveDerived(geomGetPolygon(Via1) "Implied Rule that contacts must be rectangles")
\o executing: drc(Metal1 Via1 (enc < 0.1) "8C Minimum Metal1 enclosure of Via1 0.1u")
\o executing: drc(Metal2 (width < 0.3) "9A Minimum Metal2 width 0.3u")
\o            drc(Metal2 (sep < 0.3) "9B Minimum Metal2 space 0.3u")
\o            drc(Metal2 (notch < 0.3) "9B Minimum Metal2 space 0.3u")
\o executing: drc(Metal2 Via1 (enc < 0.1) "9C Minimum Metal2 enclosure of Via1 0.1u")
\o executing: drc(Via2 (width < 0.2) "10A Minimum and maximum width of Via2 0.2u")
\o            drc(Via2 (sep < 0.3) "10B Minimum Via2 space 0.3u")
\o executing: okCont = drc(Via2 ((0.0399 < area) < 0.0401))
\o executing: saveDerived(geomAndNot(Via2 okCont) "10A Minimum and maximum width of Via2 0.2u")
\o executing: saveDerived(geomGetNon90(Via2) "Implied Rule that contacts cannot be rotated")
\o executing: saveDerived(geomGetPolygon(Via2) "Implied Rule that contacts must be rectangles")
\o executing: drc(Metal2 Via2 (enc < 0.1) "10C Minimum Metal2 enclosure of Via2 0.1u")
\o executing: drc(Metal3 (width < 0.3) "11A Minimum Metal3 width 0.3u")
\o            drc(Metal3 (sep < 0.3) "11B Minimum Metal3 space 0.3u")
\o            drc(Metal3 (notch < 0.3) "11B Minimum Metal3 space 0.3u")
\o executing: capMetal3 = geomOverlap(Metal3 CapMetal)
\o executing: Metal3NoCap = geomAndNot(Metal3 capMetal3)
\o executing: drc(Metal3NoCap Via2 (enc < 0.1) "11C Minimum Metal3 enclosure of Via2 0.1u")
\o executing: drc(capMetal3 Via2 (enc < 0.1) "11D Minimum Metal3 enclosure of Via2 for metal capac...
\o executing: drc(CapMetal (width < 0.5) "12A Minimum CapMetal width .5u")
\o executing: drc(Metal2 CapMetal (enc < 0.4) "12B Minimum Metal2 enclosure of CapMetal 0.4u")
\o executing: drc(CapMetal Via2 (enc < 0.2) "12C Minimum CapMetal enclosure of Via2 0.2u")
\o executing: drc(CapMetal Metal3 (enc < 0.3) "12D Minimum CapMetal enclosure of Metal3 0.3u")
\o executing: nplusres = geomStraddle(nsd Resdum)
\o executing: ndio = geomAnd(nsd DIOdummy)
\o executing: nsd = geomAndNot(nsd geomOr(nplusres ndio))
\o executing: pnp = geomAnd(psd PNPdummy)
\o executing: vpnp = geomAnd(psd BJTdum)
\o executing: psd = geomAndNot(psd geomOr(pnp vpnp))
\o executing: psub = geomAndNot(bulk Nwell)
\o executing: saveDerived(geomAndNot(geomAndNot(nsd geomSizeInTub(ptap psub 10 edge)) ntap) "13A N...
\o executing: saveDerived(geomAndNot(geomAndNot(psd geomSizeInTub(ntap Nwell 10 edge)) ptap) "13A ...
\o executing: drc(Via3 (width < 0.2) "14A Minimum and maximum width of Via3 0.2u")
\o            drc(Via3 (sep < 0.3) "14B Minimum Via3 space 0.3u")
\o executing: okCont = drc(Via3 ((0.0399 < area) < 0.0401))
\o executing: saveDerived(geomAndNot(Via3 okCont) "14A Minimum and maximum width of Via3 0.2u")
\o executing: saveDerived(geomGetNon90(Via3) "Implied Rule that contacts cannot be rotated")
\o executing: saveDerived(geomGetPolygon(Via3) "Implied Rule that contacts must be rectangles")
\o executing: drc(Metal3 Via3 (enc < 0.1) "14C Minimum Metal3 enclosure of Via3 0.1u")
\o executing: drc(Metal4 (width < 0.3) "15A Minimum Metal4 width 0.3u")
\o            drc(Metal4 (sep < 0.3) "15B Minimum Metal4 space 0.3u")
\o            drc(Metal4 (notch < 0.3) "15B Minimum Metal4 space 0.3u")
\o executing: drc(Metal4 Via3 (enc < 0.1) "15C Minimum Metal4 enclosure of Via3 0.1u")
\o executing: drc(Via4 (width < 0.2) "16A Minimum and maximum width of Via4 0.2u")
\o            drc(Via4 (sep < 0.3) "16B Minimum Via4 space 0.3u")
\o executing: okCont = drc(Via4 ((0.0399 < area) < 0.0401))
\o executing: saveDerived(geomAndNot(Via4 okCont) "16A Minimum and maximum width of Via4 0.2u")
\o executing: saveDerived(geomGetNon90(Via4) "Implied Rule that contacts cannot be rotated")
\o executing: saveDerived(geomGetPolygon(Via4) "Implied Rule that contacts must be rectangles")
\o executing: drc(Metal4 Via4 (enc < 0.1) "16C Minimum Metal4 enclosure of Via4 0.1u")
\o executing: drc(Metal5 (width < 0.3) "17A Minimum Metal5 width 0.3u")
\o            drc(Metal5 (sep < 0.3) "17B Minimum Metal5 space 0.3u")
\o            drc(Metal5 (notch < 0.3) "17B Minimum Metal5 space 0.3u")
\o executing: drc(Metal5 Via4 (enc < 0.1) "17C Minimum Metal5 enclosure of Via4 0.1u")
\o executing: drc(Via5 (width < 0.2) "18A Minimum and maximum width of Via5 0.2u")
\o            drc(Via5 (sep < 0.3) "18B Minimum Via5 space 0.3u")
\o executing: okCont = drc(Via5 ((0.0399 < area) < 0.0401))
\o executing: saveDerived(geomAndNot(Via5 okCont) "18A Minimum and maximum width of Via5 0.2u")
\o executing: saveDerived(geomGetNon90(Via5) "Implied Rule that contacts cannot be rotated")
\o executing: saveDerived(geomGetPolygon(Via5) "Implied Rule that contacts must be rectangles")
\o executing: drc(Metal5 Via5 (enc < 0.1) "18C Minimum Metal5 enclosure of Via5 0.1u")
\o executing: drc(Metal6 (width < 0.3) "19A Minimum Metal6 width 0.3u")
\o            drc(Metal6 (sep < 0.3) "19B Minimum Metal6 space 0.3u")
\o            drc(Metal6 (notch < 0.3) "19B Minimum Metal6 space 0.3u")
\o executing: drc(Metal6 Via5 (enc < 0.1) "19C Minimum Metal6 enclosure of Via5 0.1u")
\o DRC started.......Mon Apr  3 19:59:33 2017
\o     completed ....Mon Apr  3 20:00:26 2017
\o     CPU TIME = 00:00:30  TOTAL TIME = 00:00:53
\o *********  Summary of rule violations for cell "sorter_top layout"  *********
\o  # errors  Violated Rules
\o        64  WARNING: Gate used as conductor...
\o        64  Total errors found
\o 
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a ivHiExtract()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Mon Apr  3 20:01:01 2017
\o 
\o Validating hierarchy instantiation for:
\o library: lab3
\o cell:    sorter_top
\o view:    layout
\o Rules come from library gpdk.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: geomErase("marker" "error")
\o executing: geomErase("marker" "warning")
\o executing: geomErase("changedLayer" "tool0")
\o executing: Nwell = geomOr("Nwell")
\o executing: Nburied = geomOr("Nburied")
\o executing: Pwell = geomOr("Pwell")
\o executing: Oxide = geomOr("Oxide")
\o executing: Poly = geomOr("Poly")
\o executing: Pimp = geomOr("Pimp")
\o executing: Nimp = geomOr("Nimp")
\o executing: Cont = geomOr("Cont")
\o executing: Metal1 = geomOr("Metal1")
\o executing: Via1 = geomOr("Via1")
\o executing: Metal2 = geomOr("Metal2")
\o executing: Via2 = geomOr("Via2")
\o executing: Metal3 = geomOr("Metal3")
\o executing: Via3 = geomOr("Via3")
\o executing: Metal4 = geomOr("Metal4")
\o executing: Via4 = geomOr("Via4")
\o executing: Metal5 = geomOr("Metal5")
\o executing: Via5 = geomOr("Via5")
\o executing: Metal6 = geomOr("Metal6")
\o executing: CapMetal = geomOr("CapMetal")
\o executing: Capdum = geomOr("Capdum")
\o executing: Resdum = geomOr("Resdum")
\o executing: BJTdum = geomOr("BJTdum")
\o executing: NPNdummy = geomOr("NPNdummy")
\o executing: PNPdummy = geomOr("PNPdummy")
\o executing: IND2dummy = geomOr("IND2dummy")
\o executing: INDdummy = geomOr("INDdummy")
\o executing: DIOdummy = geomOr("DIOdummy")
\o executing: bulk = geomBkgnd()
\o executing: Psub = geomAndNot(bulk geomOr(Nwell Nburied))
\o executing: isoPsub = geomAnd(geomAndNot(bulk Nwell) Nburied)
\o executing: allPsub = geomOr(Psub isoPsub)
\o executing: NPOD = geomAnd(Nimp Oxide)
\o executing: ntox = geomAnd(NPOD allPsub)
\o executing: ngate = geomAndNot(geomAnd(ntox Poly) Capdum)
\o executing: ndiff = geomAndNot(ntox ngate)
\o executing: ntie = geomAnd(NPOD Nwell)
\o executing: nmosdev = geomOr(ngate)
\o executing: nmos = geomAnd(nmosdev Psub)
\o executing: isonmos = geomAnd(nmosdev isoPsub)
\o executing: PPOD = geomAnd(Pimp Oxide)
\o executing: ptox = geomAnd(PPOD Nwell)
\o executing: pgate = geomAndNot(geomAnd(ptox Poly) Capdum)
\o executing: pdiff = geomAndNot(ptox pgate)
\o executing: ptie = geomAnd(PPOD Psub)
\o executing: nbtie = geomAnd(PPOD isoPsub)
\o executing: pmos = geomOr(pgate)
\o executing: polyres = geomAnd(Poly Resdum)
\o executing: Poly = geomAndNot(Poly polyres)
\o executing: nplusresdev = geomAnd(ntox Resdum)
\o executing: nplusres = geomAnd(nplusresdev Psub)
\o executing: isonplusres = geomAnd(nplusresdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff nplusresdev)
\o executing: nmoscapdev = geomAnd(geomAnd(ntox Capdum) Poly)
\o executing: nmoscap = geomAnd(nmoscapdev Psub)
\o executing: isonmoscap = geomAnd(nmoscapdev isoPsub)
\o executing: ndiff = geomAndNot(ndiff geomOr(nmoscap isonmoscap))
\o executing: nmoscapm1 = geomAnd(Metal1 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal1 = geomAndNot(Metal1 nmoscapm1)
\o executing: nmoscapm2 = geomAnd(Metal2 geomEnclose(geomSize(NPOD 0.6) geomAnd(Poly Capdum)))
\o executing: Metal2 = geomAndNot(Metal2 nmoscapm2)
\o executing: m1MoscapConnector = geomAnd(geomSize(Metal1 0.01) geomSize(nmoscapm1 0.01))
\o executing: m1MoscapCont = geomAnd(Metal1 m1MoscapConnector)
\o executing: Moscapm1Cont = geomAnd(nmoscapm1 m1MoscapConnector)
\o executing: m2MoscapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(nmoscapm2 0.01))
\o executing: m2MoscapCont = geomAnd(Metal2 m2MoscapConnector)
\o executing: Moscapm2Cont = geomAnd(nmoscapm2 m2MoscapConnector)
\o executing: mimcap = geomAnd(Capdum CapMetal)
\o executing: capm2 = geomAnd(Metal2 Capdum)
\o executing: capm3 = geomAnd(Metal3 Capdum)
\o executing: capv23 = geomAnd(Via2 CapMetal)
\o executing: Via2 = geomAndNot(Via2 capv23)
\o executing: Metal2 = geomAndNot(Metal2 capm2)
\o executing: m2IntCapConnector = geomAnd(geomSize(Metal2 0.01) geomSize(capm2 0.01))
\o executing: m2IntCapCont = geomAnd(Metal2 m2IntCapConnector)
\o executing: capm2Cont = geomAnd(capm2 m2IntCapConnector)
\o executing: Metal3 = geomAndNot(Metal3 capm3)
\o executing: m3IntCapConnector = geomAnd(geomSize(Metal3 0.01) geomSize(capm3 0.01))
\o executing: m3IntCapCont = geomAnd(Metal3 m3IntCapConnector)
\o executing: capm3Cont = geomAnd(capm3 m3IntCapConnector)
\o executing: pdiodePlus = geomAnd(DIOdummy ptox)
\o executing: pdiode = geomEnclose(DIOdummy pdiodePlus)
\o executing: ndiodeMinus = geomAnd(DIOdummy ntox)
\o executing: ndiode = geomEnclose(DIOdummy ndiodeMinus)
\o executing: vpnpBase = geomAnd(BJTdum ntie)
\o executing: vpnpColl = geomAnd(BJTdum ptie)
\o executing: vpnpEmit = geomAnd(BJTdum ptox)
\o executing: vpnp = geomEnclose(BJTdum vpnpEmit)
\o executing: vpnpm1 = geomAnd(BJTdum Metal1)
\o executing: vpnpm2 = geomAnd(BJTdum Metal2)
\o executing: vpnpm3 = geomAnd(BJTdum Metal3)
\o executing: bjtCont = geomAnd(Cont geomOr(BJTdum NPNdummy PNPdummy))
\o executing: Cont = geomAndNot(Cont bjtCont)
\o executing: Metal1 = geomAndNot(Metal1 vpnpm1)
\o executing: m1vpnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(vpnpm1 0.01))
\o executing: m1vpnpCont = geomAnd(Metal1 m1vpnpConnector)
\o executing: vpnpm1Cont = geomAnd(vpnpm1 m1vpnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 vpnpm2)
\o executing: m2vpnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(vpnpm2 0.01))
\o executing: m2vpnpCont = geomAnd(Metal2 m2vpnpConnector)
\o executing: vpnpm2Cont = geomAnd(vpnpm2 m2vpnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 vpnpm3)
\o executing: m3vpnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(vpnpm3 0.01))
\o executing: m3vpnpCont = geomAnd(Metal3 m3vpnpConnector)
\o executing: vpnpm3Cont = geomAnd(vpnpm3 m3vpnpConnector)
\o executing: npnBase = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) PPOD)
\o executing: npnColl = geomAnd(geomAndNot(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npnEmit = geomAnd(geomAnd(geomAnd(NPNdummy Nburied) Pwell) NPOD)
\o executing: npn = geomEnclose(NPNdummy npnEmit)
\o executing: npnm1 = geomAnd(NPNdummy Metal1)
\o executing: npnm2 = geomAnd(NPNdummy Metal2)
\o executing: npnm3 = geomAnd(NPNdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 npnm1)
\o executing: m1npnConnector = geomAnd(geomSize(Metal1 0.01) geomSize(npnm1 0.01))
\o executing: m1npnCont = geomAnd(Metal1 m1npnConnector)
\o executing: npnm1Cont = geomAnd(npnm1 m1npnConnector)
\o executing: Metal2 = geomAndNot(Metal2 npnm2)
\o executing: m2npnConnector = geomAnd(geomSize(Metal2 0.01) geomSize(npnm2 0.01))
\o executing: m2npnCont = geomAnd(Metal2 m2npnConnector)
\o executing: npnm2Cont = geomAnd(npnm2 m2npnConnector)
\o executing: Metal3 = geomAndNot(Metal3 npnm3)
\o executing: m3npnConnector = geomAnd(geomSize(Metal3 0.01) geomSize(npnm3 0.01))
\o executing: m3npnCont = geomAnd(Metal3 m3npnConnector)
\o executing: npnm3Cont = geomAnd(npnm3 m3npnConnector)
\o executing: pnpBase = geomAnd(geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) ntie)
\o executing: pnpColl = geomAnd(geomAndNot(geomAnd(geomAnd(PNPdummy Nburied) Pwell) Nwell) PPOD)
\o executing: pnpEmit = geomAnd(geomAnd(geomAnd(PNPdummy Nburied) Pwell) ptox)
\o executing: pnp = geomEnclose(PNPdummy pnpEmit)
\o executing: pnpm1 = geomAnd(PNPdummy Metal1)
\o executing: pnpm2 = geomAnd(PNPdummy Metal2)
\o executing: pnpm3 = geomAnd(PNPdummy Metal3)
\o executing: Metal1 = geomAndNot(Metal1 pnpm1)
\o executing: m1pnpConnector = geomAnd(geomSize(Metal1 0.01) geomSize(pnpm1 0.01))
\o executing: m1pnpCont = geomAnd(Metal1 m1pnpConnector)
\o executing: pnpm1Cont = geomAnd(pnpm1 m1pnpConnector)
\o executing: Metal2 = geomAndNot(Metal2 pnpm2)
\o executing: m2pnpConnector = geomAnd(geomSize(Metal2 0.01) geomSize(pnpm2 0.01))
\o executing: m2pnpCont = geomAnd(Metal2 m2pnpConnector)
\o executing: pnpm2Cont = geomAnd(pnpm2 m2pnpConnector)
\o executing: Metal3 = geomAndNot(Metal3 pnpm3)
\o executing: m3pnpConnector = geomAnd(geomSize(Metal3 0.01) geomSize(pnpm3 0.01))
\o executing: m3pnpCont = geomAnd(Metal3 m3pnpConnector)
\o executing: pnpm3Cont = geomAnd(pnpm3 m3pnpConnector)
\o executing: m3Ind = geomAnd(geomAnd(Metal3 IND2dummy) INDdummy)
\o executing: v2Ind = geomAnd(Via2 m3Ind)
\o executing: Via2 = geomAndNot(Via2 v2Ind)
\o executing: m2Ind = geomAnd(geomAnd(Metal2 IND2dummy) INDdummy)
\o executing: inductor = geomAnd(INDdummy m3Ind)
\o executing: m2Pieces = geomAndNot(m2Ind m3Ind)
\o executing: m2IndPlus = geomStraddle(m2Ind m2Pieces)
\o executing: m2IndMinus = geomAndNot(m2Ind m2IndPlus)
\o executing: inddmym2 = geomAnd(Metal2 INDdummy)
\o executing: m2IndInt = geomAndNot(inddmym2 geomOr(m2IndPlus m2IndMinus))
\o executing: m2IntIndPlusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndPlus 0.01))
\o executing: m2IntIndPlusCont = geomAnd(m2IndInt m2IntIndPlusConnector)
\o executing: m2PlusCont = geomAnd(m2IndPlus m2IntIndPlusConnector)
\o executing: m2IntIndMinusConnector = geomAnd(geomSize(m2IndInt 0.01) geomSize(m2IndMinus 0.01))
\o executing: m2IntIndMinusCont = geomAnd(m2IndInt m2IntIndMinusConnector)
\o executing: m2MinusCont = geomAnd(m2IndMinus m2IntIndMinusConnector)
\o executing: Metal2 = geomAndNot(Metal2 inddmym2)
\o executing: m2IntInddmyConnector = geomAnd(geomSize(Metal2 0.01) geomSize(m2IndInt 0.01))
\o executing: m2IntInddmyCont = geomAnd(Metal2 m2IntInddmyConnector)
\o executing: Inddmym2Cont = geomAnd(m2IndInt m2IntInddmyConnector)
\o executing: inddmym3 = geomAnd(Metal3 INDdummy)
\o executing: Metal3 = geomAndNot(Metal3 inddmym3)
\o executing: m3IntInddmyConnector = geomAnd(geomSize(Metal3 0.01) geomSize(inddmym3 0.01))
\o executing: m3IntInddmyCont = geomAnd(Metal3 m3IntInddmyConnector)
\o executing: Inddmym3Cont = geomAnd(inddmym3 m3IntInddmyConnector)
\o executing: m2outsideInd = geomAndNot(inddmym2 IND2dummy)
\o executing: sized_m3Ind = geomSize(geomSize(m3Ind 9) -9)
\o executing: m3Ind_hole = geomHoles(sized_m3Ind)
\o executing: dummy_area = geomAndNot(IND2dummy geomOr(sized_m3Ind m3Ind_hole))
\o executing: m3Ind_separation_blocks = drc(m3Ind (notch < 20) opposite shielded)
\o executing: m3Ind_separation_area = geomAndNot(drc(m3Ind (notch < 20) shielded) geomOr(m3Ind_hol...
\o executing: gate = geomOr(nmos isonmos pmos nmoscap isonmoscap)
\o executing: polyInt = geomAndNot(Poly gate)
\o executing: polyIntConnector = geomAnd(geomSize(polyInt 0.01) geomSize(gate 0.01))
\o executing: polyIntCont = geomAnd(polyInt polyIntConnector)
\o executing: gateCont = geomAnd(gate polyIntConnector)
\o executing: scaVia = geomEmpty()
\o executing: scaCont = geomEmpty()
\o executing: scaPort = geomEmpty()
\o executing: scaNwell = geomEmpty()
\o executing: scaNburied = geomEmpty()
\o executing: nonResConts = geomAndNot(Cont geomButting(Cont Resdum))
\o executing: overUnderCont = geomSize(geomSize(nonResConts 0.125) -0.125)
\o executing: OverUnderVia1 = geomSize(geomSize(Via1 0.175) -0.175)
\o executing: OverUnderVia2 = geomSize(geomSize(Via2 0.175) -0.175)
\o executing: OverUnderVia3 = geomSize(geomSize(Via3 0.175) -0.175)
\o executing: OverUnderVia4 = geomSize(geomSize(Via4 0.175) -0.175)
\o executing: OverUnderVia5 = geomSize(geomSize(Via5 0.175) -0.175)
\o executing: Cont = geomOr(overUnderCont Cont)
\o executing: Via1 = geomOr(OverUnderVia1 Via1)
\o executing: Via2 = geomOr(OverUnderVia2 Via2)
\o executing: Via3 = geomOr(OverUnderVia3 Via3)
\o executing: Via4 = geomOr(OverUnderVia4 Via4)
\o executing: Via5 = geomOr(OverUnderVia5 Via5)
\o executing: geomConnect((via Cont polyInt ndiff pdiff ntie ptie nbtie pdiodePlus ndiodeMinus nmo...
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\w *WARNING* use dbReplaceHierProp to replace a hierarchical property
\o executing: Psub = geomStamp(Psub ptie error)
\o executing: isoPsub = geomStamp(isoPsub nbtie error)
\o executing: Nwell = geomStamp(Nwell ntie error)
\o executing: extractDevice(nmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" phys...
\o            extractDevice(nmos (gate "G") (ndiff "S" "D") (Psub "B") "nmos ivpcell gpdk" physical)
\o For layer nmos :
\o     3462  shapes encountered.
\o     3462  nmos ivpcell gpdk devices well formed.
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") nmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside nmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") nmos shared)
\o executing: l_NMOS = measureParameter(length (nmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (nmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(isonmos (gate "G") (ndiff "S" "D") (scaPort "B") "nmos ivpcell gpdk" p...
\o            extractDevice(isonmos (gate "G") (ndiff "S" "D") (isoPsub "B") "nmos ivpcell gpdk" p...
\o executing: areaSDn = measureParasitic(area (ndiff) figure)
\o executing: areaSDn = calculateParasitic((areaSDn * 1e-12))
\o executing: attachParasitic(areaSDn ("as" "S") ("ad" "D") isonmos shared)
\o executing: perimSDn = measureParasitic(length (ndiff outside isonmos) 1e-06 figure)
\o executing: attachParasitic(perimSDn ("ps" "S") ("pd" "D") isonmos shared)
\o executing: l_NMOS = measureParameter(length (isonmos inside Poly) 0.5)
\o            w_NMOS = measureParameter(length (isonmos coincident Poly) 0.5)
\o executing: normalizedl_NMOS = calculateParameter((l_NMOS * 1e-06))
\o executing: normalizedw_NMOS = calculateParameter((w_NMOS * 1e-06))
\o executing: saveParameter(normalizedl_NMOS "l")
\o executing: saveParameter(normalizedw_NMOS "w")
\o executing: saveParameter(normalizedw_NMOS "effW")
\o executing: extractDevice(pmos (gate "G") (pdiff "S" "D") (scaPort "B") "pmos ivpcell gpdk" phys...
\o            extractDevice(pmos (gate "G") (pdiff "S" "D") (Nwell "B") "pmos ivpcell gpdk" physical)
\o For layer pmos :
\o     3464  shapes encountered.
\o     3464  pmos ivpcell gpdk devices well formed.
\o executing: areaSDp = measureParasitic(area (pdiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp ("as" "S") ("ad" "D") pmos shared)
\o executing: perimSDp = measureParasitic(length (pdiff outside pmos) 1e-06 figure)
\o executing: attachParasitic(perimSDp ("ps" "S") ("pd" "D") pmos shared)
\o executing: l_PMOS = measureParameter(length (pmos inside Poly) 0.5)
\o            w_PMOS = measureParameter(length (pmos coincident Poly) 0.5)
\o executing: normalizedl_PMOS = calculateParameter((l_PMOS * 1e-06))
\o executing: normalizedw_PMOS = calculateParameter((w_PMOS * 1e-06))
\o executing: saveParameter(normalizedl_PMOS "l")
\o executing: saveParameter(normalizedw_PMOS "w")
\o executing: saveParameter(normalizedw_PMOS "effW")
\o executing: extractDevice(polyres (polyInt "PLUS" "MINUS") "polyres  ivpcell gpdk")
\o For layer polyres :
\o     51  shapes encountered.
\o     51  polyres  ivpcell gpdk devices well formed.
\o executing: width = measureParameter(length (polyres butting Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (polyres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 7.5) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(nplusres (ndiff "PLUS" "MINUS") (Psub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (nplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (nplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(isonplusres (ndiff "PLUS" "MINUS") (scaPort "B") "nplusres ivpcell gpdk")
\o            extractDevice(isonplusres (ndiff "PLUS" "MINUS") (isoPsub "B") "nplusres ivpcell gpdk")
\o executing: width = measureParameter(length (isonplusres inside Oxide) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: perimlength = measureParameter(length (isonplusres coincident Resdum) 0.5)
\o executing: length = calculateParameter((perimlength - width))
\o executing: normalizedLength = calculateParameter((length * 1e-06))
\o executing: res = calculateParameter(((length * 300) / width))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedWidth "wSim")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(normalizedLength "lSim")
\o executing: saveParameter(res "r")
\o executing: extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell gpdk")
\o            extractDevice(nmoscap (gate "TOP") (ndiff "BOT") (Psub "B") "nmoscap ivpcell gpdk")
\o executing: w = measureParameter(length (nmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (nmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (nmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" nmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside nmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" nmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (scaPort "B") "nmoscap ivpcell g...
\o            extractDevice(isonmoscap (gate "TOP") (ndiff "BOT") (isoPsub "B") "nmoscap ivpcell g...
\o executing: w = measureParameter(length (isonmoscap coincident Poly) 0.5)
\o executing: normalizedWidth = calculateParameter((w * 1e-06))
\o executing: capPerim = measureParameter(perimeter (isonmoscap))
\o executing: l = calculateParameter(((capPerim - (2 * w)) / 2))
\o executing: normalizedLength = calculateParameter((l * 1e-06))
\o executing: capArea = measureParameter(area (isonmoscap))
\o executing: normalizedArea = calculateParameter((capArea * 1e-12))
\o executing: areaSDp = measureParasitic(area (ndiff) figure)
\o executing: areaSDp = calculateParasitic((areaSDp * 1e-12))
\o executing: attachParasitic(areaSDp "as" "ad" isonmoscap shared)
\o executing: perimSDp = measureParasitic(length (ndiff outside isonmoscap) 1e-06 figure)
\o executing: attachParasitic(perimSDp "ps" "pd" isonmoscap shared)
\o executing: c = calculateParameter((normalizedArea * 0.00846338))
\o executing: saveParameter(normalizedWidth "w")
\o executing: saveParameter(normalizedLength "l")
\o executing: saveParameter(c "c")
\o executing: extractDevice(mimcap (CapMetal "PLUS") (capm2 "MINUS") "mimcap ivpcell gpdk")
\o executing: capArea = measureParameter(area (mimcap))
\o            capPerim = measureParameter(perimeter (mimcap))
\o executing: capL = calculateParameter(sqrt(capArea))
\o executing: normalizedL = calculateParameter((capL * 1e-06))
\o executing: cap = calculateParameter(((capArea * 1e-15) + (capPerim * 1e-16)))
\o executing: saveParameter(cap "c")
\o executing: saveParameter(normalizedL "l")
\o executing: saveParameter(normalizedL "w")
\o executing: extractDevice(vpnp (vpnpEmit "E") (vpnpBase "B") (vpnpColl "C") "vpnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (vpnp over vpnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(npn (npnEmit "E") (npnBase "B") (npnColl "C") "npn ivpcell gpdk")
\o executing: emitArea = measureParameter(area (npn over npnEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(pnp (pnpEmit "E") (pnpBase "B") (pnpColl "C") "pnp ivpcell gpdk")
\o executing: emitArea = measureParameter(area (pnp over pnpEmit))
\o executing: saveParameter(emitArea "area")
\o executing: extractDevice(inductor (m2IndMinus "MINUS") (m2IndPlus "PLUS") "inductor ivpcell gpd...
\o executing: width = measureParameter(length (inductor butting m2outsideInd) 0.5)
\o executing: normalizedWidth = calculateParameter((width * 1e-06))
\o executing: total_turns = measureParameter(bends_all (inductor))
\o executing: turns = calculateParameter((total_turns / 4))
\o executing: separation_block_perim = measureParameterlength((inductor butting m3Ind_separation_b...
\o executing: tot_separation_perim = measureParameterlength((inductor butting m3Ind_separation_area))
\o executing: sep = calculateParameter(((tot_separation_perim - separation_block_perim) / ((total_...
\o executing: normalizedSep = calculateParameter((sep * 1e-06))
\o executing: total_perim = measureParameterlength((inductor butting m3Ind_hole))
\o executing: radius = calculateParameter(((total_perim - ((2 * width) + sep)) / 8))
\o executing: normalizedRad = calculateParameter((radius * 1e-06))
\o executing: inductance = calculateParameter(((k1 * u0 * turns * turns * (0.5 * ((2 * normalizedR...
\o executing: saveParameter(turns "nr")
\o executing: saveParameter(normalizedWidth "width")
\o executing: saveParameter(normalizedSep "space")
\o executing: saveParameter(normalizedRad "rad")
\o executing: saveParameter(inductance "ind")
\o executing: extractDevice(pdiode (pdiodePlus "PLUS") (ntie "MINUS") "pdio ivpcell gpdk")
\o executing: area = measureParameter(area (pdiode over pdiodePlus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (pdiode over pdiodePlus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: extractDevice(ndiode (ptie "PLUS") (ndiodeMinus "MINUS") "ndio ivpcell gpdk")
\o executing: area = measureParameter(area (ndiode over ndiodeMinus))
\o executing: normalizedArea = calculateParameter((area * 1e-12))
\o executing: perim = measureParameter(perimeter (ndiode over ndiodeMinus))
\o executing: normalizedPerim = calculateParameter((perim * 1e-06))
\o executing: saveParameter(normalizedArea "area")
\o executing: saveParameter(normalizedPerim "pj")
\o executing: saveInterconnect((polyInt "Poly") (gate "Poly"))
\o executing: saveInterconnect((Cont "Cont") (bjtCont "Cont") (Via1 "Via1") (Via2 "Via2"))
\o executing: saveInterconnect((Metal1 "Metal1") (Metal2 "Metal2") (Metal3 "Metal3"))
\o executing: saveInterconnect((vpnpm1 "Metal1") (vpnpm2 "Metal2") (vpnpm3 "Metal3"))
\o executing: saveInterconnect((npnm1 "Metal1") (npnm2 "Metal2") (npnm3 "Metal3"))
\o executing: saveInterconnect((pnpm1 "Metal1") (pnpm2 "Metal2") (pnpm3 "Metal3"))
\o executing: saveInterconnect((capm2 "Metal2") (capm3 "Metal3"))
\o executing: saveInterconnect((m2IndPlus "Metal2") (m2IndMinus "Metal2"))
\o executing: saveRecognition(nmos "Poly")
\o executing: saveRecognition(isonmos "Poly")
\o executing: saveRecognition(pmos "Poly")
\o executing: saveRecognition(nmoscap "Poly")
\o executing: saveRecognition(isonmoscap "Poly")
\o executing: saveRecognition(polyres "Poly")
\o executing: saveRecognition(nplusres "Nimp")
\o executing: saveRecognition(isonplusres "Nimp")
\o executing: saveRecognition(mimcap "Metal3")
\o executing: saveRecognition(vpnp "Pimp")
\o executing: saveRecognition(npn "Nimp")
\o executing: saveRecognition(pnp "Pimp")
\o executing: saveRecognition(inductor "Metal3")
\o executing: saveRecognition(ndiode "Nimp")
\o executing: saveRecognition(pdiode "Pimp")
\o executing: copyGraphics(("Resdum" "drawing") all)
\o executing: copyGraphics(("Capdum" "drawing") all)
\o executing: copyGraphics(("BJTdum" "drawing") all)
\o executing: copyGraphics(("NPNdummy" "drawing") all)
\o executing: copyGraphics(("PNPdummy" "drawing") all)
\o executing: copyGraphics(("INDdummy" "drawing") all)
\o executing: copyGraphics(("IND2dummy" "drawing") all)
\o executing: copyGraphics(("DIOdummy" "drawing") all)
\o executing: copyGraphics(("text" "drawing") all)
\o Extraction started.......Mon Apr  3 20:01:01 2017
\o            completed ....Mon Apr  3 20:02:14 2017
\o     CPU TIME = 00:00:34  TOTAL TIME = 00:01:13
\o *********   Summary of rule violations for cell "sorter_top layout"   *********
\o    Total errors found: 0
\o 
\o saving rep lab3/sorter_top/extracted
\r t
\a ivHiLVS()
\r nil
\a ivLVSEnvForm->doNetlist->extracted->value = t 		ddsSyncWithForm( ivLVSEnvForm 'extBrowse 'extLibName 'extCellName 'extViewName nil)
\r t
\i ddsServSelect("lab3" "sorter_top" "extracted")
\i ddsServSelect("lab3" "sorter_top" "")
\i ddsServSelect("lab3" "sorter_top" "extracted")
\a ivLVSRun()
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists failed to match.
\o 
\o Run Directory: /afs/ualberta.ca/home/a/k/akolkar/ece403-lab3/Cadence/LVS
\p > 
\a hiDBoxOK(ivDBox) 
\r t
\a ivLVSShowOutput( "si.out" )
\r t
\a hiSetCurrentWindow(window(6))
\r t
\a leSelBoxOrStretch()
\i 1076.7:575.9
\i 1076.7:575.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 1080.3:555.4
\r t
\r t
\a hiSetCurrentWindow(window(12))
\r t
\a hiResizeWindow(window(12) list(135:180 1035:880))
\r t
\a hiResizeWindow(window(12) list(158:177 1058:877))
\r t
\a hiResizeWindow(window(12) list(209:167 1109:867))
\r t
\a hiResizeWindow(window(12) list(266:156 1166:856))
\r t
\a hiResizeWindow(window(12) list(323:145 1223:845))
\r t
\a hiResizeWindow(window(12) list(380:132 1280:832))
\r t
\a hiResizeWindow(window(12) list(439:125 1339:825))
\r t
\a hiResizeWindow(window(12) list(494:116 1394:816))
\r t
\a hiResizeWindow(window(12) list(535:109 1435:809))
\r t
\a hiResizeWindow(window(12) list(548:109 1448:809))
\r t
\a hiResizeWindow(window(12) list(575:109 1475:809))
\r t
\a hiResizeWindow(window(12) list(582:109 1482:809))
\r t
\a hiResizeWindow(window(12) list(586:109 1486:809))
\r t
\a hiResizeWindow(window(12) list(588:109 1488:809))
\r t
\a hiResizeWindow(window(12) list(589:110 1489:810))
\r t
\a hiResizeWindow(window(12) list(590:113 1490:813))
\r t
\a hiResizeWindow(window(12) list(594:121 1494:821))
\r t
\a hiResizeWindow(window(12) list(596:127 1496:827))
\r t
\a hiResizeWindow(window(12) list(605:138 1505:838))
\r t
\a hiResizeWindow(window(12) list(614:151 1514:851))
\r t
\a hiResizeWindow(window(12) list(623:162 1523:862))
\r t
\a hiResizeWindow(window(12) list(632:173 1532:873))
\r t
\a hiResizeWindow(window(12) list(641:184 1541:884))
\r t
\a hiResizeWindow(window(12) list(648:193 1548:893))
\r t
\a hiResizeWindow(window(12) list(655:202 1555:902))
\r t
\a hiResizeWindow(window(12) list(662:207 1562:907))
\r t
\a hiResizeWindow(window(12) list(667:211 1567:911))
\r t
\a hiResizeWindow(window(12) list(671:216 1571:916))
\r t
\a hiResizeWindow(window(12) list(675:216 1575:916))
\r t
\a hiResizeWindow(window(12) list(679:220 1579:920))
\r t
\a hiResizeWindow(window(12) list(683:224 1583:924))
\r t
\a hiResizeWindow(window(12) list(686:226 1586:926))
\r t
\a hiResizeWindow(window(12) list(687:227 1587:927))
\r t
\a hiResizeWindow(window(12) list(689:230 1589:930))
\r t
\a hiResizeWindow(window(12) list(691:233 1591:933))
\r t
\a hiResizeWindow(window(12) list(693:235 1593:935))
\r t
\a hiResizeWindow(window(12) list(694:238 1594:938))
\r t
\a hiResizeWindow(window(12) list(695:239 1595:939))
\r t
\a hiResizeWindow(window(12) list(696:240 1596:940))
\r t
\a hiResizeWindow(window(12) list(697:241 1597:941))
\r t
\a hiResizeWindow(window(12) list(698:242 1598:942))
\r t
\a hiResizeWindow(window(12) list(699:243 1599:943))
\r t
\a hiResizeWindow(window(12) list(700:244 1600:944))
\r t
\a ivLVSEnvForm->doNetlist->schematic->value = t 		 ddsSyncWithForm( ivLVSEnvForm 'schBrowse 'schLibName 'schCellName 'schViewName nil)
\r t
\i ddsServSelect("lab3" "sorter" "schematic")
\i ddsServSelect("lab3" "sorter_top" "schematic")
\a ivLVSRun()
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match.
\o 
\o Run Directory: /afs/ualberta.ca/home/a/k/akolkar/ece403-lab3/Cadence/LVS
\p > 
\a hiDBoxOK(ivDBox) 
\r t
\a ivLVSEnvForm->doNetlist->extracted->value = t 		ddsSyncWithForm( ivLVSEnvForm 'extBrowse 'extLibName 'extCellName 'extViewName nil)
\r t
\i ddsServSelect("lab3" "sorter_top" "extracted")
\i ddsServSelect("lab3" "sorter_top" "extractedC")
\a ivLVSRun()
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match.
\o 
\o Run Directory: /afs/ualberta.ca/home/a/k/akolkar/ece403-lab3/Cadence/LVS
\p > 
\a hiDBoxOK(ivDBox) 
\r t
\a hiCloseWindow(window(10))
\r t
\a hiCloseWindow(window(12))
\r t
\a hiCloseWindow(window(6))
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\o "lab3 sim_sorter schematic" saved.
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevEditSelectedAnas('sevSession1)
\p > 
\a _asii_UltraSim1_analysis_form->tran_stop->value = "100n"
\r "100n"
\a hiFormDone(_asii_UltraSim1_analysis_form)
\r t
\r t
\a sevCopyCellViewVariables('sevSession1)
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1190:459 1768:831))
\r t
\a hiResizeWindow(window(4) list(1194:461 1772:833))
\r t
\a hiResizeWindow(window(4) list(1196:463 1774:835))
\r t
\a hiResizeWindow(window(4) list(1198:464 1776:836))
\r t
\a hiResizeWindow(window(4) list(1199:464 1777:836))
\r t
\a hiResizeWindow(window(4) list(1201:466 1779:838))
\r t
\a hiResizeWindow(window(4) list(1204:469 1782:841))
\r t
\a hiResizeWindow(window(4) list(1207:471 1785:843))
\r t
\a hiResizeWindow(window(4) list(1209:472 1787:844))
\r t
\a hiResizeWindow(window(4) list(1212:474 1790:846))
\r t
\a hiResizeWindow(window(4) list(1214:475 1792:847))
\r t
\a hiResizeWindow(window(4) list(1215:476 1793:848))
\r t
\a hiResizeWindow(window(4) list(1215:477 1793:849))
\r t
\a hiResizeWindow(window(4) list(1218:480 1796:852))
\r t
\a hiResizeWindow(window(4) list(1220:482 1798:854))
\r t
\a hiResizeWindow(window(4) list(1223:483 1801:855))
\r t
\a hiResizeWindow(window(4) list(1226:485 1804:857))
\r t
\a hiResizeWindow(window(4) list(1230:487 1808:859))
\r t
\a hiResizeWindow(window(4) list(1231:488 1809:860))
\r t
\a hiResizeWindow(window(4) list(1234:490 1812:862))
\r t
\a hiResizeWindow(window(4) list(1236:493 1814:865))
\r t
\a hiResizeWindow(window(4) list(1240:494 1818:866))
\r t
\a hiResizeWindow(window(4) list(1242:494 1820:866))
\r t
\a hiResizeWindow(window(4) list(1244:494 1822:866))
\r t
\a hiResizeWindow(window(4) list(1245:494 1823:866))
\r t
\a hiResizeWindow(window(4) list(1247:494 1825:866))
\r t
\a hiResizeWindow(window(4) list(1250:494 1828:866))
\r t
\a hiResizeWindow(window(4) list(1251:494 1829:866))
\r t
\a sevWindowForm1->varListBox->value = '( "1   vpow            " )
\r ("1   vpow            ")
\a sevWindowForm1->varListBox->value = '("1   vpow            " )
\r ("1   vpow            ")
\a (sevEditSelectedVars 'sevSession1)
\p > 
\a hiiSetCurrentForm('sevVariablesForm1)
\r t
\a sevVariablesForm1->expression->value = "1.8"
\r "1.8"
\a hiFormDone(sevVariablesForm1)
\r t
\r t
\a sevWindowForm1->varListBox->value = '( "1   vpow     1.8    " )
\r ("1   vpow     1.8    ")
\a sevWindowForm1->varListBox->value = '( "2   tris            " )
\r ("2   tris            ")
\a sevWindowForm1->varListBox->value = '("2   tris            " )
\r ("2   tris            ")
\a (sevEditSelectedVars 'sevSession1)
\p > 
\a sevVariablesForm1->expression->value = "50p"
\r "50p"
\a _hiFormApplyCB(sevVariablesForm1)
\r t
\a (sevSetVariablesFromForm 'sevSession1 (sevForm 'sevSession1 'variables) 'next)
\r ("3   tper            ")
\a sevVariablesForm1->expression->value = "10n"
\r "10n"
\a _hiFormApplyCB(sevVariablesForm1)
\r t
\a (sevSetVariablesFromForm 'sevSession1 (sevForm 'sevSession1 'variables) 'next)
\r ("4   tfal            ")
\a sevVariablesForm1->expression->value = "50p"
\r "50p"
\a _hiFormApplyCB(sevVariablesForm1)
\r t
\a (sevSetVariablesFromForm 'sevSession1 (sevForm 'sevSession1 'variables) 'next)
\r ("5   tdel            ")
\a sevVariablesForm1->expression->value = "0"
\r "0"
\a _hiFormApplyCB(sevVariablesForm1)
\r t
\a hiFormDone(sevVariablesForm1)
\r t
\r t
\a sevSetEngineOptions('sevSession1 'analog)
\p > 
\a hiiSetCurrentForm('_asii_UltraSim1_opts_form)
\r t
\a _asii_UltraSim1_opts_form->postl->value = "Liberal RCR (3)"
\r "Liberal RCR (3)"
\a hiFormDone(_asii_UltraSim1_opts_form)
\r t
\r t
\a sevChangeOutsOnSchematic('sevSession1 'plot)
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a schZoomFit(1.0 0.9)
\r t
\a schSingleSelectPt()
\i 1.8125:1.125
\i 1.8125:1.125
\r t
\a schSingleSelectPt()
\i 1.8125:1
\i 1.8125:1
\r t
\a schSingleSelectPt()
\i 1.8125:0.875
\i 1.8125:0.875
\r t
\a schSingleSelectPt()
\i 1.9375:0.75
\i 1.9375:0.75
\r t
\a schSingleSelectPt()
\i -1:-0.3125
\i -1:-0.3125
\r t
\a schSingleSelectPt()
\i -1:1.1875
\i -1:1.1875
\r t
\a schSingleSelectPt()
\i -1.0625:1.125
\i -1.0625:1.125
\r t
\a schSingleSelectPt()
\i -1.0625:0.9375
\i -1.0625:0.9375
\r t
\a schSingleSelectPt()
\i -1.0625:0.8125
\i -1.0625:0.8125
\r t
\a astiCancelSelect(hiGetCurrentWindow())
\r unbound
\a hiSetCurrentWindow(window(4))
\r t
\a sevNetlistAndRun('sevSession1)
\p > 
\a hiDBoxOK(sevblockingDialogBox) 
\r t
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Initializing the control file using cp:
\o     cp /CMC/EDA/tools/cadence/IC5141USR6_2010/tools.lnx86/dfII/etc/si/control.spectre /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/netlist/control
\o Copying Spectre source file 'spectre.inp'
\o Copying Spectre command file 'spectre.sim'
\o Begin Incremental Netlisting Apr  3 20:16:49 2017
\o End netlisting Apr  3 20:16:51 2017
\o 
\o Netlisting Statistics:
\o 	Number of components: 20268
\o 
\o 	Elapsed time:          3.0s (6756.00/s)
\o Errors: 0	Warnings: 0
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a schZoomFit(1.0 0.9)
\r t
\a hiSetCurrentWindow(window(13))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->anaListBox->value = '( "1   tran       0      100n                 yes" )
\r ("1   tran       0      100n                 yes")
\a sevWindowForm1->anaListBox->value = '("1   tran       0      100n                 yes" )
\r ("1   tran       0      100n                 yes")
\a (sevEditSelectedAnas 'sevSession1)
\p > 
\a _asii_UltraSim1_analysis_form->tran_stop->value = "300n"
\r "300n"
\a hiFormDone(_asii_UltraSim1_analysis_form)
\r t
\r t
\a sevNetlistAndRun('sevSession1)
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:17:48 2017
\o End netlisting Apr  3 20:17:48 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->varListBox->value = '( "3   tper     10n    " )
\r ("3   tper     10n    ")
\a sevWindowForm1->varListBox->value = '( "3   tper     10n    " )
\r ("3   tper     10n    ")
\a sevWindowForm1->varListBox->value = '("3   tper     10n    " )
\r ("3   tper     10n    ")
\a (sevEditSelectedVars 'sevSession1)
\p > 
\a hiiSetCurrentForm('sevVariablesForm1)
\r t
\a sevVariablesForm1->expression->value = "20n"
\r "20n"
\a (hiFormApply (hiGetCurrentForm)) (sevRunEngine (sevSession (hiGetCurrentForm)))
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:22:31 2017
\o End netlisting Apr  3 20:22:32 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   1.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a deOpen()
\p > 
\a hiiSetCurrentForm('deOpenForm)
\r t
\a hiFormDone(deOpenForm)
\r t
\o =======Start Virtuoso Preview environment=======
\r window:16
\a hiResizeWindow(window(16) list(120:185 1020:875))
\r t
\a hiResizeWindow(window(16) list(120:185 1020:875))
\r t
\a hiResizeWindow(window(16) list(-4:27 1916:1025))
\r t
\a deInstallApp(getCurrentWindow() "Layout")
\r t
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a mouseSingleSelectPt
\i 347.7:750.9
\r t
\a leSelBoxOrStretch()
\i 305.5:853.5
\i 305.5:853.5
\p > 
\a addPoint(hiGetCommandPoint())
\i 377.9:702.6
\r t
\r t
\a leSetObjectSelectable("pin" t)
\r t
\a mouseSingleSelectPt
\i 367:735.2
\r t
\a leHiEditProp()
\r t
\a mouseSingleSelectPt
\i 1594.5:21.9
\r t
\a mouseSingleSelectPt
\i 1677.8:30.3
\r t
\a geiPlInvokePlistAction("editorNum0" "cancel")
\r t
\a mouseSingleSelectPt
\i 1071.9:-66.2
\r nil
\a geChangeCellView()
\p > 
\a deOpenForm->deViewName->value = "schematic"
\r "schematic"
\a hiFormDone(deOpenForm)
\r t
\r window:16
\a hiZoomIn()
\i -10:24.25
\p > 
\a addPoint(hiGetCommandPoint())
\i 2.8125:13
\r t
\r t
\a hiZoomIn()
\i -4.0625:20.375
\p > 
\a addPoint(hiGetCommandPoint())
\i 3.375:15.875
\r t
\r t
\a schHiObjectProperty()
\r t
\a schSingleSelectPt()
\i -3.125:18.9375
\r t
\a hiiSetCurrentForm('schObjPropForm)
\r t
\a schSingleSelectPt()
\i -3.25:18.6875
\r t
\a schSingleSelectPt()
\i -0.1875:18.875
\r t
\a schSingleSelectPt()
\i -0.5:18.1875
\r nil
\a hiFormCancel(schObjPropForm) 
\r t
\a schHiOpenCellView()
\p > 
\a hiiSetCurrentForm('deOpenForm)
\r t
\a deOpenForm->deViewName->value = "layout"
\r "layout"
\a hiFormDone(deOpenForm)
\r t
\o =======Start Virtuoso Preview environment=======
\r nil
\a prsMouseSelPt()
\i 1607.8:31.5
\r t
\a leSetAllLayerVisible(nil)
\r t
\a leSetObjectSelectable("pin" t)
\r t
\a leSetAllLayerVisible(t)
\r t
\a prsMouseSelPt()
\i 1642.8:-71.1
\r nil
\a prsMouseSelPt()
\i 1606.6:19.5
\r t
\a prsMouseSelPt()
\i 1612.6:31.5
\r t
\a prsMouseSelPt()
\i 418.9:830.5
\r nil
\a hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)
\r t
\a prsMouseSelPt()
\i 1601.8:25.5
\r t
\a deInstallApp(getCurrentWindow() "Layout")
\r t
\a mouseSingleSelectPt
\i 595.2:851.1
\r nil
\a mouseSingleSelectPt
\i 374.3:729.2
\r t
\a mouseSingleSelectPt
\i 346.5:738.8
\r t
\a leHiEditProp()
\r t
\a mouseSingleSelectPt
\i 1605.4:19.5
\r t
\a leHiEditProp()
\r t
\a geiPlInvokePlistAction("editorNum0" "cancel")
\r t
\a hiCloseWindow(window(16))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevChooseEnvironmentOptions('sevSession1)
\p > 
\a hiiSetCurrentForm('_asii_UltraSim1_envOpts_form)
\r t
\a _asii_UltraSim1_envOpts_form->switchViewList->value = "spectre cmos_sch cmos.sch schematic veriloga"
\r "spectre cmos_sch cmos.sch schematic veriloga"
\a hiFormDone(_asii_UltraSim1_envOpts_form)
\r t
\r t
\a sevNetlistAndRun('sevSession1)
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:29:04 2017
\o End netlisting Apr  3 20:29:04 2017
\o 
\o Netlisting Statistics:
\o 	Number of components:  530
\o 
\o 	Elapsed time:          0.0s
\o Errors: 0	Warnings: 0
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a hiiSetCurrentForm('sevVariablesForm1)
\r t
\a sevVariablesForm1->expression->value = "40n"
\r "40n"
\a _hiFormApplyCB(sevVariablesForm1)
\r t
\a hiFormDone(sevVariablesForm1)
\r t
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->anaListBox->value = '( "1   tran       0      300n                 yes" )
\r ("1   tran       0      300n                 yes")
\a sevWindowForm1->anaListBox->value = '("1   tran       0      300n                 yes" )
\r ("1   tran       0      300n                 yes")
\a (sevEditSelectedAnas 'sevSession1)
\p > 
\a _asii_UltraSim1_analysis_form->tran_stop->value = "1000n"
\r "1000n"
\a hiFormApply(_asii_UltraSim1_analysis_form)
\r t
\a hiFormDone(_asii_UltraSim1_analysis_form)
\r t
\r t
\a sevNetlistAndRun('sevSession1)
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:31:58 2017
\o End netlisting Apr  3 20:31:59 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   1.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a schSingleSelectPt()
\i -0.5625:-2.3125
\r nil
\a schZoomFit(1.0 0.9)
\r t
\a schSingleSelectPt()
\i -3.75:-0.0625
\r nil
\a schSingleSelectPt()
\i -0.0625:-1.4375
\r nil
\a schDirectEdit(1)
\i -0.4375:-1.75
\i -0.4375:-1.75
\p > 
\a addPoint(hiGetCommandPoint())
\i 0.5:-2.6875
\r t
\r nil
\a schSingleSelectPt()
\i 1.0625:-2.375
\r nil
\a schSingleSelectPt()
\i -5.0625:0.3125
\r nil
\a schSingleSelectPt()
\i -1.75:0.4375
\r nil
\a schSingleSelectPt()
\i -6.5:1.875
\r nil
\a schDirectEdit(1)
\i -6.9375:1.8125
\i -6.9375:1.8125
\p > 
\a addPoint(hiGetCommandPoint())
\i 4.0625:-2.1875
\r t
\r nil
\a schSingleSelectPt()
\i 4.0625:-2.1875
\r nil
\a schDirectEdit(1)
\i 3.875:-2.125
\i 3.875:-2.125
\p > 
\a addPoint(hiGetCommandPoint())
\i 1.75:-1.875
\r t
\r nil
\a schDirectEdit(1)
\i 4.25:2.125
\i 4.25:2.125
\p > 
\a addPoint(hiGetCommandPoint())
\i -7.375:-2.4375
\r t
\r nil
\a schSingleSelectPt()
\i -6.0625:-1.8125
\r nil
\a hiSetCurrentWindow(window(4))
\r t
\a sevNetlistAndRun('sevSession1)
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:51:07 2017
\o End netlisting Apr  3 20:51:07 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->varListBox->value = '( "4   tfal     50p    " )
\r ("4   tfal     50p    ")
\a sevWindowForm1->varListBox->value = '( "5   tdel     0      " )
\r ("5   tdel     0      ")
\a sevWindowForm1->varListBox->value = '( "5   tdel     0      " )
\r ("5   tdel     0      ")
\a sevWindowForm1->varListBox->value = '("5   tdel     0      " )
\r ("5   tdel     0      ")
\a (sevEditSelectedVars 'sevSession1)
\p > 
\a hiiSetCurrentForm('sevVariablesForm1)
\r t
\a sevVariablesForm1->expression->value = "10n"
\r "10n"
\a (hiFormApply (hiGetCurrentForm)) (sevRunEngine (sevSession (hiGetCurrentForm)))
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:54:11 2017
\o End netlisting Apr  3 20:54:11 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a sevVariablesForm1->expression->value = "40n"
\r "40n"
\a (hiFormApply (hiGetCurrentForm)) (sevRunEngine (sevSession (hiGetCurrentForm)))
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:54:44 2017
\o End netlisting Apr  3 20:54:44 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a schZoomFit(1.0 0.9)
\r t
\a schHiObjectProperty()
\r t
\a schSingleSelectPt()
\i -5.4375:0.875
\r t
\a hiiSetCurrentForm('schObjPropForm)
\r t
\a schObjPropForm->per->value = "tper*4 s"
\r "tper*4 s"
\a schObjPropForm->pw->value = "inper s"
\r "inper s"
\a schObjPropForm->per->value = "inper s"
\r "inper s"
\a schObjPropForm->pw->value = "inper/2 s"
\r "inper/2 s"
\a hiFormDone(schObjPropForm)
\r t
\a schSingleSelectPt()
\i -4.875:0.75
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -4.375:0.6875
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -4.0625:0.5625
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -3.5:0.5
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -2.8125:0.25
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -2.625:-0.0625
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -2.0625:-0.0625
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -5.4375:0.9375
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -5.5625:0.875
\r t
\a mouseAddPt()
\i -5.0625:0.75
\r t
\r t
\a schSingleSelectPt()
\i -4.9375:0.75
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -5:0.8125
\r t
\a mouseAddPt()
\i -4.5:0.6875
\r t
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -4.4375:0.6875
\r t
\a mouseAddPt()
\i -3.9375:0.5625
\r t
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -3.9375:0.5625
\r t
\a mouseAddPt()
\i -3.4375:0.4375
\r t
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -3.4375:0.4375
\r t
\a mouseAddPt()
\i -2.9375:0.3125
\r t
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -2.9375:0.3125
\r t
\a mouseAddPt()
\i -2.625:0
\r t
\r t
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -2.625:0
\r t
\a mouseAddPt()
\i -2.0625:0
\r t
\r t
\a schSingleSelectPt()
\i -0.6875:-1.4375
\r nil
\a schSingleSelectPt()
\i -5:-0.8125
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -4.1875:-1.0625
\r nil
\a schSingleSelectPt()
\i -4.375:-1
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -4:-1.0625
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -3.1875:-1.4375
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -2.75:-1.5
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -2.3125:-1.5
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -1.9375:-1.5625
\r t
\a schHiDelete()
\r t
\a schSingleSelectPt()
\i -5.3125:-0.75
\r t
\a schHiObjectProperty()
\r t
\a schObjPropForm->pw->value = "inper/2 s"
\r "inper/2 s"
\a schObjPropForm->per->value = "inper s"
\r "inper s"
\a hiFormDone(schObjPropForm)
\r t
\a schSingleSelectPt()
\i -5.1875:-1.5625
\r nil
\a schHiCopy()
\p > 
\a mouseAddPt()
\i -5.4375:-0.6875
\r t
\a mouseAddPt()
\i -4.9375:-0.8125
\r t
\a schHiCopy()
\r t
\a mouseAddPt()
\i -4.9375:-0.8125
\r t
\a mouseAddPt()
\i -4.375:-0.9375
\r t
\a schHiCopy()
\r t
\a mouseAddPt()
\i -4.375:-0.9375
\r t
\a mouseAddPt()
\i -3.9375:-1.0625
\r t
\a schHiCopy()
\r t
\a mouseAddPt()
\i -3.9375:-1.0625
\r t
\a mouseAddPt()
\i -3.25:-1.5
\r t
\a schHiCopy()
\r t
\a mouseAddPt()
\i -3.25:-1.5
\r t
\a mouseAddPt()
\i -2.75:-1.5
\r t
\a schHiCopy()
\r t
\a mouseAddPt()
\i -2.75:-1.5
\r t
\a mouseAddPt()
\i -2.3125:-1.5
\r t
\a schHiCopy()
\r t
\a mouseAddPt()
\i -2.3125:-1.5
\r t
\a mouseAddPt()
\i -1.875:-1.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a schSingleSelectPt()
\i -1.25:-1.875
\r nil
\a schHiCheckAndSave()
\o Extracting "sim_sorter schematic"
\o Schematic check completed with no errors.
\w *WARNING* geGetEditCellView: Invalid graphics editor window.
\w *WARNING* geGetEditCellView: Invalid graphics editor window.
\w *WARNING* geGetEditCellView: Invalid graphics editor window.
\o "lab3 sim_sorter schematic" saved.
\r t
\a hiiSetCurrentForm('sevVariablesForm1)
\r t
\a (hiFormApply (hiGetCurrentForm)) (sevRunEngine (sevSession (hiGetCurrentForm)))
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:59:23 2017
\o End netlisting Apr  3 20:59:23 2017
\o 
\o Netlisting Statistics:
\o 	Number of components:   19
\o 
\o 	Elapsed time:          0.0s
\o Errors: 0	Warnings: 0
\o *Warning*	Additional design variables have been found during netlisting.
\o  		A value is necessary for successful simulation.
\o 		To simulate, assign values to all design variables with 
\o 		the Variables->Edit... menu, and use "Netlist and Run".
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\o Errors encountered during simulation.
\o For more information, see the log files accessible from the Simulation -> Output Log menu.
\r t
\a (hiFormApply (hiGetCurrentForm)) (sevRunEngine (sevSession (hiGetCurrentForm)))
\p > 
\a hiDBoxOK(sevblockingDialogBox) 
\r t
\r nil
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->varListBox->value = '( "1   inper           " )
\r ("1   inper           ")
\a sevWindowForm1->varListBox->value = '("1   inper           " )
\r ("1   inper           ")
\a (sevEditSelectedVars 'sevSession1)
\r t
\a sevVariablesForm1->expression->value = "120n"
\r "120n"
\a hiFormDone(sevVariablesForm1)
\r t
\r t
\a sevNetlistAndRun('sevSession1)
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 20:59:50 2017
\o End netlisting Apr  3 20:59:50 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->varListBox->value = '( "1   inper    120n   " )
\r ("1   inper    120n   ")
\a sevWindowForm1->varListBox->value = '("1   inper    120n   " )
\r ("1   inper    120n   ")
\a (sevEditSelectedVars 'sevSession1)
\p > 
\a sevVariablesForm1->expression->value = "240n"
\r "240n"
\a (hiFormApply (hiGetCurrentForm)) (sevRunEngine (sevSession (hiGetCurrentForm)))
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 21:00:46 2017
\o End netlisting Apr  3 21:00:46 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\a hiSetCurrentWindow(window(13))
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(13))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->outListBox->value = '( "6   A0                           yes  yes  no " )
\r ("6   A0                           yes  yes  no ")
\a sevWindowForm1->outListBox->value = '( "1   W0                           yes  yes  no " )
\r ("1   W0                           yes  yes  no ")
\a sevWindowForm1->outListBox->value = '( "9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a sevNetlistAndRun('sevSession1)
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 21:01:51 2017
\o End netlisting Apr  3 21:01:51 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\p > 
\a hiFormDone(sevOutputsForm1)
\r t
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\p > 
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '( "8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '("8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a (sevEditSelectedOuts 'sevSession1)
\r t
\a sevWindowForm1->outListBox->value = '( "8   A2                           yes  yes  no " )
\r ("8   A2                           yes  yes  no ")
\a sevWindowForm1->outListBox->value = '( "9   A3                           yes  yes  no " )
\r ("9   A3                           yes  yes  no ")
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevWindowForm1->outListBox->value = '( "1   W0                           yes  yes  no " "2   W1                           yes  yes  no " "3   W2                           yes  yes  no " "4   W3                           yes  yes  no " "5   CLK                          yes  yes  no " "6   A0                           yes  yes  no " "7   A1                           yes  yes  no " "8   A2                           yes  yes  no " "9   A3                           yes  yes  no " )
\r ("1   W0                           yes  yes  no " "2   W1                           yes  yes  no " "3   W2                           yes  yes  no " "4   W3                           yes  yes  no " "5   CLK                          yes  yes  no "
\r     "6   A0                           yes  yes  no " "7   A1                           yes  yes  no " "8   A2                           yes  yes  no " "9   A3                           yes  yes  no "
\r )
\a sevDeleteSelections('sevSession1)
\r t
\a hiiSetCurrentForm('sevOutputsForm1)
\r t
\a hiFormCancel(sevOutputsForm1)
\r t
\r nil
\a hiiSetCurrentForm('sevVariablesForm1)
\r t
\a hiFormCancel(sevVariablesForm1)
\r t
\r nil
\a sevChangeOutsOnSchematic('sevSession1 'plot)
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(4))
\r t
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a schZoomFit(1.0 0.9)
\r t
\a schSingleSelectPt()
\i -1.0625:1.1875
\i -1.0625:1.1875
\r t
\a schSingleSelectPt()
\i -1.0625:1.0625
\i -1.0625:1.0625
\r t
\a schSingleSelectPt()
\i -1.0625:0.9375
\i -1.0625:0.9375
\r t
\a schSingleSelectPt()
\i -1.0625:0.8125
\i -1.0625:0.8125
\r t
\a schSingleSelectPt()
\i -1.0625:0.6875
\i -1.0625:0.6875
\r t
\a schSingleSelectPt()
\i -1.0625:0.625
\i -1.0625:0.625
\r t
\a schSingleSelectPt()
\i -1.125:0.4375
\i -1.125:0.4375
\r t
\a schSingleSelectPt()
\i -1.0625:0.3125
\i -1.0625:0.3125
\r t
\a schSingleSelectPt()
\i -1.0625:0.1875
\i -1.0625:0.1875
\r t
\a schSingleSelectPt()
\i -1.0625:0.0625
\i -1.0625:0.0625
\r t
\a schSingleSelectPt()
\i -1.125:-0.0625
\i -1.125:-0.0625
\r t
\a schExtendSelectPt()
\i -1.0625:-0.25
\i -1.0625:-0.25
\r t
\a schSingleSelectPt()
\i -1.0625:-0.3125
\i -1.0625:-0.3125
\r t
\a schSingleSelectPt()
\i -1.0625:-0.4375
\i -1.0625:-0.4375
\r t
\a schSingleSelectPt()
\i -1.0625:-0.5625
\i -1.0625:-0.5625
\r t
\a schSingleSelectPt()
\i -1.0625:-0.6875
\i -1.0625:-0.6875
\r t
\a schSingleSelectPt()
\i -1.0625:-0.8125
\i -1.0625:-0.8125
\r t
\a schSingleSelectPt()
\i 1.875:1.25
\i 1.875:1.25
\r t
\a schSingleSelectPt()
\i 1.8125:1.0625
\i 1.8125:1.0625
\r t
\a schSingleSelectPt()
\i 1.8125:0.9375
\i 1.8125:0.9375
\r t
\a schSingleSelectPt()
\i 1.8125:0.8125
\i 1.8125:0.8125
\r t
\a schSingleSelectPt()
\i 1.8125:0.6875
\i 1.8125:0.6875
\r t
\a schSingleSelectPt()
\i 1.8125:0.5625
\i 1.8125:0.5625
\r t
\a schSingleSelectPt()
\i 1.8125:0.5
\i 1.8125:0.5
\r t
\a schSingleSelectPt()
\i 1.8125:0.25
\i 1.8125:0.25
\r t
\a schSingleSelectPt()
\i 1.8125:0.25
\i 1.8125:0.25
\r t
\a schSingleSelectPt()
\i 1.8125:0.0625
\i 1.8125:0.0625
\r t
\a schSingleSelectPt()
\i 1.8125:0
\i 1.8125:0
\r t
\a schSingleSelectPt()
\i 1.8125:-0.125
\i 1.8125:-0.125
\r t
\a schSingleSelectPt()
\i 1.875:-0.3125
\i 1.875:-0.3125
\r t
\a schSingleSelectPt()
\i 1.875:-0.4375
\i 1.875:-0.4375
\r t
\a schSingleSelectPt()
\i 1.8125:-0.5
\i 1.8125:-0.5
\r t
\a schSingleSelectPt()
\i 1.625:-0.6875
\i 1.625:-0.6875
\r t
\a astiCancelSelect(hiGetCurrentWindow())
\r unbound
\a hiSetCurrentWindow(window(4))
\r t
\a sevNetlistAndRun('sevSession1)
\p > 
\a hiDBoxOK(sevblockingDialogBox) 
\r t
\o Delete sst2 data in /afs/ualberta.ca/home/a/k/akolkar/simulation/sim_sorter/UltraSim/schematic/psf.
\o generate netlist...
\o Begin Incremental Netlisting Apr  3 21:03:04 2017
\o End netlisting Apr  3 21:03:04 2017
\o 
\o 	The netlist is up to date.
\o 	Time taken to compare the design with netlist:   0.0s
\o       ...successful.
\o compose simulator input file...
\o       ...successful.
\o start simulator if needed...
\o       ...successful.
\o simulate...
\r t
\o simulation completed successfully.
\o reading simulation data...
\o       ...successful.
\a hiSetCurrentWindow(window(3))
\r t
\a schZoomFit(1.0 0.9)
\r t
\a hiSetCurrentWindow(window(4))
\r t
\a sevSaveState('sevSession1)
\p > 
\a hiiSetCurrentForm('sevSaveForm1)
\r t
\a sevSaveForm1->optionCellView->value = "Cellview"
\r "Cellview"
\a hiFormDone(sevSaveForm1)
\o Loading adpServer.cxt 
\r t
\r t
\a hiResizeWindow(window(4) list(1251:494 1832:866))
\r t
\a hiResizeWindow(window(4) list(1251:494 1833:866))
\r t
\a hiCloseWindow(window(4))
\r t
\a hiSetCurrentWindow(window(3))
\r t
\o Simulation design variables differ from those on the cellView,
\o they have been saved in the file "/tmp/saved-design-variables".
\o To save future changes, copy variables to cellView before exiting.
\a deInstallApp(getCurrentWindow() "analogArtist-Schematic")
\o Selecting corner "session-default" so that the model path matches the session default.
\r t
\a sevLoadState('sevSession2)
\p > 
\a hiiSetCurrentForm('sevLoadForm2)
\r t
\a sevLoadForm2->optionCellView->value = "Cellview"
\r "Cellview"
\a hiFormDone(sevLoadForm2)
\p > 
\a hiDBoxOK(aaMessage) 
\r t
\r t
\r t
\a hiResizeWindow(window(18) list(3:359 581:731))
\r t
\a hiResizeWindow(window(18) list(5:359 583:731))
\r t
\a hiResizeWindow(window(18) list(8:358 586:730))
\r t
\a hiResizeWindow(window(18) list(11:358 589:730))
\r t
\a hiResizeWindow(window(18) list(18:356 596:728))
\r t
\a hiResizeWindow(window(18) list(29:353 607:725))
\r t
\a hiResizeWindow(window(18) list(30:353 608:725))
\r t
\a hiResizeWindow(window(18) list(32:352 610:724))
\r t
\a hiResizeWindow(window(18) list(38:353 616:725))
\r t
\a hiResizeWindow(window(18) list(49:351 627:723))
\r t
\a hiResizeWindow(window(18) list(66:348 644:720))
\r t
\a hiResizeWindow(window(18) list(83:348 661:720))
\r t
\a hiResizeWindow(window(18) list(101:348 679:720))
\r t
\a hiResizeWindow(window(18) list(116:348 694:720))
\r t
\a hiResizeWindow(window(18) list(129:348 707:720))
\r t
\a hiResizeWindow(window(18) list(130:348 708:720))
\r t
\a hiResizeWindow(window(18) list(132:347 710:719))
\r t
\a hiResizeWindow(window(18) list(132:348 710:720))
\r t
\a hiResizeWindow(window(18) list(135:350 713:722))
\r t
\a hiResizeWindow(window(18) list(141:351 719:723))
\r t
\a hiResizeWindow(window(18) list(145:352 723:724))
\r t
\a hiResizeWindow(window(18) list(164:352 742:724))
\r t
\a hiResizeWindow(window(18) list(177:351 755:723))
\r t
\a hiResizeWindow(window(18) list(192:351 770:723))
\r t
\a hiResizeWindow(window(18) list(203:351 781:723))
\r t
\a hiResizeWindow(window(18) list(216:351 794:723))
\r t
\a hiResizeWindow(window(18) list(227:351 805:723))
\r t
\a hiResizeWindow(window(18) list(238:351 816:723))
\r t
\a hiResizeWindow(window(18) list(251:351 829:723))
\r t
\a hiResizeWindow(window(18) list(260:351 838:723))
\r t
\a hiResizeWindow(window(18) list(268:351 846:723))
\r t
\a hiResizeWindow(window(18) list(277:351 855:723))
\r t
\a hiResizeWindow(window(18) list(285:334 863:706))
\r t
\a hiResizeWindow(window(18) list(285:334 863:706))
\r t
\a hiResizeWindow(window(18) list(286:334 864:706))
\r t
\a hiResizeWindow(window(18) list(287:334 865:706))
\r t
\a hiResizeWindow(window(18) list(-4:27 1916:1025))
\r t
\a hiResizeWindow(window(18) list(287:334 865:706))
\r t
\a hiSetCurrentWindow(window(18))
\r t
\a sevEditModels('sevSession2)
\r t
\a hiiSetCurrentForm('editModelsForm)
\r t
\a editModelsForm->modelLibLibrariesListBox->value = '( "  /EDA/kits/gpdk18/models/gpdk.scs                               NN" )
\r ("  /EDA/kits/gpdk18/models/gpdk.scs                               NN")
\a sevChooseSimulator('sevSession2)
\p > 
\a hiiSetCurrentForm('sevSimulatorForm2)
\r t
\a hiiSetCurrentForm('editModelsForm)
\r t
\a hiiSetCurrentForm('sevSimulatorForm2)
\r t
\a sevSimulatorForm2->simulator->value = "UltraSim"
\r "UltraSim"
\a hiFormDone(sevSimulatorForm2)
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(18))
\r t
\o Simulation design variables differ from those on the cellView,
\o they have been saved in the file "/tmp/saved-design-variables".
\o To save future changes, copy variables to cellView before exiting.
\e *Error* putprop: first arg must be either symbol, list, defstruct or user type - nil
\e *Error* putprop: first arg must be either symbol, list, defstruct or user type - nil
\e *Error* car: Can't take car of atom  - ERROR
\r t
\r t
\a editModelsForm->modelLibLibrariesFileStringField->value = "/EDA/kits/gpdk18/models/gpdk.scs"
\r "/EDA/kits/gpdk18/models/gpdk.scs"
\a hiiSetCurrentForm('editModelsForm)
\r t
\a hiResizeWindow(window(18) list(288:333 866:705))
\r t
\a hiResizeWindow(window(18) list(289:331 867:703))
\r t
\a hiResizeWindow(window(18) list(293:325 871:697))
\r t
\a hiResizeWindow(window(18) list(308:307 886:679))
\r t
\a hiResizeWindow(window(18) list(323:296 901:668))
\r t
\a hiResizeWindow(window(18) list(332:287 910:659))
\r t
\a hiResizeWindow(window(18) list(334:287 912:659))
\r t
\a hiResizeWindow(window(18) list(338:283 916:655))
\r t
\a hiResizeWindow(window(18) list(344:275 922:647))
\r t
\a hiResizeWindow(window(18) list(350:267 928:639))
\r t
\a hiResizeWindow(window(18) list(354:265 932:637))
\r t
\a hiResizeWindow(window(18) list(355:264 933:636))
\r t
\a hiResizeWindow(window(18) list(358:263 936:635))
\r t
\a hiResizeWindow(window(18) list(362:261 940:633))
\r t
\a hiResizeWindow(window(18) list(363:258 941:630))
\r t
\a hiResizeWindow(window(18) list(364:257 942:629))
\r t
\a hiResizeWindow(window(18) list(365:256 943:628))
\r t
\a hiResizeWindow(window(18) list(366:255 944:627))
\r t
\a hiResizeWindow(window(18) list(369:255 947:627))
\r t
\a hiResizeWindow(window(18) list(376:247 954:619))
\r t
\a hiResizeWindow(window(18) list(376:247 954:619))
\r t
\a hiResizeWindow(window(18) list(377:243 955:615))
\r t
\a hiResizeWindow(window(18) list(379:239 957:611))
\r t
\a hiResizeWindow(window(18) list(380:237 958:609))
\r t
\a hiResizeWindow(window(18) list(382:236 960:608))
\r t
\a hiResizeWindow(window(18) list(383:234 961:606))
\r t
\a hiResizeWindow(window(18) list(384:232 962:604))
\r t
\a hiResizeWindow(window(18) list(388:231 966:603))
\r t
\a hiResizeWindow(window(18) list(392:227 970:599))
\r t
\a hiResizeWindow(window(18) list(392:226 970:598))
\r t
\a hiResizeWindow(window(18) list(395:221 973:593))
\r t
\a hiResizeWindow(window(18) list(399:218 977:590))
\r t
\a hiResizeWindow(window(18) list(402:212 980:584))
\r t
\a hiResizeWindow(window(18) list(404:209 982:581))
\r t
\a hiResizeWindow(window(18) list(411:202 989:574))
\r t
\a hiResizeWindow(window(18) list(415:196 993:568))
\r t
\a hiResizeWindow(window(18) list(419:192 997:564))
\r t
\a hiResizeWindow(window(18) list(423:188 1001:560))
\r t
\a hiResizeWindow(window(18) list(427:185 1005:557))
\r t
\a hiResizeWindow(window(18) list(431:181 1009:553))
\r t
\a hiResizeWindow(window(18) list(435:177 1013:549))
\r t
\a hiResizeWindow(window(18) list(436:173 1014:545))
\r t
\a hiResizeWindow(window(18) list(439:169 1017:541))
\r t
\a hiResizeWindow(window(18) list(441:164 1019:536))
\r t
\a hiResizeWindow(window(18) list(443:160 1021:532))
\r t
\a hiResizeWindow(window(18) list(448:153 1026:525))
\r t
\a hiResizeWindow(window(18) list(448:149 1026:521))
\r t
\a hiResizeWindow(window(18) list(450:144 1028:516))
\r t
\a hiResizeWindow(window(18) list(452:139 1030:511))
\r t
\a hiResizeWindow(window(18) list(454:134 1032:506))
\r t
\a hiResizeWindow(window(18) list(456:128 1034:500))
\r t
\a hiResizeWindow(window(18) list(460:121 1038:493))
\r t
\a hiResizeWindow(window(18) list(466:114 1044:486))
\r t
\a hiResizeWindow(window(18) list(468:108 1046:480))
\r t
\a hiResizeWindow(window(18) list(470:102 1048:474))
\r t
\a hiResizeWindow(window(18) list(471:100 1049:472))
\r t
\a hiResizeWindow(window(18) list(471:98 1049:470))
\r t
\a hiResizeWindow(window(18) list(473:97 1051:469))
\r t
\a hiResizeWindow(window(18) list(474:96 1052:468))
\r t
\a hiResizeWindow(window(18) list(474:95 1052:467))
\r t
\a hiResizeWindow(window(18) list(475:96 1053:468))
\r t
\a hiResizeWindow(window(18) list(475:98 1053:470))
\r t
\a hiResizeWindow(window(18) list(475:101 1053:473))
\r t
\a hiResizeWindow(window(18) list(475:111 1053:483))
\r t
\a hiResizeWindow(window(18) list(475:122 1053:494))
\r t
\a hiResizeWindow(window(18) list(472:131 1050:503))
\r t
\a hiResizeWindow(window(18) list(472:137 1050:509))
\r t
\a hiResizeWindow(window(18) list(471:146 1049:518))
\r t
\a hiResizeWindow(window(18) list(468:153 1046:525))
\r t
\a hiResizeWindow(window(18) list(466:159 1044:531))
\r t
\a hiResizeWindow(window(18) list(464:164 1042:536))
\r t
\a hiResizeWindow(window(18) list(464:166 1042:538))
\r t
\a hiResizeWindow(window(18) list(464:167 1042:539))
\r t
\a hiResizeWindow(window(18) list(464:170 1042:542))
\r t
\a hiResizeWindow(window(18) list(464:171 1042:543))
\r t
\a hiResizeWindow(window(18) list(463:172 1041:544))
\r t
\a hiResizeWindow(window(18) list(463:175 1041:547))
\r t
\a hiResizeWindow(window(18) list(462:176 1040:548))
\r t
\a hiResizeWindow(window(18) list(462:177 1040:549))
\r t
\a sevEditModels('sevSession2)
\r t
\a hiFormCancel(editModelsForm)
\r t
\a sevChooseSimulator('sevSession2)
\p > 
\a hiiSetCurrentForm('sevSimulatorForm2)
\r t
\a sevSimulatorForm2->simulator->value = "UltraSim"
\r "UltraSim"
\a hiFormDone(sevSimulatorForm2)
\w *WARNING* aaDeleteEventCB: cb nil not on event "sim-env:set-modelPath"
\a hiSetCurrentWindow(window(3))
\r t
\a hiSetCurrentWindow(window(18))
\r t
\o Selecting corner "session-default" so that the model path matches the session default.
\r t
\r t
\a sevEditModels('sevSession2)
\r t
\a hiiSetCurrentForm('editModelsForm)
\r t
\a editModelsForm->modelLibLibrariesFileStringField->value="/EDA/kits/gpdk18/models/gpdk.scs"
\r "/EDA/kits/gpdk18/models/gpdk.scs"
\a editModelsForm->modelLibLibrariesSectionStringField->value = "NN"
\r "NN"
\a hiFormDone(editModelsForm)
\r t
\a sevLoadState('sevSession2)
\p > 
\a hiiSetCurrentForm('sevLoadForm2)
\r t
\a hiFormDone(sevLoadForm2)
\r t
\r t
\a hiSetCurrentWindow(window(18))
\r t
\a sevChooseEnvironmentOptions('sevSession2)
\p > 
\a hiiSetCurrentForm('_asii_UltraSim3_envOpts_form)
\r t
\a hiFormCancel(_asii_UltraSim3_envOpts_form)
\r t
\r t
\a sevEditModels('sevSession2)
\r t
\a hiiSetCurrentForm('editModelsForm)
\r t
\a hiFormCancel(editModelsForm) 
\r t
\a hiCloseWindow(window(18))
\r t
\p > 
\a hiDBoxCancel(sevblockingDialogBox) 
\r t
\a hiSetCurrentWindow(window(3))
\r t
\o Simulation design variables differ from those on the cellView,
\o they have been saved in the file "/tmp/saved-design-variables".
\o To save future changes, copy variables to cellView before exiting.
\w *WARNING* Unable to annotate simulation results.
\w 
\w *WARNING* A check-out of the Artist simulation environment feature failed.
\w Suggestion: [1] Check your license file.
\w 	    [2] Ask a current user of the feature to exit the Artist simulation environment.
\w 
\a hiCloseWindow(window(3))
\r t
\p > 
\a hiDBoxOK(geDBox) 
\r t
\a ciwHiExit()
\p > 
\a hiDBoxOK(ciwDBox) 
\r t
\o 
